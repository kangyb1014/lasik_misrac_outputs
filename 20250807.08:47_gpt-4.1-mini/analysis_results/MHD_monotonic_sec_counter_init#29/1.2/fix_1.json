{
  "user_message": "<target code>Here is the code that failed to compile:\n```c\nstatic clockid_t mono_clock_id = (clockid_t)-1;\nstatic time_t mono_clock_start = 0;\nenum _MHD_mono_clock_source mono_clock_source = _MHD_CLOCK_NO_SOURCE;\nstatic time_t gettime_start = 0;\n\nvoid MHD_monotonic_sec_counter_init(void)\n{\n    FILE *log = fopen(\"/tmp/logs/232.txt\", \"a\");\n    if (log == NULL) return;\n\n#ifdef HAVE_CLOCK_GETTIME\n    struct timespec ts;\n\n    fprintf(log, \"[Init] Starting clock_gettime checks.\\n\");\n\n#ifdef CLOCK_MONOTONIC_COARSE\n    if (0 == clock_gettime(CLOCK_MONOTONIC_COARSE, &ts))\n    {\n        mono_clock_id = CLOCK_MONOTONIC_COARSE;\n        mono_clock_start = ts.tv_sec;\n        mono_clock_source = _MHD_CLOCK_GETTIME;\n        fprintf(log, \"[Info] Using CLOCK_MONOTONIC_COARSE, start time: %ld\\n\", mono_clock_start);\n        fclose(log);\n        return;\n    }\n#endif\n\n#ifdef CLOCK_MONOTONIC_RAW_APPROX\n    if (0 == clock_gettime(CLOCK_MONOTONIC_RAW_APPROX, &ts))\n    {\n        mono_clock_id = CLOCK_MONOTONIC_RAW_APPROX;\n        mono_clock_start = ts.tv_sec;\n        mono_clock_source = _MHD_CLOCK_GETTIME;\n        fprintf(log, \"[Info] Using CLOCK_MONOTONIC_RAW_APPROX, start time: %ld\\n\", mono_clock_start);\n        fclose(log);\n        return;\n    }\n#endif\n\n    fprintf(log, \"[Warning] No preferred clock_gettime extension succeeded.\\n\");\n#endif\n\n    mono_clock_source = _MHD_CLOCK_NO_SOURCE;\n    fprintf(log, \"[Info] No valid clock source found, mono_clock_source set to NO_SOURCE.\\n\");\n\n    fclose(log);\n}\n\n```\n</target code>\n<build error>\nThe build failed with the following error:\n```\nmhd_mono_clock.c:151:18: error: redefinition of 'mono_clock_id'\n  151 | static clockid_t mono_clock_id = (clockid_t)-1;\n      |                  ^~~~~~~~~~~~~\nmhd_mono_clock.c:85:18: note: previous definition of 'mono_clock_id' with type 'clockid_t' {aka 'int'}\n   85 | static clockid_t mono_clock_id = _MHD_UNWANTED_CLOCK;\n      |                  ^~~~~~~~~~~~~\nmake[3]: *** [Makefile:2133: libmicrohttpd_la-mhd_mono_clock.lo] Error 1\nmake[2]: *** [Makefile:449: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2\n```\n</build error>\n<response format>\nProvide your answer with these answers.\n- fixed_test_code: the fixed test code that compiles successfully.\n- explanation: a brief explanation of the changes you made to fix the code.\nHere are the constraints for the test code:\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- The test code MUST preserve the original logic of MHD_monotonic_sec_counter_init as much as possible.\n- You MUST not define the main function.\n- You MUST not define macros.\n- The test code MUST not contain any mock functions.\n</response format>\n<instruction>\nPlease fix the code so that it compiles successfully.\n</instruction>\n",
  "fixed_test_code": "// Fixed code: removed redefinition of 'mono_clock_id'\n// Assume the original definition at line 85 remains untouched\n\n// Only the second occurrence of mono_clock_id declaration is removed from this file\n\nenum _MHD_mono_clock_source mono_clock_source = _MHD_CLOCK_NO_SOURCE;\nstatic time_t mono_clock_start = 0;\nstatic time_t gettime_start = 0;\n\nvoid MHD_monotonic_sec_counter_init(void)\n{\n    FILE *log = fopen(\"/tmp/logs/232.txt\", \"a\");\n    if (log == NULL) return;\n\n#ifdef HAVE_CLOCK_GETTIME\n    struct timespec ts;\n\n    fprintf(log, \"[Init] Starting clock_gettime checks.\\n\");\n\n#ifdef CLOCK_MONOTONIC_COARSE\n    if (0 == clock_gettime(CLOCK_MONOTONIC_COARSE, &ts))\n    {\n        mono_clock_id = CLOCK_MONOTONIC_COARSE;\n        mono_clock_start = ts.tv_sec;\n        mono_clock_source = _MHD_CLOCK_GETTIME;\n        fprintf(log, \"[Info] Using CLOCK_MONOTONIC_COARSE, start time: %ld\\n\", mono_clock_start);\n        fclose(log);\n        return;\n    }\n#endif\n\n#ifdef CLOCK_MONOTONIC_RAW_APPROX\n    if (0 == clock_gettime(CLOCK_MONOTONIC_RAW_APPROX, &ts))\n    {\n        mono_clock_id = CLOCK_MONOTONIC_RAW_APPROX;\n        mono_clock_start = ts.tv_sec;\n        mono_clock_source = _MHD_CLOCK_GETTIME;\n        fprintf(log, \"[Info] Using CLOCK_MONOTONIC_RAW_APPROX, start time: %ld\\n\", mono_clock_start);\n        fclose(log);\n        return;\n    }\n#endif\n\n    fprintf(log, \"[Warning] No preferred clock_gettime extension succeeded.\\n\");\n#endif\n\n    mono_clock_source = _MHD_CLOCK_NO_SOURCE;\n    fprintf(log, \"[Info] No valid clock source found, mono_clock_source set to NO_SOURCE.\\n\");\n\n    fclose(log);\n}\n",
  "explanation": "The build error was due to redefining the static variable 'mono_clock_id' which was already defined at line 85. To fix the compilation error, I removed the duplicate definition \"static clockid_t mono_clock_id = (clockid_t)-1;\" from this part of the code. This avoids the redefinition conflict while preserving the original logic in the function MHD_monotonic_sec_counter_init as requested."
}