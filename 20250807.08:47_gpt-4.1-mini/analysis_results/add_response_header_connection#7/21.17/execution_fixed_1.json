{
  "result": "compile_failed",
  "message": "In file included from internal.h:34,\n                 from response.c:49:\n../../src/include/microhttpd.h:584:38: error: expected identifier or '(' before string constant\n  584 | #define MHD_HTTP_HEADER_CONNECTION   \"Connection\"\n      |                                      ^~~~~~~~~~~~\nresponse.c:338:19: note: in expansion of macro 'MHD_HTTP_HEADER_CONNECTION'\n  338 | static const char MHD_HTTP_HEADER_CONNECTION[] = \"Connection\";\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:35,\n                 from response.c:49:\nmhd_assert.h:45:32: error: expected identifier or '(' before 'void'\n   45 | #  define mhd_assert(ignore) ((void) 0)\n      |                                ^~~~\nresponse.c:339:13: note: in expansion of macro 'mhd_assert'\n  339 | static void mhd_assert(int x) { if (!(x)) { fprintf(stderr, \"Assertion failed!\\n\"); exit(1); } }\n      |             ^~~~~~~~~~\nmhd_assert.h:45:38: error: expected ')' before numeric constant\n   45 | #  define mhd_assert(ignore) ((void) 0)\n      |                                      ^\nresponse.c:339:13: note: in expansion of macro 'mhd_assert'\n  339 | static void mhd_assert(int x) { if (!(x)) { fprintf(stderr, \"Assertion failed!\\n\"); exit(1); } }\n      |             ^~~~~~~~~~\nresponse.c:88:51: error: expected identifier or '(' before 'do'\n   88 | #define _MHD_insert_header_first(presponse, phdr) do { \\\n      |                                                   ^~\nresponse.c:340:13: note: in expansion of macro '_MHD_insert_header_first'\n  340 | static void _MHD_insert_header_first(struct MHD_Response *response, struct MHD_HTTP_Res_Header *hdr)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:104:3: error: expected identifier or '(' before 'while'\n  104 | } while (0)\n      |   ^~~~~\nresponse.c:340:13: note: in expansion of macro '_MHD_insert_header_first'\n  340 | static void _MHD_insert_header_first(struct MHD_Response *response, struct MHD_HTTP_Res_Header *hdr)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:348:6: error: redeclaration of 'enum MHD_ValueKind'\n  348 | enum MHD_ValueKind { MHD_HEADER_KIND = 1 };\n      |      ^~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from response.c:49:\n../../src/include/microhttpd.h:2244:6: note: originally defined here\n 2244 | enum MHD_ValueKind\n      |      ^~~~~~~~~~~~~\nresponse.c:348:22: error: redeclaration of enumerator 'MHD_HEADER_KIND'\n  348 | enum MHD_ValueKind { MHD_HEADER_KIND = 1 };\n      |                      ^~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from response.c:49:\n../../src/include/microhttpd.h:2260:3: note: previous definition of 'MHD_HEADER_KIND' with type 'enum MHD_ValueKind'\n 2260 |   MHD_HEADER_KIND = 1,\n      |   ^~~~~~~~~~~~~~~\nresponse.c:889:1: error: static declaration of 'MHD_get_response_element_n_' follows non-static declaration\n  889 | MHD_get_response_element_n_(struct MHD_Response *response, enum MHD_ValueKind kind, const char *key, size_t key_len)\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from response.c:50:\nresponse.h:71:1: note: previous declaration of 'MHD_get_response_element_n_' with type 'struct MHD_HTTP_Res_Header *(struct MHD_Response *, enum MHD_ValueKind,  const char *, size_t)' {aka 'struct MHD_HTTP_Res_Header *(struct MHD_Response *, enum MHD_ValueKind,  const char *, long unsigned int)'}\n   71 | MHD_get_response_element_n_ (struct MHD_Response *response,\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~\nmake[3]: *** [Makefile:2182: libmicrohttpd_la-response.lo] Error 1\nmake[2]: *** [Makefile:449: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2"
}