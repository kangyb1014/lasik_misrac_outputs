{
  "user_message": "An agent A claimed that the following is_websocket_request code violates the MISRA C 2023 rule 2.2.\n<misra_rule>\nMISRA C 2023 Rule 2.2 is A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code..\n</misra_rule>\n<target_code>\nHere is the original code of is_websocket_request.\n```c\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n\n  (void) con;  /* Unused. Silent compiler warning. */\n\n  return ((upg_header != NULL) && (con_header != NULL)\n          && (0 == strcmp (upg_header, WS_UPGRADE_VALUE))\n          && (NULL != strstr (con_header, \"Upgrade\")))\n         ? MHD_YES\n         : MHD_NO;\n}\n```\n</target_code>\n<scenario>\nThe agent A provided the following violation scenario:In the function is_websocket_request, the parameter 'con' is not used except for being explicitly cast to void. This parameter serves no purpose in the function's logic and removing it would not alter the behavior, which means its presence constitutes dead code as per MISRA C 2023 Rule 2.2.\n</scenario>\n<test_code>\nAlso, the agent A provided the following modified code that prints out the log to support their scenario:\n```c\n\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n  FILE *log = fopen(\"/tmp/logs/506.txt\", \"a\");\n  if (log == NULL) {\n    return MHD_NO; // fail silently if log file can't open\n  }\n\n  // Log start and parameter states\n  fprintf(log, \"Entering is_websocket_request\\n\");\n  fprintf(log, \"Pointer con: %p (unused)\\n\", (void *)con);\n  fprintf(log, \"upg_header: %s\\n\", upg_header ? upg_header : \"NULL\");\n  fprintf(log, \"con_header: %s\\n\", con_header ? con_header : \"NULL\");\n\n  // The con parameter is cast to void intentionally,\n  // but it is never actually used otherwise.\n  (void) con;  /* Unused. Silent compiler warning. */\n\n  int condition = ((upg_header != NULL) && (con_header != NULL)\n                   && (0 == strcmp (upg_header, WS_UPGRADE_VALUE))\n                   && (NULL != strstr (con_header, \"Upgrade\")));\n\n  fprintf(log, \"Condition evaluation result: %d\\n\", condition);\n\n  enum MHD_Result result = condition ? MHD_YES : MHD_NO;\n\n  fprintf(log, \"Return result: %d\\n\", result);\n  fprintf(log, \"Exiting is_websocket_request\\n\\n\");\n  fclose(log);\n  return result;\n}\n\n```\nThe test code failed to compile, so we could not obtain any output.\n\n</test_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false)\n</response format>\n<instruction>   \nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "MISRA C 2023 Rule 2.2 prohibits dead code, defined as code executed but whose removal does not affect program behavior. In this function, the parameter 'con' is explicitly cast to void to suppress unused parameter warnings. Although 'con' is not otherwise used, it is a function parameter and its presence affects the function's interface (e.g., callers must provide that argument). Removing 'con' would change the function signature, potentially impacting callers, so it cannot be considered dead code. The mere unused status of a parameter, handled by a void cast, does not violate the rule. Therefore, the claim that 'con' constitutes dead code here is incorrect."
}