{
  "user_message": "Target function code is:\n```c\nstatic enum MHD_Result\ncompress_buf (z_stream *strm, const void *src, size_t src_size, size_t *offset,\n              void **dest, size_t *dest_size,\n              void *tmp)\n{\n  unsigned int have;\n  enum MHD_Result ret;\n  int flush;\n  void *tmp_dest;\n  *dest = NULL;\n  *dest_size = 0;\n  do\n  {\n    if (src_size > CHUNK)\n    {\n      strm->avail_in = CHUNK;\n      src_size -= CHUNK;\n      flush = Z_NO_FLUSH;\n    }\n    else\n    {\n      strm->avail_in = (uInt) src_size;\n      flush = Z_SYNC_FLUSH;\n    }\n    *offset += strm->avail_in;\n    strm->next_in = (const Bytef *) src;\n    do\n    {\n      strm->avail_out = CHUNK;\n      strm->next_out = tmp;\n      ret = (Z_OK == deflate (strm, flush)) ? MHD_YES : MHD_NO;\n      have = CHUNK - strm->avail_out;\n      *dest_size += have;\n      tmp_dest = realloc (*dest, *dest_size);\n      if (NULL == tmp_dest)\n      {\n        free (*dest);\n        *dest = NULL;\n        return MHD_NO;\n      }\n      *dest = tmp_dest;\n      memcpy (((uint8_t *) (*dest)) + ((*dest_size) - have), tmp, have);\n    }\n    while (0 == strm->avail_out);\n  }\n  while (flush != Z_SYNC_FLUSH);\n  return ret;\n}\n```\n\nStatic call graph of the target function is:\n```json\n{'compress_buf': {'callees': [], 'callers': ['read_cb']}, 'read_cb': {'callees': ['compress_buf'], 'callers': []}}\n```\n\n\nList additional symbols that are required to analyze the target function to determine if the target function code violates the following MISRA C rule:\nA function parameter should not be modified. Note that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\nThe list will be included in the prompt for the next agent, so be concise and clear.\nExplain why each symbol is required in the analysis of the target function for the MISRA C rule.\n",
  "close_symbols": [
    "enum MHD_Result",
    "z_stream",
    "deflate",
    "Z_NO_FLUSH",
    "Z_SYNC_FLUSH",
    "Z_OK",
    "MHD_YES",
    "MHD_NO",
    "CHUNK"
  ],
  "explanation": "The symbol 'enum MHD_Result' is needed to understand the return type and the constants used for return status. 'z_stream' type definition is necessary to check the structure fields and to verify how its pointer parameter 'strm' is modified. The 'deflate' function is called with 'strm'; understanding its effect is important to determine if any pointer parameters are modified indirectly. Constants 'Z_NO_FLUSH', 'Z_SYNC_FLUSH', and 'Z_OK' are used to control and check the behavior of 'deflate' and flush status, necessary for code comprehension. 'MHD_YES' and 'MHD_NO' are return values mapped from 'deflate' results, relevant to overall function behavior. Finally, 'CHUNK' is used to set input and output sizes and loops, understanding its value is relevant to reasoning about parameter modification within loops. Together, these symbols provide the context to assess if any function parameters themselves\u2014specifically pointer parameters\u2014are modified, per the MISRA C rule."
}