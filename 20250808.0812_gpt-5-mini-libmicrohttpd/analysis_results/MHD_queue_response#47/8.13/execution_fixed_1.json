{
  "result": "compile_failed",
  "message": "In file included from internal.h:34,\n                 from connection.c:37:\n../../src/include/microhttpd.h:550:35: error: expected declaration specifiers or '...' before '(' token\n  550 | #define MHD_ICY_FLAG ((uint32_t) (((uint32_t) 1) << 31))\n      |                                   ^\nconnection.c:2148:20: note: in expansion of macro 'MHD_ICY_FLAG'\n 2148 | const unsigned int MHD_ICY_FLAG = 0x80000000u;\n      |                    ^~~~~~~~~~~~\nconnection.c:2149:20: error: 'MHD_RF_HEAD_ONLY_RESPONSE' redeclared as different kind of symbol\n 2149 | const unsigned int MHD_RF_HEAD_ONLY_RESPONSE = 0x01u;\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:37:\n../../src/include/microhttpd.h:3887:3: note: previous definition of 'MHD_RF_HEAD_ONLY_RESPONSE' with type 'enum MHD_ResponseFlags'\n 3887 |   MHD_RF_HEAD_ONLY_RESPONSE = 1 << 4\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2150:11: error: 'MHD_HTTP_VER_1_0' redeclared as different kind of symbol\n 2150 | const int MHD_HTTP_VER_1_0 = 10;\n      |           ^~~~~~~~~~~~~~~~\nIn file included from connection.c:37:\ninternal.h:860:3: note: previous definition of 'MHD_HTTP_VER_1_0' with type 'enum MHD_HTTP_Version'\n  860 |   MHD_HTTP_VER_1_0 = 2,\n      |   ^~~~~~~~~~~~~~~~\nconnection.c:2151:11: error: 'MHD_HTTP_MTHD_CONNECT' redeclared as different kind of symbol\n 2151 | const int MHD_HTTP_MTHD_CONNECT = 1;\n      |           ^~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:37:\ninternal.h:927:3: note: previous definition of 'MHD_HTTP_MTHD_CONNECT' with type 'enum MHD_HTTP_Method'\n  927 |   MHD_HTTP_MTHD_CONNECT = 6,\n      |   ^~~~~~~~~~~~~~~~~~~~~\nconnection.c:2152:11: error: 'MHD_HTTP_MTHD_HEAD' redeclared as different kind of symbol\n 2152 | const int MHD_HTTP_MTHD_HEAD = 2;\n      |           ^~~~~~~~~~~~~~~~~~\nIn file included from connection.c:37:\ninternal.h:911:3: note: previous definition of 'MHD_HTTP_MTHD_HEAD' with type 'enum MHD_HTTP_Method'\n  911 |   MHD_HTTP_MTHD_HEAD = 2,\n      |   ^~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:37:\n../../src/include/microhttpd.h:344:46: error: expected identifier or '(' before numeric constant\n  344 | #define MHD_HTTP_OK                          200\n      |                                              ^~~\nconnection.c:2153:20: note: in expansion of macro 'MHD_HTTP_OK'\n 2153 | const unsigned int MHD_HTTP_OK = 200u;\n      |                    ^~~~~~~~~~~\n../../src/include/microhttpd.h:352:46: error: expected identifier or '(' before numeric constant\n  352 | #define MHD_HTTP_NO_CONTENT                  204\n      |                                              ^~~\nconnection.c:2154:20: note: in expansion of macro 'MHD_HTTP_NO_CONTENT'\n 2154 | const unsigned int MHD_HTTP_NO_CONTENT = 204u;\n      |                    ^~~~~~~~~~~~~~~~~~~\n../../src/include/microhttpd.h:374:46: error: expected identifier or '(' before numeric constant\n  374 | #define MHD_HTTP_NOT_MODIFIED                304\n      |                                              ^~~\nconnection.c:2155:20: note: in expansion of macro 'MHD_HTTP_NOT_MODIFIED'\n 2155 | const unsigned int MHD_HTTP_NOT_MODIFIED = 304u;\n      |                    ^~~~~~~~~~~~~~~~~~~~~\nconnection.c: In function 'mhd_probe_log':\nconnection.c:2202:93: warning: format '%p' expects argument of type 'void *', but argument 7 has type 'MHD_thread_handle_ID_' {aka 'struct _MHD_thread_handle_ID_'} [-Wformat=]\n 2202 |         fprintf(f, \" connection->state=%d in_access_handler=%d suspended=%d in_idle=%d tid=%p\\n\",\n      |                                                                                            ~^\n      |                                                                                             |\n      |                                                                                             void *\n......\n 2207 |                 connection->tid);\n      |                 ~~~~~~~~~~~~~~~                                                              \n      |                           |\n      |                           MHD_thread_handle_ID_ {aka struct _MHD_thread_handle_ID_}\nconnection.c:2216:66: error: 'const struct MHD_Response' has no member named 'ref_count'\n 2216 |                 response->is_pipe, response->total_size, response->ref_count);\n      |                                                                  ^~\nconnection.c: At top level:\nconnection.c:6416:13: error: static declaration of 'MHD_update_last_activity_' follows non-static declaration\n 6416 | static void MHD_update_last_activity_(struct MHD_Connection *connection)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\nconnection.h:200:1: note: previous declaration of 'MHD_update_last_activity_' with type 'void(struct MHD_Connection *)'\n  200 | MHD_update_last_activity_ (struct MHD_Connection *connection);\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:7200:13: error: conflicting types for 'MHD_connection_handle_idle'; have 'void(struct MHD_Connection *)'\n 7200 | static void MHD_connection_handle_idle(struct MHD_Connection *connection)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\nconnection.h:137:1: note: previous declaration of 'MHD_connection_handle_idle' with type 'enum MHD_Result(struct MHD_Connection *)'\n  137 | MHD_connection_handle_idle (struct MHD_Connection *connection);\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /usr/include/x86_64-linux-gnu/sys/param.h:23,\n                 from connection.c:63:\nconnection.c: In function 'MHD_queue_response':\nconnection.c:7589:38: error: incompatible types when assigning to type 'enum MHD_resp_sender_' from type 'void *'\n 7589 |         connection->rp.resp_sender = NULL;\n      |                                      ^~~~\nconnection.c:7591:38: error: incompatible types when assigning to type 'enum MHD_resp_sender_' from type 'void *'\n 7591 |         connection->rp.resp_sender = NULL;\n      |                                      ^~~~\nmake[3]: *** [Makefile:2098: libmicrohttpd_la-connection.lo] Error 1\nmake[2]: *** [Makefile:449: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2"
}