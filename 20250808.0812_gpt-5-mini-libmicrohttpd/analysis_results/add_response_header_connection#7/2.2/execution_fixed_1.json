{
  "result": "compile_failed",
  "message": "response.c:340:23: error: 'MHD_RAF_HAS_CONNECTION_HDR' redeclared as different kind of symbol\n  340 | static const unsigned MHD_RAF_HAS_CONNECTION_HDR = 0x01u;\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from response.c:51:\ninternal.h:407:3: note: previous definition of 'MHD_RAF_HAS_CONNECTION_HDR' with type 'enum MHD_ResponseAutoFlags'\n  407 |   MHD_RAF_HAS_CONNECTION_HDR = 1 << 0,    /**< Has \"Connection\" header */\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:341:23: error: 'MHD_RAF_HAS_CONNECTION_CLOSE' redeclared as different kind of symbol\n  341 | static const unsigned MHD_RAF_HAS_CONNECTION_CLOSE = 0x02u;\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from response.c:51:\ninternal.h:408:3: note: previous definition of 'MHD_RAF_HAS_CONNECTION_CLOSE' with type 'enum MHD_ResponseAutoFlags'\n  408 |   MHD_RAF_HAS_CONNECTION_CLOSE = 1 << 1,  /**< Has \"Connection: close\" */\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:35,\n                 from response.c:51:\nmhd_assert.h:45:32: error: expected identifier or '(' before 'void'\n   45 | #  define mhd_assert(ignore) ((void) 0)\n      |                                ^~~~\nresponse.c:342:20: note: in expansion of macro 'mhd_assert'\n  342 | static inline void mhd_assert(int cond) { (void)cond; }\n      |                    ^~~~~~~~~~\nmhd_assert.h:45:38: error: expected ')' before numeric constant\n   45 | #  define mhd_assert(ignore) ((void) 0)\n      |                                      ^\nresponse.c:342:20: note: in expansion of macro 'mhd_assert'\n  342 | static inline void mhd_assert(int cond) { (void)cond; }\n      |                    ^~~~~~~~~~\nresponse.c:90:51: error: expected identifier or '(' before 'do'\n   90 | #define _MHD_insert_header_first(presponse, phdr) do { \\\n      |                                                   ^~\nresponse.c:380:13: note: in expansion of macro '_MHD_insert_header_first'\n  380 | static void _MHD_insert_header_first (struct MHD_Response *r, struct MHD_HTTP_Res_Header *h)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:106:3: error: expected identifier or '(' before 'while'\n  106 | } while (0)\n      |   ^~~~~\nresponse.c:380:13: note: in expansion of macro '_MHD_insert_header_first'\n  380 | static void _MHD_insert_header_first (struct MHD_Response *r, struct MHD_HTTP_Res_Header *h)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:962:1: error: conflicting types for 'MHD_get_response_element_n_'; have 'struct MHD_HTTP_Res_Header *(struct MHD_Response *, int,  const char *, size_t)' {aka 'struct MHD_HTTP_Res_Header *(struct MHD_Response *, int,  const char *, long unsigned int)'}\n  962 | MHD_get_response_element_n_ (struct MHD_Response *response,\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from response.c:52:\nresponse.h:71:1: note: previous declaration of 'MHD_get_response_element_n_' with type 'struct MHD_HTTP_Res_Header *(struct MHD_Response *, enum MHD_ValueKind,  const char *, size_t)' {aka 'struct MHD_HTTP_Res_Header *(struct MHD_Response *, enum MHD_ValueKind,  const char *, long unsigned int)'}\n   71 | MHD_get_response_element_n_ (struct MHD_Response *response,\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c: In function 'MHD_get_response_element_n_':\nresponse.c:968:43: error: 'struct MHD_Response' has no member named 'headers'\n  968 |   struct MHD_HTTP_Res_Header *h = response->headers;\n      |                                           ^~\nmake[3]: *** [Makefile:2182: libmicrohttpd_la-response.lo] Error 1\nmake[2]: *** [Makefile:449: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2"
}