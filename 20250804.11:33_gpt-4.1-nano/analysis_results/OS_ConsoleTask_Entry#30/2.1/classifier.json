{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.1 is: A project shall not contain unreachable code.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n- test_code: a modified OS_ConsoleTask_Entry code that contains useful probe functions that print useful logs to a file \"/tmp/logs/241.txt\". The logs should contain the control path and state information of the violation scenario. If the MISRA C rule is not violated, you can just return an empty string for the test code.\nHere are the constraints for the test code:\n- DO NOT introduce new violations to demonstrate your scenario.\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- The test code MUST preserve the original logic of OS_ConsoleTask_Entry as much as possible.\n- You MUST NOT define the main function.\n- You MUST NOT define macros.\n- The test code MUST not contain any mock functions.\n</response format>\n<target_code>\nHere is the code of OS_ConsoleTask_Entry:\n```c\nstatic void *OS_ConsoleTask_Entry(void *arg)\n{\n    OS_VoidPtrValueWrapper_t           local_arg;\n    OS_impl_console_internal_record_t *local;\n    OS_object_token_t                  token;\n\n    /* cppcheck-suppress unreadVariable // intentional use of other union member */\n    local_arg.opaque_arg = arg;\n    if (OS_ObjectIdGetById(OS_LOCK_MODE_REFCOUNT, OS_OBJECT_TYPE_OS_CONSOLE, local_arg.id, &token) == OS_SUCCESS)\n    {\n        local = OS_OBJECT_TABLE_GET(OS_impl_console_table, token);\n\n        /* Loop forever (unless shutdown is set) */\n        while (OS_SharedGlobalVars.GlobalState != OS_SHUTDOWN_MAGIC_NUMBER)\n        {\n            OS_ConsoleOutput_Impl(&token);\n            sem_wait(&local->data_sem);\n        }\n        OS_ObjectIdRelease(&token);\n    }\n    return NULL;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function OS_ConsoleTask_Entry:\nextern OS_SharedGlobalVars_t OS_SharedGlobalVars\n...\n#define OS_SHUTDOWN_MAGIC_NUMBER 0xABADC0DE\n</additional code>\nJudge whether the above OS_ConsoleTask_Entry code violates the rule 2.1 or not.",
  "is_rule_violated": false,
  "scenario": "The code contains a 'while' loop that runs until 'OS_SharedGlobalVars.GlobalState == OS_SHUTDOWN_MAGIC_NUMBER'. Inside the loop, there are calls to 'OS_ConsoleOutput_Impl' and 'sem_wait', but no break statements or other control flow statements that could make the loop unreachable. The loop's conditional depends on a global variable, which could become false, leading to loop exit, but the code within the loop is reachable if the initial conditions are true.",
  "test_code": ""
}