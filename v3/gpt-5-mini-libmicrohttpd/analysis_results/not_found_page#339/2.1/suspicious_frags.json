{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 2.1 is: A project shall not contain unreachable code.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of not_found_page:\n```c\nstatic enum MHD_Result\nnot_found_page (const void *cls,\n                const char *mime,\n                struct Session *session,\n                struct MHD_Connection *connection)\n{\n  enum MHD_Result ret;\n  struct MHD_Response *response;\n  (void) cls;     /* Unused. Silent compiler warning. */\n  (void) session; /* Unused. Silent compiler warning. */\n\n  /* unsupported HTTP method */\n  response =\n    MHD_create_response_from_buffer_static (strlen (NOT_FOUND_ERROR),\n                                            (const void *) NOT_FOUND_ERROR);\n  if (NULL == response)\n    return MHD_NO;\n  ret = MHD_queue_response (connection,\n                            MHD_HTTP_NOT_FOUND,\n                            response);\n  if (MHD_YES !=\n      MHD_add_response_header (response,\n                               MHD_HTTP_HEADER_CONTENT_ENCODING,\n                               mime))\n  {\n    fprintf (stderr,\n             \"Failed to set content encoding header!\\n\");\n  }\n  MHD_destroy_response (response);\n  return ret;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "No unreachable code is present in the provided function. Specific reasons: \n- The two (void) casts for cls and session are merely to silence unused-parameter warnings; they are executed and not unreachable. \n- The early return (if (NULL == response) return MHD_NO;) is a guarded return that only executes when response is NULL; all code after that point is reachable when response != NULL. \n- The subsequent calls (MHD_queue_response, MHD_add_response_header, fprintf in the conditional, MHD_destroy_response, and return ret) are reachable at runtime depending on the outcomes of the preceding calls; there is no code textually placed after an unconditional return, no dead labels, no unreachable loop bodies, and no unconditional goto that would render following statements unreachable. \n- There are no conditional constructs that syntactically make code unreachable (e.g., if (0) { ... }), and no macros or inline constructs within the shown code that introduce unconditional returns or jumps. \nIf there is concern about unreachable behavior caused by external functions or macros (for example, if MHD_queue_response, MHD_add_response_header, or the MHD_* macros expand to constructs that unconditionally jump/return), those must be examined in their definitions, but within the given source fragment there is no unreachable code to investigate."
}