{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of has_unprocessed_upload_body_data_in_buffer:\n```c\nstatic bool\nhas_unprocessed_upload_body_data_in_buffer (struct MHD_Connection *c)\n{\n  mhd_assert (MHD_CONNECTION_BODY_RECEIVING == c->state);\n  if (! c->rq.have_chunked_upload)\n    return 0 != c->read_buffer_offset;\n\n  /* Chunked upload */\n  mhd_assert (0 != c->rq.remaining_upload_size); /* Must not be possible in MHD_CONNECTION_BODY_RECEIVING state */\n  if (c->rq.current_chunk_offset == c->rq.current_chunk_size)\n  {\n    /* 0 == c->rq.current_chunk_size: Waiting the chunk size (chunk header).\n       0 != c->rq.current_chunk_size: Waiting for chunk-closing CRLF. */\n    return false;\n  }\n  return 0 != c->read_buffer_offset; /* Chunk payload data in the read buffer */\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nmhd_assert (0 != c->rq.remaining_upload_size); /* Must not be possible in MHD_CONNECTION_BODY_RECEIVING state */\n```\nFocus on the above code fragment and judge whether it violates the rule 2.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "Not violated in normal cases: mhd_assert is a diagnostic macro. If it is enabled at runtime it can change behaviour (e.g. abort or log) when the condition fails, so its presence can affect program behaviour and therefore is not dead code. If it is compiled out (expands to nothing) then it is not executed (and note 2 of the rule excludes unreachable/non\u2011executed code). A violation would only occur if the macro expands to code that (a) is executed in all builds, (b) has no side\u2011effects and (c) the condition is provably true so that removing the assertion would not change program behaviour \u2014 in that specific case the assertion would constitute dead code."
}