{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of reply_with_method_not_supported:\n```c\nstatic enum MHD_Result\nreply_with_method_not_supported (struct MHD_Connection *c)\n{\n  static const char page_content[] =\n    \"<html><head><title>Requested HTTP Method Is Not Supported</title></head>\" \\\n    \"<body>The requested HTTP method is not supported.</body></html>\";\n  static const size_t page_content_len =\n    (sizeof(page_content) / sizeof(char)) - 1;\n  struct MHD_Response *resp;\n  enum MHD_Result ret;\n\n  resp = MHD_create_response_from_buffer_static (page_content_len, page_content)\n  ;\n  if (NULL == resp)\n    return MHD_NO;\n\n  /* Ignore possible error when adding the header as the reply will work even\n     without this header. */\n  (void) MHD_add_response_header (resp,\n                                  MHD_HTTP_HEADER_CONTENT_TYPE, \"text/html\");\n\n  ret = MHD_queue_response (c, MHD_HTTP_NOT_IMPLEMENTED, resp);\n  MHD_destroy_response (resp);\n  return ret;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "(void) MHD_add_response_header (resp,\n                                  MHD_HTTP_HEADER_CONTENT_TYPE, \"text/html\");",
    "static enum MHD_Result\nreply_with_method_not_supported (struct MHD_Connection *c)",
    "ret = MHD_queue_response (c, MHD_HTTP_NOT_IMPLEMENTED, resp);",
    "resp = MHD_create_response_from_buffer_static (page_content_len, page_content)\n  ;"
  ],
  "explanation": "The other fragments do not need investigation for Rule 8.13: page_content is already declared as 'static const char page_content[]' (const-qualified), page_content_len is 'static const size_t' (const-qualified), and the local variables 'resp' and 'ret' are pointers/objects that are created and then passed to API functions which likely modify or destroy them (so making them pointer-to-const would be inappropriate). Calls that destroy or enqueue the response (MHD_destroy_response, MHD_queue_response) and the declaration of 'struct MHD_Response *resp;' are consistent with non-const usage because the response object is intended to be modified/freed. Therefore only the listed fragments (function parameter and calls where string/ buffer pointers are passed) warrant further investigation to verify whether the APIs and pointers should be const-qualified under MISRA C 2023 Rule 8.13."
}