{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of reply_with_method_not_supported:\n```c\nstatic enum MHD_Result\nreply_with_method_not_supported (struct MHD_Connection *c)\n{\n  static const char page_content[] =\n    \"<html><head><title>Requested HTTP Method Is Not Supported</title></head>\" \\\n    \"<body>The requested HTTP method is not supported.</body></html>\";\n  static const size_t page_content_len =\n    (sizeof(page_content) / sizeof(char)) - 1;\n  struct MHD_Response *resp;\n  enum MHD_Result ret;\n\n  resp = MHD_create_response_from_buffer_static (page_content_len, page_content)\n  ;\n  if (NULL == resp)\n    return MHD_NO;\n\n  /* Ignore possible error when adding the header as the reply will work even\n     without this header. */\n  (void) MHD_add_response_header (resp,\n                                  MHD_HTTP_HEADER_CONTENT_TYPE, \"text/html\");\n\n  ret = MHD_queue_response (c, MHD_HTTP_NOT_IMPLEMENTED, resp);\n  MHD_destroy_response (resp);\n  return ret;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "(void) MHD_add_response_header (resp,\n                                  MHD_HTTP_HEADER_CONTENT_TYPE, \"text/html\");"
  ],
  "explanation": "Other fragments do not appear to be dead code and therefore do not need investigation under MISRA C:2023 Rule 2.2. The page_content string is the body used to build the HTTP response. The page_content_len constant and its initialization are used to size the response buffer (initialization is not the same as an assignment and is not a candidate for dead code). The call to MHD_create_response_from_buffer_static allocates/creates the response object that is later queued; the NULL check on resp is required error handling. The call to MHD_queue_response and the subsequent MHD_destroy_response are part of the response lifecycle and affect program behaviour; returning ret propagates the result. The syntactic semicolon placement and function/variable declarations are harmless formatting/definitions and do not constitute removable executed operations."
}