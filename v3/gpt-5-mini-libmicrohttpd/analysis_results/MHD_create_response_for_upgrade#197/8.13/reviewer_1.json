{
  "user_message": "An agent A claimed that the following MHD_create_response_for_upgrade code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_create_response_for_upgrade.\n```c\n_MHD_EXTERN struct MHD_Response *\nMHD_create_response_for_upgrade (MHD_UpgradeHandler upgrade_handler,\n                                 void *upgrade_handler_cls)\n{\n  struct MHD_Response *response;\n\n  if (NULL == upgrade_handler)\n    return NULL; /* invalid request */\n  response = MHD_calloc_ (1, sizeof (struct MHD_Response));\n  if (NULL == response)\n    return NULL;\n#if defined(MHD_USE_POSIX_THREADS) || defined(MHD_USE_W32_THREADS)\n  if (! MHD_mutex_init_ (&response->mutex))\n  {\n    free (response);\n    return NULL;\n  }\n#endif\n  response->upgrade_handler = upgrade_handler;\n  response->upgrade_handler_cls = upgrade_handler_cls;\n  response->total_size = 0;\n  response->reference_count = 1;\n  if (MHD_NO ==\n      MHD_add_response_header (response,\n                               MHD_HTTP_HEADER_CONNECTION,\n                               \"Upgrade\"))\n  {\n    MHD_destroy_response (response);\n    return NULL;\n  }\n  return response;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'void *upgrade_handler_cls' is not const-qualified but is only stored (response->upgrade_handler_cls = upgrade_handler_cls) and never modified in the shown code. Per MISRA C 2023 Rule 8.13 it should be declared as 'const void *upgrade_handler_cls' (and the corresponding field in struct MHD_Response made const) unless the object is intended to be mutable. Therefore the fragment violates Rule 8.13.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The report is not correct as stated. MISRA C:2023 Rule 8.13 encourages using pointers to const when the pointed-to object is not modified, but you cannot conclude a violation from this single snippet. The parameter upgrade_handler_cls is a user-supplied opaque context pointer that is stored and later passed to the upgrade handler; whether that object is intended to be mutable depends on the semantics of the upgrade handler (the MHD_UpgradeHandler type and how upgrade_handler_cls is used elsewhere). If the handler or other code modifies the object via a non-const pointer, then declaring it const here would be incorrect and would change the API. Conversely, if the object is truly never modified anywhere, making it const would be desirable \u2014 but that requires whole-program/API knowledge, not just this function. Therefore the agent\u2019s blanket claim of a Rule 8.13 violation is not justified from the shown fragment alone."
}