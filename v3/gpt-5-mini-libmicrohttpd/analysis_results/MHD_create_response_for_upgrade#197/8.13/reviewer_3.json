{
  "user_message": "An agent A claimed that the following MHD_create_response_for_upgrade code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_create_response_for_upgrade.\n```c\n_MHD_EXTERN struct MHD_Response *\nMHD_create_response_for_upgrade (MHD_UpgradeHandler upgrade_handler,\n                                 void *upgrade_handler_cls)\n{\n  struct MHD_Response *response;\n\n  if (NULL == upgrade_handler)\n    return NULL; /* invalid request */\n  response = MHD_calloc_ (1, sizeof (struct MHD_Response));\n  if (NULL == response)\n    return NULL;\n#if defined(MHD_USE_POSIX_THREADS) || defined(MHD_USE_W32_THREADS)\n  if (! MHD_mutex_init_ (&response->mutex))\n  {\n    free (response);\n    return NULL;\n  }\n#endif\n  response->upgrade_handler = upgrade_handler;\n  response->upgrade_handler_cls = upgrade_handler_cls;\n  response->total_size = 0;\n  response->reference_count = 1;\n  if (MHD_NO ==\n      MHD_add_response_header (response,\n                               MHD_HTTP_HEADER_CONNECTION,\n                               \"Upgrade\"))\n  {\n    MHD_destroy_response (response);\n    return NULL;\n  }\n  return response;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe assignment stores a plain void * ('upgrade_handler_cls') into the response structure field. If the pointed-to object is not intended to be modified by the API, the pointer should be const-qualified (const void *) in both the parameter and the struct member. As written the code uses non-const pointer types, which fails to apply const qualification where possible. (If the API actually needs to modify the pointee, then no violation occurs; otherwise change both the parameter and response->upgrade_handler_cls to const void *.)\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\nMHD_create_response_for_upgrade: entry\n  upgrade_handler is non-NULL\n  upgrade_handler_cls pointer value: (nil)\n  response allocated at 0x55d9b215b2a0\n  assigning upgrade_handler and upgrade_handler_cls into response\n  response->upgrade_handler set: non-NULL\n  response->upgrade_handler_cls stored value: (nil)\n  success: returning response 0x55d9b215b2a0\nMHD_create_response_for_upgrade: entry\n  upgrade_handler is non-NULL\n  upgrade_handler_cls pointer value: (nil)\n  response allocated at 0x55d9b215bcd0\n  assigning upgrade_handler and upgrade_handler_cls into response\n  response->upgrade_handler set: non-NULL\n  response->upgrade_handler_cls stored value: (nil)\n  success: returning response 0x55d9b215bcd0\nMHD_create_response_for_upgrade: entry\n  upgrade_handler is non-NULL\n  upgrade_handler_cls pointer value: (nil)\n  response allocated at 0x55d9b21532e0\n  assigning upgrade_handler and upgrade_handler_cls into response\n  response->upgrade_handler set: non-NULL\n  response->upgrade_handler_cls stored value: (nil)\n  success: returning response 0x55d9b21532e0\nMHD_create_response_for_upgrade: entry\n  upgrade_handler is non-NULL\n  upgrade_handler_cls pointer value: (nil)\n  response allocated at 0x7fdc5c000d70\n  assigning upgrade_handler and upgrade_handler_cls into response\n  response->upgrade_handler set: non-NULL\n  response->upgrade_handler_cls stored value: (nil)\n  success: returning response 0x7fdc5c000d70\nMHD_create_response_for_upgrade: entry\n  upgrade_handler is non-NULL\n  upgrade_handler_cls pointer value: (nil)\n  response allocated at 0x7fdc5c000d70\n  assigning upgrade_handler and upgrade_handler_cls into response\n  response->upgrade_handler set: non-NULL\n  response->upgrade_handler_cls stored value: (nil)\n  success: returning response 0x7fdc5c000d70\nMHD_create_response_for_upgrade: entry\n  upgrade_handler is non-NULL\n  upgrade_handler_cls pointer value: (nil)\n  response allocated at 0x7fdc5c000d70\n  assigning upgrade_handler and upgrade_handler_cls into response\n  response->upgrade_handler set: non-NULL\n  response->upgrade_handler_cls stored value: (nil)\n  success: returning response 0x7fdc5c000d70\nMHD_create_response_for_upgrade: entry\n  upgrade_handler is non-NULL\n  upgrade_handler_cls pointer value: (nil)\n  response allocated at 0x7fdc64009120\n  assigning upgrade_handler and upgrade_handler_cls into response\n  response->upgrade_handler set: non-NULL\n  response->upgrade_handler_cls stored value: (nil)\n  success: returning response 0x7fdc64009120\nMHD_create_response_for_upgrade: entry\n  upgrade_handler is non-NULL\n  upgrade_handler_cls pointer value: (nil)\n  response allocated at 0x7fdc64009120\n  assigning upgrade_handler and upgrade_handler_cls into response\n  response->upgrade_handler set: non-NULL\n  response->upgrade_handler_cls stored value: (nil)\n  success: returning response 0x7fdc64009120\nMHD_create_response_for_upgrade: entry\n  upgrade_handler is non-NULL\n  upgrade_handler_cls pointer value: (nil)\n  response allocated at 0x7fdc64009120\n  assigning upgrade_handler and upgrade_handler_cls into response\n  response->upgrade_handler set: non-NULL\n  response->upgrade_handler_cls stored value: (nil)\n  success: returning response 0x7fdc64009120\nMHD_create_response_for_upgrade: entry\n  upgrade_handler is non-NULL\n  upgrade_handler_cls pointer value: (nil)\n  response allocated at 0x7fdc64009120\n  assigning upgrade_handler and upgrade_handler_cls into response\n  response->upgrade_handler set: non-NULL\n  response->upgrade_handler_cls stored value: (nil)\n  success: returning response 0x7fdc64009120\nMHD_create_response_for_upgrade: entry\n  upgrade_handler is non-NULL\n  upgrade_handler_cls pointer value: (nil)\n  response allocated at 0x7fdc64009120\n  assigning upgrade_handler and upgrade_handler_cls into response\n  response->upgrade_handler set: non-NULL\n  response->upgrade_handler_cls stored value: (nil)\n  success: returning response 0x7fdc64009120\nMHD_create_response_for_upgrade: entry\n  upgrade_handler is non-NULL\n  upgrade_handler_cls pointer value: (nil)\n  response allocated at 0x7fdc64009120\n  assigning upgrade_handler a\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The mere assignment of the parameter upgrade_handler_cls (void *) into the response->upgrade_handler_cls field (also void *) is not, by itself, a clear-cut violation of MISRA C:2023 Rule 8.13. That rule requires pointers to be to const-qualified types whenever possible \u2014 i.e. when the pointee is not (and will not be) modified. The snippet shown only allocates the response and copies the pointer; it contains no evidence that the library does not ever modify the pointee, nor do we see the struct definition or other uses of response->upgrade_handler_cls. Therefore you cannot conclude a definite MISRA 8.13 violation from this function alone. If the API/library never modifies the pointee the pointer should indeed be declared const void * in both the parameter and the struct member; if the API may modify the pointee then the current non-const declarations are appropriate. Without further context (the struct definition and all uses of that field) the report is not proven correct."
}