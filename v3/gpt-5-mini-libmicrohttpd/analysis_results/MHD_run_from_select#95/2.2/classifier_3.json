{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_run_from_select:\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_run_from_select (struct MHD_Daemon *daemon,\n                     const fd_set *read_fd_set,\n                     const fd_set *write_fd_set,\n                     const fd_set *except_fd_set)\n{\n  return MHD_run_from_select2 (daemon,\n                               read_fd_set,\n                               write_fd_set,\n                               except_fd_set,\n#ifdef HAS_FD_SETSIZE_OVERRIDABLE\n                               daemon->fdset_size_set_by_app ?\n                               ((unsigned int) daemon->fdset_size) :\n                               ((unsigned int) _MHD_SYS_DEFAULT_FD_SETSIZE)\n#else  /* ! HAS_FD_SETSIZE_OVERRIDABLE */\n                               ((unsigned int) _MHD_SYS_DEFAULT_FD_SETSIZE)\n#endif /* ! HAS_FD_SETSIZE_OVERRIDABLE */\n                               );\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\n  return MHD_run_from_select2 (daemon,\n                               read_fd_set,\n                               write_fd_set,\n                               except_fd_set,\n#ifdef HAS_FD_SETSIZE_OVERRIDABLE\n                               daemon->fdset_size_set_by_app ?\n                               ((unsigned int) daemon->fdset_size) :\n                               ((unsigned int) _MHD_SYS_DEFAULT_FD_SETSIZE)\n#else  /* ! HAS_FD_SETSIZE_OVERRIDABLE */\n                               ((unsigned int) _MHD_SYS_DEFAULT_FD_SETSIZE)\n#endif /* ! HAS_FD_SETSIZE_OVERRIDABLE */\n                               );\n```\nFocus on the above code fragment and judge whether it violates the rule 2.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "Not violated. The fragment simply forwards parameters to MHD_run_from_select2 and uses a compile-time #ifdef and a runtime ternary to select the fdset size. Neither branch is unreachable in the fragment: the #ifdef selects which expression is compiled, and the ternary selects at runtime based on daemon->fdset_size_set_by_app. No executed operation is redundant or removable without changing behaviour, so Rule 2.2 is not violated here."
}