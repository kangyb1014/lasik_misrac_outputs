{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of MHD_get_fdset:\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_get_fdset (struct MHD_Daemon *daemon,\n               fd_set *read_fd_set,\n               fd_set *write_fd_set,\n               fd_set *except_fd_set,\n               MHD_socket *max_fd)\n{\n  return MHD_get_fdset2 (daemon,\n                         read_fd_set,\n                         write_fd_set,\n                         except_fd_set,\n                         max_fd,\n#ifdef HAS_FD_SETSIZE_OVERRIDABLE\n                         daemon->fdset_size_set_by_app ?\n                         ((unsigned int) daemon->fdset_size) :\n                         ((unsigned int) _MHD_SYS_DEFAULT_FD_SETSIZE)\n#else  /* ! HAS_FD_SETSIZE_OVERRIDABLE */\n                         ((unsigned int) _MHD_SYS_DEFAULT_FD_SETSIZE)\n#endif /* ! HAS_FD_SETSIZE_OVERRIDABLE */\n                         );\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "except_fd_set,",
    "fd_set *read_fd_set,",
    "read_fd_set,",
    "MHD_socket *max_fd)",
    "struct MHD_Daemon *daemon,",
    "fd_set *except_fd_set,",
    "fd_set *write_fd_set,",
    "write_fd_set,",
    "MHD_get_fdset2 (daemon,",
    "max_fd,"
  ],
  "explanation": "I selected all occurrences of pointer parameters in the function signature and the places where those pointer variables are forwarded to MHD_get_fdset2, because Rule 8.13 concerns whether pointer targets could be const-qualified. Other fragments in the function (the return type '_MHD_EXTERN enum MHD_Result', the return statement wrapper, the conditional compilation block, the conditional expression involving 'daemon->fdset_size_set_by_app' and the casts to 'unsigned int', and the macro '_MHD_SYS_DEFAULT_FD_SETSIZE') do not declare or use pointer types that could be made const and therefore are not relevant for investigation under Rule 8.13."
}