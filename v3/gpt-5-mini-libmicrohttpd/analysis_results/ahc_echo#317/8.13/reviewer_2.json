{
  "user_message": "An agent A claimed that the following ahc_echo code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of ahc_echo.\n```c\nstatic enum MHD_Result\nahc_echo (void *cls,\n          struct MHD_Connection *connection,\n          const char *url,\n          const char *method,\n          const char *version,\n          const char *upload_data,\n          size_t *upload_data_size,\n          void **req_cls)\n{\n  static int aptr;\n  struct handler_param *param = (struct handler_param *) cls;\n  struct MHD_Response *response;\n  enum MHD_Result ret;\n\n  (void) url;               /* Unused. Silent compiler warning. */\n  (void) version;           /* Unused. Silent compiler warning. */\n  (void) upload_data;       /* Unused. Silent compiler warning. */\n  (void) upload_data_size;  /* Unused. Silent compiler warning. */\n\n  if (0 != strcmp (method, \"GET\"))\n    return MHD_NO;              /* unexpected method */\n  if (&aptr != *req_cls)\n  {\n    /* do never respond on first call */\n    *req_cls = &aptr;\n    return MHD_YES;\n  }\n  *req_cls = NULL;                  /* reset when done */\n  response =\n    MHD_create_response_from_buffer_static (strlen (param->response_page),\n                                            param->response_page);\n  ret = MHD_queue_response (connection,\n                            MHD_HTTP_OK,\n                            response);\n  MHD_destroy_response (response);\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter req_cls is declared as void ** even though the function never modifies the object pointed to by the void* value\u2014it only reads and assigns the pointer value (*req_cls = &aptr; *req_cls = NULL). According to MISRA C 2023 Rule 8.13, the pointed-to type should be const-qualified when possible; here it could be declared as const void * * (or an appropriate const-qualified pointer type) rather than void **. Thus the current declaration violates the rule.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The report is not correct. Rule 8.13 encourages adding const to the pointed-to type when that is feasible, but it must be applied in the context of the required function signature and semantics. This ahc_echo implementation must match the callback prototype supplied by the microhttpd API (the parameter is declared as void ** in the library's callback type), so you cannot change the parameter type to const void * * without breaking the required signature. Moreover, the function writes to *req_cls (it assigns pointer values: *req_cls = &aptr; *req_cls = NULL;), so the parameter is a pointer-to-pointer used to communicate a pointer back to the caller \u2014 the qualifier placement and API compatibility matter. Given the external API constraint (and the fact the code must match the library's prototype), the agent A's claim of a Rule 8.13 violation here is incorrect."
}