{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_upgraded_connection_mark_app_closed_:\n```c\nvoid\nMHD_upgraded_connection_mark_app_closed_ (struct MHD_Connection *connection)\n{\n  /* Cache 'daemon' here to avoid data races */\n  struct MHD_Daemon *const daemon = connection->daemon;\n#if defined(MHD_USE_THREADS)\n  mhd_assert (NULL == daemon->worker_pool);\n#endif /* MHD_USE_THREADS */\n  mhd_assert (NULL != connection->urh);\n  mhd_assert (0 != (daemon->options & MHD_TEST_ALLOW_SUSPEND_RESUME));\n\n  MHD_mutex_lock_chk_ (&daemon->cleanup_connection_mutex);\n  connection->urh->was_closed = true;\n  connection->resuming = true;\n  daemon->resuming = true;\n  MHD_mutex_unlock_chk_ (&daemon->cleanup_connection_mutex);\n  if ( (MHD_ITC_IS_VALID_ (daemon->itc)) &&\n       (! MHD_itc_activate_ (daemon->itc, \"r\")) )\n  {\n#ifdef HAVE_MESSAGES\n    MHD_DLOG (daemon,\n              _ (\"Failed to signal resume via \" \\\n                 \"inter-thread communication channel.\\n\"));\n#endif\n  }\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nMHD_itc_activate_ (daemon->itc, \"r\")\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": true,
  "scenario": "Violation scenario: MHD_itc_activate_ is declared with a non-const pointer parameter for the string argument (for example: int MHD_itc_activate_(struct MHD_ITC *itc, char *mode)). In that case the call MHD_itc_activate_(daemon->itc, \"r\") passes a string literal (which should be treated as const) to a non-const char* parameter, violating MISRA C 2023 Rule 8.13. Fix by declaring the parameter as const char *mode (or otherwise ensuring the pointer points to a const-qualified type). Note: if the function prototype already uses const char * for the second parameter, then there is no violation."
}