{
  "user_message": "An agent A claimed that the following new_connection_close_ code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of new_connection_close_.\n```c\nstatic void\nnew_connection_close_ (struct MHD_Daemon *daemon,\n                       struct MHD_Connection *connection)\n{\n  mhd_assert (connection->daemon == daemon);\n  mhd_assert (! connection->in_cleanup);\n  mhd_assert (NULL == connection->next);\n  mhd_assert (NULL == connection->nextX);\n#ifdef EPOLL_SUPPORT\n  mhd_assert (NULL == connection->nextE);\n#endif /* EPOLL_SUPPORT */\n\n#ifdef HTTPS_SUPPORT\n  if (NULL != connection->tls_session)\n  {\n    mhd_assert (0 != (daemon->options & MHD_USE_TLS));\n    gnutls_deinit (connection->tls_session);\n  }\n#endif /* HTTPS_SUPPORT */\n  MHD_socket_close_chk_ (connection->socket_fd);\n  MHD_ip_limit_del (daemon,\n                    connection->addr,\n                    connection->addr_len);\n  if (NULL != connection->addr)\n    free (connection->addr);\n  free (connection);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe call passes connection->addr (used only for lookup/removal and freed afterwards) to MHD_ip_limit_del which is declared to take a non-const pointer (for example: void MHD_ip_limit_del(struct MHD_Daemon *, void *addr, size_t addr_len)). If the function does not modify the pointed-to bytes, the parameter should be declared const (e.g. const void *addr). Because the API accepts a non-const pointer when a const-qualified pointer would suffice, this use violates Rule 8.13.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The report is not correct as stated. MISRA Rule 8.13 concerns pointer declarations/types (a pointer should point to a const-qualified type whenever possible) \u2014 i.e. whether the function parameter itself should be declared const. The code snippet only shows a call site; a call passing connection->addr to a function declared to take a non-const pointer is not by itself a Rules violation. To determine a true Rule 8.13 violation you must inspect the declaration and implementation of MHD_ip_limit_del and show that the function does not modify the pointed-to bytes and therefore its parameter could legitimately be declared as const. Without that evidence the claim is speculative: the function may legitimately modify the data or the API may intentionally use a non-const type for compatibility reasons. In short, the call in new_connection_close_ is not proof of a Rule 8.13 violation \u2014 you need to review MHD_ip_limit_del\u2019s prototype/implementation to decide."
}