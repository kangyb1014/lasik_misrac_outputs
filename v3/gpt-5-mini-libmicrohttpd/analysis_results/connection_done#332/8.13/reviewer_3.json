{
  "user_message": "An agent A claimed that the following connection_done code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of connection_done.\n```c\nstatic void\nconnection_done (void *cls,\n                 struct MHD_Connection *connection,\n                 void **req_cls,\n                 enum MHD_RequestTerminationCode toe)\n{\n  struct Request *req = *req_cls;\n\n  (void) cls;\n  (void) connection;\n  (void) toe;\n  if (-1 != req->timerfd)\n    if (0 != close (req->timerfd))\n      abort ();\n  free (req);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'cls' is declared as 'void *cls' but is not modified (it is unused: cast to (void) cls). According to MISRA C 2023 Rule 8.13 the pointer should point to a const-qualified type when possible, so it should be 'const void *cls' (similarly, other unused input pointers such as 'connection' could be 'const').\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The claim is not correct. Rule 8.13 recommends that pointers should point to const-qualified types when that is feasible, but you cannot change a function signature that must match an externally-specified callback/API. connection_done is a callback whose parameter types (void *cls, struct MHD_Connection *connection, void **req_cls, ...) are dictated by the library API; changing cls to const void * would break the required prototype. Moreover req_cls must be a pointer-to-modifiable-pointer (void **) because the API semantics allow the callee to set/modify the per-connection user pointer, so it cannot be made const. The fact that cls and connection are unused in this implementation (cast to (void)) does not imply they should be const in the required callback signature. Therefore the reported violation is incorrect (no MISRA 8.13 breach in this context)."
}