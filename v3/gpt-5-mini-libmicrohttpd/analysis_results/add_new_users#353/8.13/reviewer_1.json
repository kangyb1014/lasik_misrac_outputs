{
  "user_message": "An agent A claimed that the following add_new_users code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of add_new_users.\n```c\nstatic int\nadd_new_users (void)\n{\n  if (! add_new_user_entry (\"joepublic\",\n                            \"password\",\n                            REALM,\n                            ! 0,\n                            0))\n    return 0;\n\n  if (! add_new_user_entry (\"superadmin\",\n                            \"pA$$w0Rd\",\n                            REALM,\n                            ! 0,\n                            ! 0))\n    return 0;\n\n  return ! 0;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThis fragment passes string literals (\"joepublic\", \"password\") to add_new_user_entry. If add_new_user_entry is declared to take non-const pointers (e.g. char *username, char *password, ...), this violates MISRA C 2023 Rule 8.13 because pointers that refer to immutable string literals should be to const-qualified types (const char *). Corrective action: change the function prototype to use const char * for parameters that are not modified.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "MISRA C:2023 Rule 8.13 requires pointer types to be const-qualified where possible (e.g. APIs that do not modify strings should declare parameters as const char *). The fragment shown only contains calls that pass string literals; it does not show the declaration/definition of add_new_user_entry. The rule is concerned with pointer declarations/definitions, not the call site alone. Therefore: - If add_new_user_entry is declared to take non-const char * parameters, then Agent A is correct: that would violate Rule 8.13 (string literals should be passed to parameters declared const char * when the function does not modify them). - If the function is already declared as taking const char * (or otherwise uses const-qualified pointer types), there is no violation. Because the prototype is not provided, the claim cannot be confirmed from the snippet alone. Recommendation: ensure add_new_user_entry\u2019s prototype uses const char * for username/password (and any other pointer parameters that are not modified)."
}