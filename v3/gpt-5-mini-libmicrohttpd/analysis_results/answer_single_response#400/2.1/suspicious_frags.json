{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 2.1 is: A project shall not contain unreachable code.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of answer_single_response:\n```c\nstatic enum MHD_Result\nanswer_single_response (void *cls,\n                        struct MHD_Connection *connection,\n                        const char *url,\n                        const char *method,\n                        const char *version,\n                        const char *upload_data,\n                        size_t *upload_data_size,\n                        void **req_cls)\n{\n  static int marker = 0;\n  (void) cls;  /* Unused */\n  (void) url; (void) version; /* Unused */\n  (void) upload_data; (void) upload_data_size; /* Unused */\n\n  if (NULL == *req_cls)\n  {\n    /* The fist call */\n    *req_cls = (void *) &marker;\n    /* Do not send reply yet. No error. */\n    return MHD_YES;\n  }\n  if ((0 != strcmp (method, MHD_HTTP_METHOD_GET)) &&\n      (0 != strcmp (method, MHD_HTTP_METHOD_HEAD)))\n    return MHD_NO; /* Unsupported method, close connection */\n\n  return MHD_queue_response (connection, MHD_HTTP_OK, resp_single);\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "No unreachable code fragments were identified in the supplied function. Rationale:\n\n- The declarations and (void) casts (static int marker = 0; (void) cls; (void) url; (void) version; (void) upload_data; (void) upload_data_size;) are simple initializations or used to suppress unused-parameter warnings \u2014 they are executed on each invocation and are therefore reachable.\n- The first if (NULL == *req_cls) { ... return MHD_YES; } is reachable on the function\u2019s first invocation for a given request (when *req_cls is NULL). It performs an early return by design; code after this return is not expected to execute in that call but is not unreachable in general (it is reachable on subsequent calls when *req_cls is non-NULL).\n- The second conditional if ((0 != strcmp(...)) && (0 != strcmp(...))) return MHD_NO; is reachable on calls where *req_cls is non-NULL; it conditionally returns for unsupported methods. The final return calling MHD_queue_response(...) is reachable when *req_cls is non-NULL and the method is GET or HEAD.\n- There are no dead statements following unconditional returns within the same execution path, no unreachable labels, no switch-case fall-throughs or constructs that would introduce unreachable code.\n\nGiven these points, there are no code fragments in this function that appear to be statically unreachable and thus no fragments needing investigation for MISRA C Rule 2.1."
}