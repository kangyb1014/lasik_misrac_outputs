{
  "user_message": "An agent A claimed that the following answer_single_response code violates the MISRA C 2023 rule 2.2.\n<misra_rule>\nMISRA C 2023 Rule 2.2 is A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<target_code>\nHere is the original code of answer_single_response.\n```c\nstatic enum MHD_Result\nanswer_single_response (void *cls,\n                        struct MHD_Connection *connection,\n                        const char *url,\n                        const char *method,\n                        const char *version,\n                        const char *upload_data,\n                        size_t *upload_data_size,\n                        void **req_cls)\n{\n  static int marker = 0;\n  (void) cls;  /* Unused */\n  (void) url; (void) version; /* Unused */\n  (void) upload_data; (void) upload_data_size; /* Unused */\n\n  if (NULL == *req_cls)\n  {\n    /* The fist call */\n    *req_cls = (void *) &marker;\n    /* Do not send reply yet. No error. */\n    return MHD_YES;\n  }\n  if ((0 != strcmp (method, MHD_HTTP_METHOD_GET)) &&\n      (0 != strcmp (method, MHD_HTTP_METHOD_HEAD)))\n    return MHD_NO; /* Unsupported method, close connection */\n\n  return MHD_queue_response (connection, MHD_HTTP_OK, resp_single);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe statements '(void) url;' and '(void) version;' are executed no-op cast-to-void expressions used only to suppress 'unused parameter' warnings. Their removal would not affect program behaviour, so they are dead code according to Rule 2.2.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The agent's claim is not correct. The two lines \u201c(void) url; (void) version;\u201d are the conventional idiom for explicitly marking parameters as unused to suppress compiler diagnostics. MISRA C Rule 2.2 targets dead code in the sense of executed operations whose removal would not affect the program\u2019s runtime behaviour; these statements carry no runtime effect and serve as intent/diagnostic annotations. Their presence is to control build-time diagnostics and document intent rather than to perform a runtime action. In practice MISRA guidance treats such idioms as the appropriate way to indicate intentionally unused parameters (and other MISRA rules address the unused-parameter situation). Therefore the report that these lines violate Rule 2.2 is not correct."
}