{
  "user_message": "An agent A claimed that the following answer_single_response code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of answer_single_response.\n```c\nstatic enum MHD_Result\nanswer_single_response (void *cls,\n                        struct MHD_Connection *connection,\n                        const char *url,\n                        const char *method,\n                        const char *version,\n                        const char *upload_data,\n                        size_t *upload_data_size,\n                        void **req_cls)\n{\n  static int marker = 0;\n  (void) cls;  /* Unused */\n  (void) url; (void) version; /* Unused */\n  (void) upload_data; (void) upload_data_size; /* Unused */\n\n  if (NULL == *req_cls)\n  {\n    /* The fist call */\n    *req_cls = (void *) &marker;\n    /* Do not send reply yet. No error. */\n    return MHD_YES;\n  }\n  if ((0 != strcmp (method, MHD_HTTP_METHOD_GET)) &&\n      (0 != strcmp (method, MHD_HTTP_METHOD_HEAD)))\n    return MHD_NO; /* Unsupported method, close connection */\n\n  return MHD_queue_response (connection, MHD_HTTP_OK, resp_single);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe code assigns the address of the static sentinel variable 'marker' to a non-const void*: '*req_cls = (void *)&marker;'. The marker is used only as a read-only sentinel, so the pointer should be to a const-qualified type (e.g. const void * / const int *) whenever possible. Storing a read-only object in a non-const pointer (and casting away potential constness) violates MISRA C 2023 Rule 8.13.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. MISRA C:2023 Rule 8.13 (\u201cA pointer should point to a const\u2011qualified type whenever possible\u201d) is violated here because the sentinel object is used only for read access but is declared as a non\u2011const int and its address is stored in a plain (non\u2011const) void* via *req_cls = (void *)&marker;. In other words, a pointer to a read\u2011only sentinel is not const\u2011qualified even though it could be. Even though the function signature (void **req_cls) comes from an external API and cannot be changed, the code as written does not qualify the sentinel as const and therefore triggers the Rule 8.13 concern. Possible remediations are to make the sentinel const and arrange the code/api usage so the pointer is const\u2011qualified (or document/justify and suppress the rule where the API prevents a conforming change)."
}