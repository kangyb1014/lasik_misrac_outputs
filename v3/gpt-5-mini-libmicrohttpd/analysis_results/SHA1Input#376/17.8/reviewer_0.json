{
  "user_message": "An agent A claimed that the following SHA1Input code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of SHA1Input.\n```c\nstatic enum SHA1_RESULT\nSHA1Input (struct SHA1Context *context, const unsigned char *message_array,\n           unsigned length)\n{\n  if (! length)\n  {\n    return SHA1_RESULT_SUCCESS;\n  }\n  if (! context || ! message_array)\n  {\n    return SHA1_RESULT_NULL;\n  }\n  if (context->computed)\n  {\n    context->corrupted = 1;\n    return SHA1_RESULT_STATE_ERROR;\n  }\n  if (context->corrupted)\n  {\n    return SHA1_RESULT_STATE_ERROR;\n  }\n  while (length-- && ! context->corrupted)\n  {\n    context->message_block[context->message_block_index++]\n      = (*message_array & 0xFF);\n    context->length_low += 8;\n    if (context->length_low == 0)\n    {\n      context->length_high++;\n      if (context->length_high == 0)\n      {\n        context->corrupted = 1;\n      }\n    }\n    if (context->message_block_index == 64)\n    {\n      SHA1ProcessMessageBlock (context);\n    }\n    message_array++;\n  }\n  return SHA1_RESULT_SUCCESS;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe statement 'message_array++;' modifies the pointer parameter 'message_array' (advances the pointer) rather than the object it points to. MISRA C 2023 Rule 17.8 forbids modifying function parameters (the pointer itself shall not be modified). Use a local iterator (e.g. 'const unsigned char *p = message_array; p++;') or index arithmetic instead to avoid reassigning the parameter.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct that the code violates MISRA C:2023 Rule 17.8. The statement message_array++ modifies the pointer parameter itself (not the object it points to), which the rule forbids. Additionally, the code also modifies the scalar parameter length via length-- in the while condition, which is likewise a breach of the rule (the rule applies to all function parameters; pointer objects may be modified but not the pointer parameter itself). Modifying members of *context is allowed because the object referred to by a pointer parameter may be modified. Recommended fixes: make local copies (e.g. const unsigned char *p = message_array; unsigned len = length;) and operate on those, or use indexing into message_array rather than modifying the parameter variables."
}