{
  "user_message": "An agent A claimed that the following ahc_echo code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of ahc_echo.\n```c\nstatic enum MHD_Result\nahc_echo (void *cls,\n          struct MHD_Connection *connection,\n          const char *url,\n          const char *method,\n          const char *version,\n          const char *upload_data,\n          size_t *upload_data_size,\n          void **req_cls)\n{\n  static int aptr;\n  struct MHD_Response *response;\n  enum MHD_Result ret;\n\n  (void) cls;               /* Unused. Silent compiler warning. */\n  (void) url;               /* Unused. Silent compiler warning. */\n  (void) version;           /* Unused. Silent compiler warning. */\n  (void) upload_data;       /* Unused. Silent compiler warning. */\n  (void) upload_data_size;  /* Unused. Silent compiler warning. */\n\n  if (0 != strcmp (method, \"GET\"))\n    return MHD_NO;              /* unexpected method */\n  if (&aptr != *req_cls)\n  {\n    /* do never respond on first call */\n    *req_cls = &aptr;\n    return MHD_YES;\n  }\n  *req_cls = NULL;                  /* reset when done */\n  response = MHD_create_response_empty (MHD_RF_NONE);\n  ret = MHD_queue_response (connection,\n                            MHD_HTTP_NO_CONTENT,\n                            response);\n  MHD_destroy_response (response);\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function parameter 'connection' is declared as 'struct MHD_Connection *connection' but is only used in a read-only manner (it's only passed to MHD_queue_response and never modified in ahc_echo). According to MISRA C 2023 Rule 8.13 the pointer should be to a const-qualified type when possible, so it should be declared as 'const struct MHD_Connection *connection' unless the called API requires a non-const pointer.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The report is not correct. The ahc_echo function is a callback that must match the library's API (libmicrohttpd) signature: the connection parameter is of type struct MHD_Connection * and is passed directly to MHD_queue_response, which (in the public API) expects a non-const struct MHD_Connection *. Thus you cannot sensibly change the parameter to const without breaking the required prototype or introducing a cast. MISRA Rule 8.13 asks for const-qualified pointer targets when possible, but it is not possible here because of the external API contract. Other pointers in the signature that can be const already are (e.g. url, method, version, upload_data). Therefore there is no MISRA 8.13 violation in this context."
}