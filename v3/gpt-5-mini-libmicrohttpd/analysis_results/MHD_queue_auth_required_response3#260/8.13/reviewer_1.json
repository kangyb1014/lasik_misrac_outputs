{
  "user_message": "An agent A claimed that the following MHD_queue_auth_required_response3 code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_queue_auth_required_response3.\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_queue_auth_required_response3 (struct MHD_Connection *connection,\n                                   const char *realm,\n                                   const char *opaque,\n                                   const char *domain,\n                                   struct MHD_Response *response,\n                                   int signal_stale,\n                                   enum MHD_DigestAuthMultiQOP mqop,\n                                   enum MHD_DigestAuthMultiAlgo3 malgo3,\n                                   int userhash_support,\n                                   int prefer_utf8)\n{\n  struct DigestAlgorithm da;\n  char *buf_ptr;\n  enum MHD_Result ret;\n\n  buf_ptr = NULL;\n  digest_setup_zero (&da);\n  ret = queue_auth_required_response3_inner (connection,\n                                             realm,\n                                             opaque,\n                                             domain,\n                                             response,\n                                             signal_stale,\n                                             mqop,\n                                             malgo3,\n                                             userhash_support,\n                                             prefer_utf8,\n                                             &buf_ptr,\n                                             &da);\n  digest_deinit (&da);\n  if (NULL != buf_ptr)\n    free (buf_ptr);\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'connection' is declared as 'struct MHD_Connection *connection' but in the shown function it is not modified (it's only passed through to queue_auth_required_response3_inner). If neither this function nor the callee modify the object pointed to by connection, the pointer should be declared to point to a const-qualified type: 'const struct MHD_Connection *connection'. As written, and given the visible code, this is a violation of MISRA C 2023 Rule 8.13. (If the callee or this function does modify the pointed-to object, then the non-const declaration is justified.)\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The report is not proven correct. The visible body of MHD_queue_auth_required_response3 does not modify *connection, but the function merely forwards that pointer to queue_auth_required_response3_inner. MISRA Rule 8.13 requires using a const-qualified pointee when the pointed-to object is not modified, but you cannot conclude a violation from this snippet alone: if queue_auth_required_response3_inner (or other callers/implementation expectations) modifies the connection, or if the function must match an existing public API that requires a non-const pointer, the non-const parameter is justified. To determine a true MISRA violation you must inspect the callee(s) and the API contract; without that evidence the claim is unproven."
}