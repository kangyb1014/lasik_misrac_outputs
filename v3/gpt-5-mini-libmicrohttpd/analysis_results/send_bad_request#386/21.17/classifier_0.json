{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 21.17 is: Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of send_bad_request:\n```c\nstatic enum MHD_Result\nsend_bad_request (struct MHD_Connection *con)\n{\n  struct MHD_Response *res;\n  enum MHD_Result ret;\n\n  res =\n    MHD_create_response_from_buffer_static (strlen (BAD_REQUEST_PAGE),\n                                            (const void *) BAD_REQUEST_PAGE);\n  ret = MHD_queue_response (con, MHD_HTTP_BAD_REQUEST, res);\n  MHD_destroy_response (res);\n  return ret;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nres =\n    MHD_create_response_from_buffer_static (strlen (BAD_REQUEST_PAGE),\n                                            (const void *) BAD_REQUEST_PAGE);\n```\nFocus on the above code fragment and judge whether it violates the rule 21.17 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation if BAD_REQUEST_PAGE is a NUL-terminated string (for example a string literal). strlen will only read within the bounds of a properly terminated string and so the shown call does not by itself violate MISRA C 2023 Rule 21.17. Violation scenario: if BAD_REQUEST_PAGE does not point to a NUL-terminated object (for example: char BAD_REQUEST_PAGE[3] = {'B','A','D'}; or BAD_REQUEST_PAGE is a pointer to binary data filled without a terminating '\\0'), strlen(BAD_REQUEST_PAGE) may read past the object bounds and thus violate Rule 21.17. Fixes: ensure the buffer is NUL-terminated or use an explicit known length (e.g. sizeof(literal)-1) or a bounded-length API (e.g. strnlen) as appropriate."
}