{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of MHD_poll:\n```c\nstatic enum MHD_Result\nMHD_poll (struct MHD_Daemon *daemon,\n          int may_block)\n{\n  if (! MHD_D_IS_USING_THREAD_PER_CONN_ (daemon))\n    return MHD_poll_all (daemon,\n                         may_block ? -1 : 0);\n  return MHD_poll_listen_socket (daemon,\n                                 may_block);\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "return MHD_poll_listen_socket (daemon,\n                                 may_block);",
    "return MHD_poll_all (daemon,\n                         may_block ? -1 : 0);",
    "static enum MHD_Result\nMHD_poll (struct MHD_Daemon *daemon,\n          int may_block)",
    "MHD_D_IS_USING_THREAD_PER_CONN_ (daemon)"
  ],
  "explanation": "The only pointer object in this function is the parameter 'daemon' of type 'struct MHD_Daemon *' and all uses of that pointer are listed above. There are no other pointer variables, pointer returns, or pointer-to-object expressions in this function to inspect. The other tokens (the return type, the integer parameter 'may_block', and control flow) do not relate to Rule 8.13 and therefore do not need investigation here."
}