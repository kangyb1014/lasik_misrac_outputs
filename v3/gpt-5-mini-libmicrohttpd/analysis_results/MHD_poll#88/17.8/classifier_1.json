{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 17.8 is: A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_poll:\n```c\nstatic enum MHD_Result\nMHD_poll (struct MHD_Daemon *daemon,\n          int may_block)\n{\n  if (! MHD_D_IS_USING_THREAD_PER_CONN_ (daemon))\n    return MHD_poll_all (daemon,\n                         may_block ? -1 : 0);\n  return MHD_poll_listen_socket (daemon,\n                                 may_block);\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nreturn MHD_poll_all (daemon,\n                         may_block ? -1 : 0);\n```\nFocus on the above code fragment and judge whether it violates the rule 17.8 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation. The call passes the parameter 'daemon' unchanged to MHD_poll_all; the pointer parameter itself is not assigned to or altered. A violating scenario would be if the function modified the parameter variable (for example: daemon = NULL; or daemon++; or assigning a different pointer to the parameter), which would breach Rule 17.8. (Note: modifying the object pointed to by 'daemon' inside a callee is allowed.)"
}