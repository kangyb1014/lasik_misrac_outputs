{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of serve_simple_form:\n```c\nstatic enum MHD_Result\nserve_simple_form (const void *cls,\n                   const char *mime,\n                   struct Session *session,\n                   struct MHD_Connection *connection)\n{\n  enum MHD_Result ret;\n  const char *form = cls;\n  struct MHD_Response *response;\n\n  /* return static form */\n  response = MHD_create_response_from_buffer_static (strlen (form),\n                                                     (const void *) form);\n  if (NULL == response)\n    return MHD_NO;\n  add_session_cookie (session, response);\n  if (MHD_YES !=\n      MHD_add_response_header (response,\n                               MHD_HTTP_HEADER_CONTENT_ENCODING,\n                               mime))\n  {\n    fprintf (stderr,\n             \"Failed to set content encoding header!\\n\");\n  }\n  ret = MHD_queue_response (connection,\n                            MHD_HTTP_OK,\n                            response);\n  MHD_destroy_response (response);\n  return ret;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "struct MHD_Response *response;",
    "struct MHD_Connection *connection)",
    "add_session_cookie (session, response);",
    "struct Session *session,",
    "ret = MHD_queue_response (connection,\n                            MHD_HTTP_OK,\n                            response);"
  ],
  "explanation": "I did not include the following fragments because they already use const-qualified pointers or clearly require non-const pointers by API semantics: \n- The parameter declaration const void *cls and its use (const char *form = cls;) \u2014 cls/form are const-qualified.\n- The parameter const char *mime and its use in MHD_add_response_header \u2014 mime is const-qualified.\n- The call to MHD_create_response_from_buffer_static(..., (const void *) form) \u2014 the buffer argument is passed as a const-qualified pointer via an explicit cast.\n- The MHD_add_response_header(...) call \u2014 its header/value arguments use const-qualified types where appropriate.\nThese were not marked suspicious because they already satisfy Rule 8.13 (point to const-qualified types) or the API explicitly expects/uses const-qualified pointers.  The listed fragments should be investigated to determine whether the non-const pointer parameters/variables could be const-qualified instead."
}