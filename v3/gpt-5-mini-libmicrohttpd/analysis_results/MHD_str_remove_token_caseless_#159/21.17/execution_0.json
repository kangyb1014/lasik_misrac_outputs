{
  "result": "success",
  "message": "ENTRY: MHD_str_remove_token_caseless_: str=0x7ffe1cd4d6f0, str_len=6, token=0x7ffe1cd4d5f0, token_len=6, buf=0x7ffe1cd4d1f0, buf_size_ptr=0x7ffe1cd4d1d8\nENTRY: *buf_size initial=0\nASSERT CHECK: memchr(token, 0, token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: memchr(token, ' ', token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: memchr(token, '\t', token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: memchr(token, ',', token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: buf_size >= 0 about to be checked (buf_size_ptr=0x7ffe1cd4d1d8)\nSTART LOOP: str=0x7ffe1cd4d6f0, str_len=6, initial s1_offset=0\nLOOP ITER: s1_offset=0, remaining=6, s1_ptr=0x7ffe1cd4d6f0\nAFTER SKIP: s1_offset=0, current_char='s' (0x73)\nTOKEN MATCH: start comparing at s1_offset=0, token_len=6\nTOKEN MATCH: finished comparing, t_pos=6, token_len=6, s1_offset=6\nTOKEN REMOVED: matched at offset 0, token_len=6, s1_offset=6\nEXIT: token_removed=1, final_buf_size=0, final_s2_offset=0\nENTRY: MHD_str_remove_token_caseless_: str=0x7ffe1cd4d6f0, str_len=6, token=0x7ffe1cd4d5f0, token_len=6, buf=0x7ffe1cd4d1f0, buf_size_ptr=0x7ffe1cd4d1d8\nENTRY: *buf_size initial=1\nASSERT CHECK: memchr(token, 0, token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: memchr(token, ' ', token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: memchr(token, '\t', token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: memchr(token, ',', token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: buf_size >= 0 about to be checked (buf_size_ptr=0x7ffe1cd4d1d8)\nSTART LOOP: str=0x7ffe1cd4d6f0, str_len=6, initial s1_offset=0\nLOOP ITER: s1_offset=0, remaining=6, s1_ptr=0x7ffe1cd4d6f0\nAFTER SKIP: s1_offset=0, current_char='s' (0x73)\nTOKEN MATCH: start comparing at s1_offset=0, token_len=6\nTOKEN MATCH: finished comparing, t_pos=6, token_len=6, s1_offset=6\nTOKEN REMOVED: matched at offset 0, token_len=6, s1_offset=6\nEXIT: token_removed=1, final_buf_size=0, final_s2_offset=0\nENTRY: MHD_str_remove_token_caseless_: str=0x7ffe1cd4d6f0, str_len=6, token=0x7ffe1cd4d5f0, token_len=6, buf=0x7ffe1cd4d1f0, buf_size_ptr=0x7ffe1cd4d1d8\nENTRY: *buf_size initial=2\nASSERT CHECK: memchr(token, 0, token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: memchr(token, ' ', token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: memchr(token, '\t', token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: memchr(token, ',', token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: buf_size >= 0 about to be checked (buf_size_ptr=0x7ffe1cd4d1d8)\nSTART LOOP: str=0x7ffe1cd4d6f0, str_len=6, initial s1_offset=0\nLOOP ITER: s1_offset=0, remaining=6, s1_ptr=0x7ffe1cd4d6f0\nAFTER SKIP: s1_offset=0, current_char='s' (0x73)\nTOKEN MATCH: start comparing at s1_offset=0, token_len=6\nTOKEN MATCH: finished comparing, t_pos=6, token_len=6, s1_offset=6\nTOKEN REMOVED: matched at offset 0, token_len=6, s1_offset=6\nEXIT: token_removed=1, final_buf_size=0, final_s2_offset=0\nENTRY: MHD_str_remove_token_caseless_: str=0x7ffe1cd4d6f0, str_len=6, token=0x7ffe1cd4d5f0, token_len=6, buf=0x7ffe1cd4d1f0, buf_size_ptr=0x7ffe1cd4d1d8\nENTRY: *buf_size initial=3\nASSERT CHECK: memchr(token, 0, token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: memchr(token, ' ', token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: memchr(token, '\t', token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: memchr(token, ',', token_len) about to be called with token=0x7ffe1cd4d5f0, token_len=6\nASSERT CHECK: buf_size >= 0 about to be checked (buf_size_ptr=0x7ffe1cd4d1d8)\nSTART LOOP: str=0x7ffe1cd4d6f0, str_len=6, initial s1_offset=0\nLOOP ITER: s1_offset=0, remaining=6, s1_ptr=0x7ffe1cd4d6f0\nAFTER SKIP: s1_offset=0, current_char='s' (0x73)\nTOKEN MATCH: start compa"
}