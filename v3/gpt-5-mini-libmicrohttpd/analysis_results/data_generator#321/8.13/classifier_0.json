{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of data_generator:\n```c\nstatic ssize_t\ndata_generator (void *cls, uint64_t pos, char *buf, size_t max)\n{\n  (void) cls; /* Unused. Silent compiler warning. */\n  (void) pos; /* Unused. Silent compiler warning. */\n  if (max < 80)\n    return 0;\n  memset (buf, 'A', max - 1);\n  buf[79] = '\\n';\n  return 80;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\n  (void) cls; /* Unused. Silent compiler warning. */\n\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": true,
  "scenario": "The function parameter 'cls' is declared as void * but is not used or modified. MISRA C 2023 Rule 8.13 requires pointers to point to const-qualified types whenever possible. Casting the unused parameter to void ((void) cls;) only suppresses an unused-parameter warning and does not satisfy the const-qualification requirement. The parameter should be declared as 'const void *cls' (or otherwise const-qualified) if the pointed-to object is not intended to be modified."
}