{
  "user_message": "An agent A claimed that the following MHD_create_response_from_buffer code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_create_response_from_buffer.\n```c\n_MHD_EXTERN struct MHD_Response *\nMHD_create_response_from_buffer (size_t size,\n                                 void *buffer,\n                                 enum MHD_ResponseMemoryMode mode)\n{\n  if (MHD_RESPMEM_MUST_FREE == mode)\n    return MHD_create_response_from_buffer_with_free_callback_cls (size,\n                                                                   buffer,\n                                                                   &free,\n                                                                   buffer);\n  if (MHD_RESPMEM_MUST_COPY == mode)\n    return MHD_create_response_from_buffer_copy (size,\n                                                 buffer);\n\n  return MHD_create_response_from_buffer_with_free_callback_cls (size,\n                                                                 buffer,\n                                                                 NULL,\n                                                                 NULL);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe call passes a non-const void *buffer to MHD_create_response_from_buffer_with_free_callback_cls even though the buffer is not modified (NULL free callback) and thus could be treated as read-only. If the callee does not modify the buffer, the parameter should be declared as const void * (and the local variable made const where appropriate). As written, using void * prevents const propagation (e.g. passing a const char * literal would require a cast) \u2014 this violates MISRA C 2023 Rule 8.13.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "Not correct. Rule 8.13 asks that pointers be const-qualified when they can be, but in this API the buffer may be handed off for deallocation (MHD_RESPMEM_MUST_FREE) and is passed to a free callback (which takes a void *). That use requires a non-const pointer (or an explicit cast to remove const) and thus prevents simply changing the parameter to const void *. The function must accept a non-const void * to represent ownership transfer and to match the free callback prototype, so the code does not violate MISRA C 2023 Rule 8.13."
}