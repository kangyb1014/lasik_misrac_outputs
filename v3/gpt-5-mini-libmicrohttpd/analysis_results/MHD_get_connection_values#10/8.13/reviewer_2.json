{
  "user_message": "An agent A claimed that the following MHD_get_connection_values code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_get_connection_values.\n```c\n_MHD_EXTERN int\nMHD_get_connection_values (struct MHD_Connection *connection,\n                           enum MHD_ValueKind kind,\n                           MHD_KeyValueIterator iterator,\n                           void *iterator_cls)\n{\n  int ret;\n  struct MHD_HTTP_Req_Header *pos;\n\n  if (NULL == connection)\n    return -1;\n  ret = 0;\n  for (pos = connection->rq.headers_received; NULL != pos; pos = pos->next)\n    if (0 != (pos->kind & kind))\n    {\n      ret++;\n      if ( (NULL != iterator) &&\n           (MHD_NO == iterator (iterator_cls,\n                                pos->kind,\n                                pos->header,\n                                pos->value)) )\n        return ret;\n    }\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function MHD_get_connection_values takes a non-const pointer parameter 'struct MHD_Connection *connection' but only reads from the object (accesses connection->rq.headers_received and does not modify the connection). According to MISRA C 2023 Rule 8.13, the pointer should be to a const-qualified type (i.e. 'const struct MHD_Connection *connection') when the pointee is not modified.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. In the provided code MHD_get_connection_values only reads from the connection object (it accesses connection->rq.headers_received and follows pos->next, and never modifies connection or its members). MISRA C 2023 Rule 8.13 requires that pointers should point to const-qualified types whenever possible, so the parameter should be declared as const struct MHD_Connection *connection (or otherwise justified). Note: there can be legitimate reasons to keep the non-const signature (API backward compatibility or if callers rely on non-const), or if the function passes the pointer to callees that require non-const; absent such justification the current code violates Rule 8.13."
}