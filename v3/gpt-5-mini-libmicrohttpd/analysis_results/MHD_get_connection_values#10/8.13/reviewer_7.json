{
  "user_message": "An agent A claimed that the following MHD_get_connection_values code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_get_connection_values.\n```c\n_MHD_EXTERN int\nMHD_get_connection_values (struct MHD_Connection *connection,\n                           enum MHD_ValueKind kind,\n                           MHD_KeyValueIterator iterator,\n                           void *iterator_cls)\n{\n  int ret;\n  struct MHD_HTTP_Req_Header *pos;\n\n  if (NULL == connection)\n    return -1;\n  ret = 0;\n  for (pos = connection->rq.headers_received; NULL != pos; pos = pos->next)\n    if (0 != (pos->kind & kind))\n    {\n      ret++;\n      if ( (NULL != iterator) &&\n           (MHD_NO == iterator (iterator_cls,\n                                pos->kind,\n                                pos->header,\n                                pos->value)) )\n        return ret;\n    }\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe loop variable 'pos' is declared as 'struct MHD_HTTP_Req_Header *pos' but is only used to read fields (pos->kind, pos->header, pos->value) and to follow the next pointer (pos = pos->next). The function does not modify the pointed-to list nodes, so the pointer could and should be declared to point to a const-qualified type (e.g. 'const struct MHD_HTTP_Req_Header *pos'). Therefore the fragment 'pos = pos->next' demonstrates a missed opportunity to use a const-qualified pointer, violating MISRA C 2023 Rule 8.13.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. In this function the variable pos is only used to read fields (pos->kind, pos->header, pos->value) and to follow the next pointer (pos = pos->next); there is no modification of the pointed-to objects. According to MISRA C 2023 Rule 8.13, pointers should be to const-qualified types when possible. Declaring pos as\n  const struct MHD_HTTP_Req_Header *pos;\nwould be valid: assigning connection->rq.headers_received (likely a struct MHD_HTTP_Req_Header *) to a pointer-to-const and later doing pos = pos->next (assigning a non-const pointer to a pointer-to-const) are permitted conversions in C. Therefore the reported missed const-qualification is a real violation of Rule 8.13."
}