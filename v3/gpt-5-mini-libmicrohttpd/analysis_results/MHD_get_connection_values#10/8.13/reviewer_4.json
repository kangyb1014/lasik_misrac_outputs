{
  "user_message": "An agent A claimed that the following MHD_get_connection_values code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_get_connection_values.\n```c\n_MHD_EXTERN int\nMHD_get_connection_values (struct MHD_Connection *connection,\n                           enum MHD_ValueKind kind,\n                           MHD_KeyValueIterator iterator,\n                           void *iterator_cls)\n{\n  int ret;\n  struct MHD_HTTP_Req_Header *pos;\n\n  if (NULL == connection)\n    return -1;\n  ret = 0;\n  for (pos = connection->rq.headers_received; NULL != pos; pos = pos->next)\n    if (0 != (pos->kind & kind))\n    {\n      ret++;\n      if ( (NULL != iterator) &&\n           (MHD_NO == iterator (iterator_cls,\n                                pos->kind,\n                                pos->header,\n                                pos->value)) )\n        return ret;\n    }\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe pointer 'pos' is used only to read elements of the linked list (accessing pos->kind, pos->header, pos->value and advancing pos = pos->next) and the function does not modify the pointed-to MHD_HTTP_Req_Header objects. According to MISRA C 2023 Rule 8.13, the pointer should therefore be const-qualified. Change the declaration to: \n\nconst struct MHD_HTTP_Req_Header *pos;\n\nThis still allows pos = pos->next (reading the next pointer) and prevents accidental modification of the pointed-to objects.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. In the function pos is only used to read fields (pos->kind, pos->header, pos->value) and to follow the next pointer; the pointed-to MHD_HTTP_Req_Header objects are not modified. Per MISRA C 2023 Rule 8.13 the pointer should therefore point to a const-qualified type. Declaring\n\n  const struct MHD_HTTP_Req_Header *pos;\n\nis valid: reading pos->next is allowed (pos->next has type struct MHD_HTTP_Req_Header * which can be implicitly converted to const struct MHD_HTTP_Req_Header *), and accessing members in read-only fashion is fine. There are no apparent incompatibilities with passing the member values to the iterator (the pointer-to-member becomes a top-level-const pointer which is discarded when passed by value). Thus the original code violates Rule 8.13 and should be updated."
}