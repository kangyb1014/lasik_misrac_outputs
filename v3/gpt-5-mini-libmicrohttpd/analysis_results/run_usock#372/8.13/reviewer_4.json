{
  "user_message": "An agent A claimed that the following run_usock code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of run_usock.\n```c\nstatic void *\nrun_usock (void *cls)\n{\n  struct MyData *md = cls;\n  struct MHD_UpgradeResponseHandle *urh = md->urh;\n  char buf[128];\n  ssize_t got;\n\n  make_blocking (md->sock);\n  /* start by sending extra data MHD may have already read, if any */\n  if (0 != md->extra_in_size)\n  {\n    send_all (md->sock,\n              md->extra_in,\n              md->extra_in_size);\n    free (md->extra_in);\n  }\n  /* now echo in a loop */\n  while (1)\n  {\n    got = recv (md->sock,\n                buf,\n                sizeof (buf),\n                0);\n    if (0 >= got)\n      break;\n    send_all (md->sock,\n              buf,\n              (size_t) got);\n  }\n  free (md);\n  MHD_upgrade_action (urh,\n                      MHD_UPGRADE_ACTION_CLOSE);\n  return NULL;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe local pointer 'urh' is initialized from 'md->urh' and is not used to modify the pointed-to object in run_usock (only passed to MHD_upgrade_action). Therefore, unless MHD_upgrade_action requires a non-const pointer and actually modifies the object, 'urh' could and should be declared to point to a const-qualified type (for example: const struct MHD_UpgradeResponseHandle *urh = md->urh). Omitting the const qualifier here violates MISRA C 2023 Rule 8.13.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The claim is speculative and cannot be confirmed from the snippet alone. Rule 8.13 says a pointer should point to a const-qualified type whenever that is possible, i.e. when the object is not modified through that pointer and when it does not need to be passed to APIs that require a non-const pointer. In the code urh is only passed to MHD_upgrade_action; whether urh can be declared as pointer-to-const depends entirely on the prototype and semantics of MHD_upgrade_action (and on whether any code reachable from that call modifies the object). If MHD_upgrade_action requires a non-const pointer or actually modifies the object, making urh point to a const-qualified type would be incorrect. Thus, without the declaration/contract of MHD_upgrade_action (or the full type of md->urh), you cannot conclude a MISRA 8.13 violation. If MHD_upgrade_action does not modify the object and its prototype accepts a pointer-to-const, then changing urh to const would satisfy 8.13; otherwise the agent A report is not correct."
}