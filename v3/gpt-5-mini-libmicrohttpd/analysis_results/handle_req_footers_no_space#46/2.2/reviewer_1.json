{
  "user_message": "An agent A claimed that the following handle_req_footers_no_space code violates the MISRA C 2023 rule 2.2.\n<misra_rule>\nMISRA C 2023 Rule 2.2 is A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<target_code>\nHere is the original code of handle_req_footers_no_space.\n```c\nstatic void\nhandle_req_footers_no_space (struct MHD_Connection *c,\n                             const char *add_footer,\n                             size_t add_footer_size)\n{\n  (void) add_footer; (void) add_footer_size; /* Unused */\n  mhd_assert (c->rq.have_chunked_upload);\n\n  /* Footers should be optional */\n  transmit_error_response_static (c,\n                                  MHD_HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE,\n                                  ERR_MSG_REQUEST_FOOTER_TOO_BIG);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe two statements \u201c(void) add_footer; (void) add_footer_size;\u201d are no\u2011op expressions executed solely to silence unused\u2011parameter warnings. Removing them would not change the program behaviour, so they constitute dead code under MISRA C 2023 Rule 2.2.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The agent's claim is not correct. The two lines \u201c(void) add_footer; (void) add_footer_size;\u201d are the standard idiom to mark parameters as intentionally unused and to suppress compiler warnings. MISRA's concern with Rule 2.2 is about truly dead code that can be removed without changing program behaviour in the sense of the delivered system; however MISRA practice recognizes explicit single\u2011statement uses like (void)param; as a deliberate notation for unused parameters (and as a permitted technique to avoid spurious warnings). In short, these statements are intentional, documented uses of the parameters (for the purpose of portability/diagnostics), and are not treated as a Rule 2.2 violation. If a tool nevertheless flags this, use an approved UNUSED macro or omit the parameter name where allowed, but the report that this code violates MISRA C 2023 Rule 2.2 is incorrect."
}