{
  "result": "success",
  "message": "enter add_response_header_connection: response=0x5615f1ab6820 value=0x5615ef062101\nallocated buf=0x5615f1ab68e0 buf_size=14 old_value_len=0\ninserted new header: new_hdr=0x5615f1ab6c00 header=0x5615f1ab6900 value=0x5615f1ab68e0 value_size=13 response->flags_auto=0x00000001\nenter add_response_header_connection: response=0x5615f1ab6820 value=0x5615ef06218e\nallocated buf=0x5615f1ab6c40 buf_size=29 old_value_len=0\ninserted new header: new_hdr=0x5615f1ab6c70 header=0x5615f1ab6900 value=0x5615f1ab6c40 value_size=26 response->flags_auto=0x00000003\nenter add_response_header_connection: response=0x5615f1ab6820 value=0x5615ef062240\nallocated buf=0x5615f1ab6c40 buf_size=29 old_value_len=0\ninserted new header: new_hdr=0x5615f1ab6cb0 header=0x5615f1ab6900 value=0x5615f1ab6c40 value_size=26 response->flags_auto=0x00000003\nenter add_response_header_connection: response=0x5615f1ab6820 value=0x5615ef06226f\nfound existing header hdr=0x5615f1ab6cb0 hdr->value=0x5615f1ab6c40 hdr->value_size=26\nhdr->value_preview: ptr=0x5615f1ab6c40 size=26 show_max=16 bytes=\"close, 1, 2, 3, \"\nabout to memcmp hdr->value with \"close\" (5 bytes). hdr->value_size=26 sufficient=yes\nmemcmp result (hdr->value vs \"close\",5) = 0 (interpreted equal=yes)\nallocated buf=0x5615f1ab6c70 buf_size=42 old_value_len=28\nupdating existing header hdr=0x5615f1ab6cb0 old_value=0x5615f1ab6c40 old_value_size=26 -> new_value=0x5615f1ab6c70 new_value_size=32\nupdate complete hdr=0x5615f1ab6cb0 value=0x5615f1ab6c70 value_size=32 response->flags_auto=0x00000003\nenter add_response_header_connection: response=0x5615f1ab6820 value=0x5615ef06233c\nfound existing header hdr=0x5615f1ab6cb0 hdr->value=0x5615f1ab6c70 hdr->value_size=17\nhdr->value_preview: ptr=0x5615f1ab6c70 size=17 show_max=16 bytes=\"close, 2, 4, 6, \"\nabout to memcmp hdr->value with \"close\" (5 bytes). hdr->value_size=17 sufficient=yes\nmemcmp result (hdr->value vs \"close\",5) = 0 (interpreted equal=yes)\nallocated buf=0x5615f1ab6c40 buf_size=27 old_value_len=19\nupdating existing header hdr=0x5615f1ab6cb0 old_value=0x5615f1ab6c70 old_value_size=17 -> new_value=0x5615f1ab6c40 new_value_size=25\nupdate complete hdr=0x5615f1ab6cb0 value=0x5615f1ab6c40 value_size=25 response->flags_auto=0x00000003\nenter add_response_header_connection: response=0x5615f1ab6820 value=0x5615ef06295d\nfound existing header hdr=0x5615f1ab6cb0 hdr->value=0x5615f1ab6c40 hdr->value_size=7\nhdr->value_preview: ptr=0x5615f1ab6c40 size=7 show_max=16 bytes=\"2, 4, 6\"\nabout to memcmp hdr->value with \"close\" (5 bytes). hdr->value_size=7 sufficient=yes\nmemcmp result (hdr->value vs \"close\",5) = -49 (interpreted equal=no)\nallocated buf=0x5615f1ab68e0 buf_size=17 old_value_len=9\nupdating existing header hdr=0x5615f1ab6cb0 old_value=0x5615f1ab6c40 old_value_size=7 -> new_value=0x5615f1ab68e0 new_value_size=14\nupdate complete hdr=0x5615f1ab6cb0 value=0x5615f1ab68e0 value_size=14 response->flags_auto=0x00000003\nenter add_response_header_connection: response=0x5615f1ab6820 value=0x5615ef06295d\nfound existing header hdr=0x5615f1ab6cb0 hdr->value=0x5615f1ab68e0 hdr->value_size=8\nhdr->value_preview: ptr=0x5615f1ab68e0 size=8 show_max=16 bytes=\"close, 2\"\nabout to memcmp hdr->value with \"close\" (5 bytes). hdr->value_size=8 sufficient=yes\nmemcmp result (hdr->value vs \"close\",5) = 0 (interpreted equal=yes)\nallocated buf=0x5615f1ab6cf0 buf_size=18 old_value_len=10\nalready_has_close true and normalized value empty: nothing to do\nenter add_response_header_connection: response=0x5615f1ab6820 value=0x5615ef06295d\nallocated buf=0x5615f1ab6900 buf_size=8 old_value_len=0\ninserted new header: new_hdr=0x5615f1ab6d10 header=0x5615f1ab68e0 value=0x5615f1ab6900 value_size=5 response->flags_auto=0x00000003\nenter add_response_header_connection: response=0x5615f1ab6820 value=0x5615ef06295d\nfound existing header hdr=0x5615f1ab6d10 hdr->value=0x5615f1ab6900 hdr->value_size=5\nhdr->value_preview: ptr=0x5615f1ab6900 size=5 show_max=16 bytes=\"close\"\nabout to memcmp hdr->value with \"close\" (5 bytes). hdr->value_size=5 sufficient=yes\nmemcmp result (hdr->value vs \"close\",5) = 0 (interpreted equal=yes)\nallocated bu"
}