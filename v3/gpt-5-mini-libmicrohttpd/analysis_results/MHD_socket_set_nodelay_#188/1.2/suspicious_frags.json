{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of MHD_socket_set_nodelay_:\n```c\nint\nMHD_socket_set_nodelay_ (MHD_socket sock,\n                         bool on)\n{\n#ifdef TCP_NODELAY\n  {\n    const MHD_SCKT_OPT_BOOL_ off_val = 0;\n    const MHD_SCKT_OPT_BOOL_ on_val = 1;\n    /* Disable Nagle's algorithm for normal buffering */\n    return setsockopt (sock,\n                       IPPROTO_TCP,\n                       TCP_NODELAY,\n                       (const void *) ((on) ? &on_val : &off_val),\n                       sizeof (on_val));\n  }\n#else\n  (void) sock;\n  return 0;\n#endif /* TCP_NODELAY */\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "No compiler language extensions are present in the provided fragment. The code uses standard C constructs: function definition, preprocessor #ifdef/#else/#endif, block scope, const-qualified variables, the conditional (?:) operator, casts to void* and (void) to suppress unused-variable warnings, sizeof, and a call to setsockopt. There are no uses of known compiler-specific extensions such as __attribute__, __asm, typeof, __builtin_*, __extension__, unnamed bit-fields, inline assembly, GCC/Clang pragma extensions, or other vendor-specific tokens. The identifiers like TCP_NODELAY, IPPROTO_TCP, and setsockopt are platform/OS API macros or functions (POSIX/system headers), not compiler language extensions. The use of bool is standard C (stdbool.h/_Bool) and not a compiler extension in standard-conforming code. If any typedefs (e.g. MHD_socket, MHD_SCKT_OPT_BOOL_) were themselves defined using compiler-specific extensions, those definitions are not present in this fragment and would need to be inspected separately; based solely on the supplied code, there are no language extensions to report."
}