{
  "user_message": "An agent A claimed that the following is_websocket_request code violates the MISRA C 2023 rule 21.17.\n<misra_rule>\nMISRA C 2023 Rule 21.17 is Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<target_code>\nHere is the original code of is_websocket_request.\n```c\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n\n  (void) con;  /* Unused. Silent compiler warning. */\n\n  return ((upg_header != NULL) && (con_header != NULL)\n          && (0 == strcmp (upg_header, WS_UPGRADE_VALUE))\n          && (NULL != strstr (con_header, \"Upgrade\")))\n         ? MHD_YES\n         : MHD_NO;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nCalling strstr(con_header, \"Upgrade\") only checks that con_header != NULL but does not guarantee con_header points to a valid null\u2011terminated string. If con_header refers to a buffer that is not NUL\u2011terminated (for example a received header truncated or parsed into a fixed\u2011length buffer without a terminator), strstr will read past the object bounds and thus violate MISRA C 2023 Rule 21.17.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. Both strcmp(upg_header, WS_UPGRADE_VALUE) and strstr(con_header, \"Upgrade\") assume their first arguments are pointers to null\u2011terminated strings; the function only checks for non\u2011NULL pointers and does not ensure the buffers are NUL\u2011terminated or otherwise bounded. If either argument refers to a buffer that is not terminated within its object bounds (for example a truncated header in a fixed\u2011length buffer), these calls can read beyond the object and thus violate MISRA C 2023 Rule 21.17. To be compliant either the code must establish/verify a length contract or use bounded checks (e.g. track lengths and use strncmp/memmem-like safe routines or ensure NUL termination before calling), or otherwise ensure by contract that callers always supply NUL\u2011terminated strings."
}