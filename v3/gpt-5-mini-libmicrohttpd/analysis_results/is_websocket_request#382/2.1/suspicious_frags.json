{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 2.1 is: A project shall not contain unreachable code.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of is_websocket_request:\n```c\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n\n  (void) con;  /* Unused. Silent compiler warning. */\n\n  return ((upg_header != NULL) && (con_header != NULL)\n          && (0 == strcmp (upg_header, WS_UPGRADE_VALUE))\n          && (NULL != strstr (con_header, \"Upgrade\")))\n         ? MHD_YES\n         : MHD_NO;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "No unreachable code detected in the provided function. Reasoning:\n- The only non-executable-looking line, \"(void) con;\", is a deliberate unused-parameter suppression and is executed as a no-op; it does not create unreachable code.\n- The function has a single return statement using the conditional (?:) operator. Both outcomes (MHD_YES and MHD_NO) are reachable at run-time depending on the evaluated boolean expression; therefore neither branch is unreachable.\n- All function calls (strcmp and strstr) are guarded by null checks (upg_header != NULL and con_header != NULL), so there is no path that would attempt to call them with NULL and skip subsequent code in a way that creates unreachable statements.\n- There are no labels, loops, or successive statements after a guaranteed return that would be rendered unreachable.\n\nGiven the code shown, there are no fragments that require investigation for MISRA C 2023 Rule 2.1 (unreachable code). If additional surrounding code or compile-time definitions (macros) are provided that could force certain expressions to be constant and make branches unreachable, those should be supplied for review; with the current snippet none exist."
}