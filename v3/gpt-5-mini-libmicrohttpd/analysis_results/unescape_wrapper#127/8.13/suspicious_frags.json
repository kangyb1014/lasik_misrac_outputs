{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of unescape_wrapper:\n```c\nstatic size_t\nunescape_wrapper (void *cls,\n                  struct MHD_Connection *connection,\n                  char *val)\n{\n  bool broken;\n  size_t res;\n  (void) cls; /* Mute compiler warning. */\n\n  /* TODO: add individual parameter */\n  if (0 <= connection->daemon->client_discipline)\n    return MHD_str_pct_decode_in_place_strict_ (val);\n\n  res = MHD_str_pct_decode_in_place_lenient_ (val, &broken);\n#ifdef HAVE_MESSAGES\n  if (broken)\n  {\n    MHD_DLOG (connection->daemon,\n              _ (\"The URL encoding is broken.\\n\"));\n  }\n#endif /* HAVE_MESSAGES */\n  return res;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "if (0 <= connection->daemon->client_discipline)",
    "res = MHD_str_pct_decode_in_place_lenient_ (val, &broken);",
    "(void) cls; /* Mute compiler warning. */",
    "return MHD_str_pct_decode_in_place_strict_ (val);",
    "unescape_wrapper (void *cls,\n                  struct MHD_Connection *connection,\n                  char *val)"
  ],
  "explanation": "Fragments not listed do not need investigation for MISRA C 2023 Rule 8.13: local scalar declarations (bool broken; size_t res;) are non-pointer types; the HAVE_MESSAGES block and logging string literals do not involve pointer parameter qualification; the TODO comment, return statements that return size_t, and the comparison/usage of connection->daemon (aside from the parameter itself which is listed) are not additional pointer declarations requiring const qualification. The &broken argument is an output parameter (address of a local non-const variable) and therefore should remain non-const; other expressions and statements in the function do not introduce pointer targets that could be const-qualified."
}