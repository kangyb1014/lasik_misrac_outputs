{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of ahc_echo:\n```c\nstatic enum MHD_Result\nahc_echo (void *cls,\n          struct MHD_Connection *connection,\n          const char *url,\n          const char *method,\n          const char *version,\n          const char *upload_data,\n          size_t *upload_data_size,\n          void **req_cls)\n{\n  static int aptr;\n  struct MHD_Response *response;\n  enum MHD_Result ret;\n  (void) cls;               /* Unused. Silent compiler warning. */\n  (void) url;               /* Unused. Silent compiler warning. */\n  (void) version;           /* Unused. Silent compiler warning. */\n  (void) upload_data;       /* Unused. Silent compiler warning. */\n  (void) upload_data_size;  /* Unused. Silent compiler warning. */\n\n  if (0 != strcmp (method, \"GET\"))\n    return MHD_NO;              /* unexpected method */\n  if (&aptr != *req_cls)\n  {\n    /* do never respond on first call */\n    *req_cls = &aptr;\n    return MHD_YES;\n  }\n  *req_cls = NULL;                  /* reset when done */\n  response = MHD_create_response_for_upgrade (&uh_cb,\n                                              NULL);\n\n  MHD_add_response_header (response,\n                           MHD_HTTP_HEADER_UPGRADE,\n                           \"Echo Server\");\n  ret = MHD_queue_response (connection,\n                            MHD_HTTP_SWITCHING_PROTOCOLS,\n                            response);\n  MHD_destroy_response (response);\n  return ret;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "struct MHD_Response *response;",
    "void **req_cls)",
    "if (&aptr != *req_cls)",
    "*req_cls = &aptr;",
    "size_t *upload_data_size,",
    "response = MHD_create_response_for_upgrade (&uh_cb,\n                                              NULL);",
    "void *cls,",
    "static int aptr;",
    "*req_cls = NULL;",
    "struct MHD_Connection *connection,",
    "ret = MHD_queue_response (connection,\n                            MHD_HTTP_SWITCHING_PROTOCOLS,\n                            response);",
    "MHD_add_response_header (response,\n                           MHD_HTTP_HEADER_UPGRADE,\n                           \"Echo Server\");"
  ],
  "explanation": "I did not include other fragments because they are already const-qualified where appropriate or are not pointer targets for which adding const would be appropriate: the parameters declared as const char * (url, method, version, upload_data) already satisfy the rule; local non-pointer variables (e.g. enum MHD_Result ret) are not relevant; the unused casts ((void) ...) are innocuous. Declarations/uses that are passed to API functions known to modify the object (e.g., response when used with MHD_add_response_header/MHD_queue_response/MHD_destroy_response) are likely intentionally non-const and so were not marked as suspicious. The listed fragments are those pointer declarations/uses in the code where const-qualification could plausibly be applied (or where string literals are passed to a non-const parameter) and therefore merit investigation under Rule 8.13."
}