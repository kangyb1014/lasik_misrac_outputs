{
  "user_message": "An agent A claimed that the following MHD_add_to_fd_set_ code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_add_to_fd_set_.\n```c\nint\nMHD_add_to_fd_set_ (MHD_socket fd,\n                    fd_set *set,\n                    MHD_socket *max_fd,\n                    int fd_setsize)\n{\n  if ( (NULL == set) ||\n       (MHD_INVALID_SOCKET == fd) )\n    return 0;\n\n#ifndef HAS_FD_SETSIZE_OVERRIDABLE\n  (void) fd_setsize;  /* Mute compiler warning */\n  fd_setsize = (int) FD_SETSIZE; /* Help compiler to optimise */\n#endif /* ! HAS_FD_SETSIZE_OVERRIDABLE */\n\n  if (! MHD_SCKT_FD_FITS_FDSET_SETSIZE_ (fd,\n                                         set,\n                                         fd_setsize))\n    return 0;\n  MHD_SCKT_ADD_FD_TO_FDSET_SETSIZE_ (fd,\n                                     set,\n                                     fd_setsize);\n  if ( (NULL != max_fd) &&\n       ( (fd > *max_fd) ||\n         (MHD_INVALID_SOCKET == *max_fd) ) )\n    *max_fd = fd;\n  return ! 0;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe call to MHD_SCKT_ADD_FD_TO_FDSET_SETSIZE_(fd, set, fd_setsize) itself does not modify any function parameter and so the call fragment alone does not violate Rule 17.8. However, the enclosing function does violate Rule 17.8 because the value parameter fd_setsize is assigned to earlier in the function: fd_setsize = (int) FD_SETSIZE; \u2014 this modifies a non\u2011pointer parameter and therefore breaches MISRA C 2023 Rule 17.8.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\nENTRY: fd=3, set=0x7f3e028fbcc8, max_fd=0x7f3e028fbbc4, fd_setsize=1024\nENTRY: *max_fd(before)=-1\nBEFORE_FDSETSIZE_ASSIGN: fd=3, set=0x7f3e028fbcc8, max_fd=0x7f3e028fbbc4, fd_setsize=1024\nBEFORE_FDSETSIZE_ASSIGN: *max_fd(before)=-1\nAFTER_FDSETSIZE_ASSIGN: fd=3, set=0x7f3e028fbcc8, max_fd=0x7f3e028fbbc4, fd_setsize=1024\nAFTER_FDSETSIZE_ASSIGN: *max_fd(before)=-1\nADDED_TO_FDSET: fd=3, set=0x7f3e028fbcc8, max_fd=0x7f3e028fbbc4, fd_setsize=1024\nADDED_TO_FDSET: *max_fd(before)=-1\nBEFORE_MAX_FD_UPDATE: fd=3, set=0x7f3e028fbcc8, max_fd=0x7f3e028fbbc4, fd_setsize=1024\nBEFORE_MAX_FD_UPDATE: *max_fd(before)=-1\nAFTER_MAX_FD_UPDATE: fd=3, set=0x7f3e028fbcc8, max_fd=0x7f3e028fbbc4, fd_setsize=1024\nAFTER_MAX_FD_UPDATE: *max_fd(before)=3\nRETURN_SUCCESS: fd=3, set=0x7f3e028fbcc8, max_fd=0x7f3e028fbbc4, fd_setsize=1024\nRETURN_SUCCESS: *max_fd(before)=3\nENTRY: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nENTRY: *max_fd(before)=0\nBEFORE_FDSETSIZE_ASSIGN: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nBEFORE_FDSETSIZE_ASSIGN: *max_fd(before)=0\nAFTER_FDSETSIZE_ASSIGN: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nAFTER_FDSETSIZE_ASSIGN: *max_fd(before)=0\nADDED_TO_FDSET: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nADDED_TO_FDSET: *max_fd(before)=0\nBEFORE_MAX_FD_UPDATE: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nBEFORE_MAX_FD_UPDATE: *max_fd(before)=0\nAFTER_MAX_FD_UPDATE: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nAFTER_MAX_FD_UPDATE: *max_fd(before)=3\nRETURN_SUCCESS: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nRETURN_SUCCESS: *max_fd(before)=3\nENTRY: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nENTRY: *max_fd(before)=-1\nBEFORE_FDSETSIZE_ASSIGN: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nBEFORE_FDSETSIZE_ASSIGN: *max_fd(before)=-1\nAFTER_FDSETSIZE_ASSIGN: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nAFTER_FDSETSIZE_ASSIGN: *max_fd(before)=-1\nADDED_TO_FDSET: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nADDED_TO_FDSET: *max_fd(before)=-1\nBEFORE_MAX_FD_UPDATE: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nBEFORE_MAX_FD_UPDATE: *max_fd(before)=-1\nAFTER_MAX_FD_UPDATE: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nAFTER_MAX_FD_UPDATE: *max_fd(before)=3\nRETURN_SUCCESS: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nRETURN_SUCCESS: *max_fd(before)=3\nENTRY: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nENTRY: *max_fd(before)=0\nBEFORE_FDSETSIZE_ASSIGN: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nBEFORE_FDSETSIZE_ASSIGN: *max_fd(before)=0\nAFTER_FDSETSIZE_ASSIGN: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nAFTER_FDSETSIZE_ASSIGN: *max_fd(before)=0\nADDED_TO_FDSET: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nADDED_TO_FDSET: *max_fd(before)=0\nBEFORE_MAX_FD_UPDATE: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nBEFORE_MAX_FD_UPDATE: *max_fd(before)=0\nAFTER_MAX_FD_UPDATE: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nAFTER_MAX_FD_UPDATE: *max_fd(before)=3\nRETURN_SUCCESS: fd=3, set=0x7fff1766e7a0, max_fd=0x7fff1766e79c, fd_setsize=1024\nRETURN_SUCCESS: *max_fd(before)=3\nENTRY: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nENTRY: *max_fd(before)=-1\nBEFORE_FDSETSIZE_ASSIGN: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nBEFORE_FDSETSIZE_ASSIGN: *max_fd(before)=-1\nAFTER_FDSETSIZE_ASSIGN: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nAFTER_FDSETSIZE_ASSIGN: *max_fd(before)=-1\nADDED_TO_FDSET: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nADDED_TO_FDSET: *max_fd(before)=-1\nBEFORE_MAX_FD_UPDATE: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nBEFORE_MAX_FD_UPDATE: *max_fd(before)=-1\nAFTER_MAX_FD_UPDATE: fd=3, set=0x7fff1766e678, max_fd=0x7fff1766e574, fd_setsize=1024\nAFTER_MAX_FD_UPDATE:\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. MISRA C 2023 Rule 17.8 states that a function parameter shall not be modified. In the shown function the value parameter fd_setsize is assigned to on this line (inside the #ifndef block):\n\n  fd_setsize = (int) FD_SETSIZE;\n\nThat is a direct modification of a non\u2011pointer parameter and therefore violates Rule 17.8. (By contrast modifying *max_fd is permitted because the object referred to by a pointer parameter may be modified; likewise the call to MHD_SCKT_ADD_FD_TO_FDSET_SETSIZE_ does not itself cause the rule violation.) A simple remedy is to copy fd_setsize into a local variable and modify that local instead."
}