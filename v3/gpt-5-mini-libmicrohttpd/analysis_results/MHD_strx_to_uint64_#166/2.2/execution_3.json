{
  "result": "success",
  "message": "init: str_ptr=0x563cd3d9f6dc char='1' res=0 digit=1 extra=start parsing\ninit:     res < (UINT64_MAX/16) = 1\ninit:     res == (UINT64_MAX/16) = 0\ninit:     (uint64_t)digit = 1\ninit:     UINT64_MAX % 16 = 15\nloop_eval: str_ptr=0x563cd3d9f6dc char='1' res=0 digit=1 extra=cond1=1 cond2=0 cond3=1\nloop_eval:     res < (UINT64_MAX/16) = 1\nloop_eval:     res == (UINT64_MAX/16) = 0\nloop_eval:     (uint64_t)digit = 1\nloop_eval:     UINT64_MAX % 16 = 15\naccumulate: str_ptr=0x563cd3d9f6dc char='1' res=1 digit=1 extra=digit appended\naccumulate:     res < (UINT64_MAX/16) = 1\naccumulate:     res == (UINT64_MAX/16) = 0\naccumulate:     (uint64_t)digit = 1\naccumulate:     UINT64_MAX % 16 = 15\nnext: str_ptr=0x563cd3d9f6dd char=' ' res=1 digit=-1 extra=advance to next char\nnext:     res < (UINT64_MAX/16) = 1\nnext:     res == (UINT64_MAX/16) = 0\nnext:     (uint64_t)digit = 18446744073709551615\nnext:     UINT64_MAX % 16 = 15\nfinal: str_ptr=0x563cd3d9f6dd char=' ' res=1 digit=-1 extra=parsing finished\nfinal:     res < (UINT64_MAX/16) = 1\nfinal:     res == (UINT64_MAX/16) = 0\nfinal:     (uint64_t)digit = 18446744073709551615\nfinal:     UINT64_MAX % 16 = 15\ninit: str_ptr=0x563cd3da46f4 char='0' res=0 digit=0 extra=start parsing\ninit:     res < (UINT64_MAX/16) = 1\ninit:     res == (UINT64_MAX/16) = 0\ninit:     (uint64_t)digit = 0\ninit:     UINT64_MAX % 16 = 15\nloop_eval: str_ptr=0x563cd3da46f4 char='0' res=0 digit=0 extra=cond1=1 cond2=0 cond3=1\nloop_eval:     res < (UINT64_MAX/16) = 1\nloop_eval:     res == (UINT64_MAX/16) = 0\nloop_eval:     (uint64_t)digit = 0\nloop_eval:     UINT64_MAX % 16 = 15\naccumulate: str_ptr=0x563cd3da46f4 char='0' res=0 digit=0 extra=digit appended\naccumulate:     res < (UINT64_MAX/16) = 1\naccumulate:     res == (UINT64_MAX/16) = 0\naccumulate:     (uint64_t)digit = 0\naccumulate:     UINT64_MAX % 16 = 15\nnext: str_ptr=0x563cd3da46f5 char=' ' res=0 digit=-1 extra=advance to next char\nnext:     res < (UINT64_MAX/16) = 1\nnext:     res == (UINT64_MAX/16) = 0\nnext:     (uint64_t)digit = 18446744073709551615\nnext:     UINT64_MAX % 16 = 15\nfinal: str_ptr=0x563cd3da46f5 char=' ' res=0 digit=-1 extra=parsing finished\nfinal:     res < (UINT64_MAX/16) = 1\nfinal:     res == (UINT64_MAX/16) = 0\nfinal:     (uint64_t)digit = 18446744073709551615\nfinal:     UINT64_MAX % 16 = 15\ninit: str_ptr=0x563cd3d9f56b char='1' res=0 digit=1 extra=start parsing\ninit:     res < (UINT64_MAX/16) = 1\ninit:     res == (UINT64_MAX/16) = 0\ninit:     (uint64_t)digit = 1\ninit:     UINT64_MAX % 16 = 15\nloop_eval: str_ptr=0x563cd3d9f56b char='1' res=0 digit=1 extra=cond1=1 cond2=0 cond3=1\nloop_eval:     res < (UINT64_MAX/16) = 1\nloop_eval:     res == (UINT64_MAX/16) = 0\nloop_eval:     (uint64_t)digit = 1\nloop_eval:     UINT64_MAX % 16 = 15\naccumulate: str_ptr=0x563cd3d9f56b char='1' res=1 digit=1 extra=digit appended\naccumulate:     res < (UINT64_MAX/16) = 1\naccumulate:     res == (UINT64_MAX/16) = 0\naccumulate:     (uint64_t)digit = 1\naccumulate:     UINT64_MAX % 16 = 15\nnext: str_ptr=0x563cd3d9f56c char='0' res=1 digit=0 extra=advance to next char\nnext:     res < (UINT64_MAX/16) = 1\nnext:     res == (UINT64_MAX/16) = 0\nnext:     (uint64_t)digit = 0\nnext:     UINT64_MAX % 16 = 15\nloop_eval: str_ptr=0x563cd3d9f56c char='0' res=1 digit=0 extra=cond1=1 cond2=0 cond3=1\nloop_eval:     res < (UINT64_MAX/16) = 1\nloop_eval:     res == (UINT64_MAX/16) = 0\nloop_eval:     (uint64_t)digit = 0\nloop_eval:     UINT64_MAX % 16 = 15\naccumulate: str_ptr=0x563cd3d9f56c char='0' res=16 digit=0 extra=digit appended\naccumulate:     res < (UINT64_MAX/16) = 1\naccumulate:     res == (UINT64_MAX/16) = 0\naccumulate:     (uint64_t)digit = 0\naccumulate:     UINT64_MAX % 16 = 15\nnext: str_ptr=0x563cd3d9f56d char='0' res=16 digit=0 extra=advance to next char\nnext:     res < (UINT64_MAX/16) = 1\nnext:     res == (UINT64_MAX/16) = 0\nnext:     (uint64_t)digit = 0\nnext:     UINT64_MAX % 16 = 15\nloop_eval: str_ptr=0x563cd3d9f56d char='0' res=16 digit=0 extra=cond1=1 cond2=0 cond3=1\nloop_eval:     res < (UINT64_MAX/16) = 1\nloop_eval:     res == (UINT64_MAX/16) = 0\nloop_eval:     (uint64_t)digit = "
}