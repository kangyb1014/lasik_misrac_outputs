{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 17.2 is: Functions shall not call themselves, either directly or indirectly.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of fast_simple_hash:\n```c\nstatic uint32_t\nfast_simple_hash (const uint8_t *data,\n                  size_t data_size)\n{\n  uint32_t hash;\n\n  if (0 != data_size)\n  {\n    size_t i;\n    hash = data[0];\n    for (i = 1; i < data_size; i++)\n      hash = _MHD_ROTL32 (hash, 7) ^ data[i];\n  }\n  else\n    hash = 0;\n\n  return hash;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nhash = _MHD_ROTL32 (hash, 7) ^ data[i];\n```\nFocus on the above code fragment and judge whether it violates the rule 17.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation in the shown fragment: the expression calls _MHD_ROTL32 to rotate the 32-bit value and XORs with data[i], it does not call fast_simple_hash. Rule 17.2 would only be violated if _MHD_ROTL32 (or something it expands to) called fast_simple_hash either directly or indirectly (e.g. fast_simple_hash -> _MHD_ROTL32 -> fast_simple_hash). If _MHD_ROTL32 is a macro or inline rotation routine that does not call back into fast_simple_hash, there is no recursion and no Rule 17.2 violation."
}