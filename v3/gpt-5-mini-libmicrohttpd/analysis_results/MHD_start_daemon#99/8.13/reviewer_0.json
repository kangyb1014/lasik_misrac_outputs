{
  "user_message": "An agent A claimed that the following MHD_start_daemon code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_start_daemon.\n```c\n_MHD_EXTERN struct MHD_Daemon *\nMHD_start_daemon (unsigned int flags,\n                  uint16_t port,\n                  MHD_AcceptPolicyCallback apc,\n                  void *apc_cls,\n                  MHD_AccessHandlerCallback dh,\n                  void *dh_cls,\n                  ...)\n{\n  struct MHD_Daemon *daemon;\n  va_list ap;\n\n  va_start (ap,\n            dh_cls);\n  daemon = MHD_start_daemon_va (flags,\n                                port,\n                                apc,\n                                apc_cls,\n                                dh,\n                                dh_cls,\n                                ap);\n  va_end (ap);\n  return daemon;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function returns a non-const pointer to an object (struct MHD_Daemon *). If the returned daemon pointer refers to internal state that callers must not modify (e.g. an opaque daemon instance managed by the library), then the pointer should be to a const-qualified type (const struct MHD_Daemon *) to prevent inadvertent modification. In that common API case the declaration violates MISRA C 2023 Rule 8.13. If, however, callers are expected to modify the returned structure, then const would be inappropriate and the rule would not apply.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x9, port=0\n  apc=(nil), apc_cls=(nil)\n  dh=0x564320a857e0, dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = 0x56432d0f4a10\n  NOTE: Returned pointer is non-const; callers may be able to modify internal state.\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0xD, port=0\n  apc=(nil), apc_cls=(nil)\n  dh=0x564320a857e0, dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = 0x56432d0f4fd0\n  NOTE: Returned pointer is non-const; callers may be able to modify internal state.\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x9, port=0\n  apc=(nil), apc_cls=(nil)\n  dh=0x564320a857e0, dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = 0x56432d0f5450\n  NOTE: Returned pointer is non-const; callers may be able to modify internal state.\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x1, port=0\n  apc=(nil), apc_cls=(nil)\n  dh=0x564320a857e0, dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = 0x56432d0f58d0\n  NOTE: Returned pointer is non-const; callers may be able to modify internal state.\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x80001, port=0\n  apc=(nil), apc_cls=(nil)\n  dh=0x564320a857e0, dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = 0x56432d0f5f70\n  NOTE: Returned pointer is non-const; callers may be able to modify internal state.\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x49, port=0\n  apc=(nil), apc_cls=(nil)\n  dh=0x564320a857e0, dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = 0x56432d0f63b0\n  NOTE: Returned pointer is non-const; callers may be able to modify internal state.\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x4D, port=0\n  apc=(nil), apc_cls=(nil)\n  dh=0x564320a857e0, dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = 0x56432d0f67f0\n  NOTE: Returned pointer is non-const; callers may be able to modify internal state.\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x49, port=0\n  apc=(nil), apc_cls=(nil)\n  dh=0x564320a857e0, dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = 0x56432d0f6c30\n  NOTE: Returned pointer is non-const; callers may be able to modify internal state.\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x209, port=0\n  apc=(nil), apc_cls=(nil)\n  dh=0x564320a857e0, dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = 0x56432d0f6c30\n  NOTE: Returned pointer is non-const; callers may be able to modify internal state.\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x209, port=0\n  apc=(nil), apc_cls=(nil)\n  dh=0x564320a857e0, dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = 0x56432d0f6c30\n  NOTE: Returned pointer is non-const; callers may be able to modify internal state.\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x1, port=0\n  apc=(nil), apc_cls=(nil)\n  dh=(nil), dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = NULL\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x9, port=0\n  apc=0x563b60dfda40, apc_cls=(nil)\n  dh=0x563b60dfda70, dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = 0x563b9447da10\n  NOTE: Returned pointer is non-const; callers may be able to modify internal state.\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x1, port=0\n  apc=0x563b60dfdab0, apc_cls=(nil)\n  dh=0x563b60dfda70, dh_cls=(nil)\n  va_list started, about to call MHD_start_daemon_va\n  returned daemon pointer = 0x563b9447dfd0\n  NOTE: Returned pointer is non-const; callers may be able to modify internal state.\n\n[ENTRY] MHD_start_daemon called: time=1756195577\n  flags=0x80001, port=0\n  apc=0x563b60dfdab0, apc_cls=(nil)\n  dh=\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "Agent A\u2019s report is not supported by the evidence. MISRA C:2023 Rule 8.13 encourages const-correctness (\u201ca pointer should point to a const\u2011qualified type whenever possible\u201d), but the mere fact that MHD_start_daemon returns a non\u2011const struct MHD_Daemon * is not by itself a rule violation. Whether the rule applies depends on the intended use of the returned object: if callers are expected to modify the MHD_Daemon object (or pass it to other APIs that take a non\u2011const pointer), returning a non\u2011const pointer is appropriate; if the object is truly an immutable/opaque handle that callers must not modify, the API should instead return const struct MHD_Daemon *. The execution log only shows returned addresses and gives no evidence about intended mutability or API semantics, so you cannot conclude a violation. To demonstrate a real violation you would need evidence that the returned object is intended to be immutable (documentation or implementation guarantees) but the API still exposes a non\u2011const pointer, or a code audit showing it never needs to be modified by callers. Absent that, the report is incorrect."
}