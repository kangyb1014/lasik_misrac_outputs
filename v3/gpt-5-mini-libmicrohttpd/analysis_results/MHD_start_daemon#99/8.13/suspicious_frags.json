{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of MHD_start_daemon:\n```c\n_MHD_EXTERN struct MHD_Daemon *\nMHD_start_daemon (unsigned int flags,\n                  uint16_t port,\n                  MHD_AcceptPolicyCallback apc,\n                  void *apc_cls,\n                  MHD_AccessHandlerCallback dh,\n                  void *dh_cls,\n                  ...)\n{\n  struct MHD_Daemon *daemon;\n  va_list ap;\n\n  va_start (ap,\n            dh_cls);\n  daemon = MHD_start_daemon_va (flags,\n                                port,\n                                apc,\n                                apc_cls,\n                                dh,\n                                dh_cls,\n                                ap);\n  va_end (ap);\n  return daemon;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "_MHD_EXTERN struct MHD_Daemon *",
    "void *dh_cls,",
    "void *apc_cls,",
    "struct MHD_Daemon *daemon;"
  ],
  "explanation": "Other code fragments do not need investigation for MISRA C 2023 Rule 8.13: - The parameters 'flags' and 'port' are non-pointer scalar types, so const-qualification of pointed-to types is not applicable. - 'MHD_AcceptPolicyCallback apc' and 'MHD_AccessHandlerCallback dh' are function-pointer typedefs; const-qualifying the referenced function type is not applicable in the sense of Rule 8.13 (function types cannot be const-qualified as object types). - The variadic handling uses 'va_list ap' and the va_start/va_end macros; these are not pointers to user data that would benefit from const-qualified pointee types. - Local variables and expressions other than the listed pointer declarations do not contain pointer-to-object declarations that could be made const-qualified. Therefore only the listed pointer declarations should be investigated further."
}