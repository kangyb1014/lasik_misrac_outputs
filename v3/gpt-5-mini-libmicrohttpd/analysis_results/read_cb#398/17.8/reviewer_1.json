{
  "user_message": "An agent A claimed that the following read_cb code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of read_cb.\n```c\nstatic ssize_t\nread_cb (void *cls, uint64_t pos, char *mem, size_t size)\n{\n  struct Holder *holder = cls;\n  void *src;\n  void *buf;\n  ssize_t ret;\n  size_t offset;\n  size_t r_size;\n\n  if (pos > SSIZE_MAX)\n    return MHD_CONTENT_READER_END_WITH_ERROR;\n  offset = (size_t) pos;\n  src = malloc (size);\n  if (NULL == src)\n    return MHD_CONTENT_READER_END_WITH_ERROR;\n  r_size = fread (src, 1, size, holder->file);\n  if (0 == r_size)\n  {\n    ret = (0 != ferror (holder->file)) ?\n          MHD_CONTENT_READER_END_WITH_ERROR : MHD_CONTENT_READER_END_OF_STREAM;\n    goto done;\n  }\n  if (MHD_YES != compress_buf (&holder->stream, src, r_size, &offset, &buf,\n                               &size, holder->buf))\n    ret = MHD_CONTENT_READER_END_WITH_ERROR;\n  else\n  {\n    memcpy (mem, buf, size);\n    ret = (ssize_t) size;\n  }\n  free (buf); /* Buf may be set even on error return. */\ndone:\n  free (src);\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'size' of read_cb is passed by address (&size) to compress_buf. If compress_buf writes through that pointer (e.g. updates the compressed size), it modifies the function parameter 'size' of read_cb, which violates MISRA C 2023 Rule 17.8 (a function parameter shall not be modified).\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. MISRA C 2023 Rule 17.8 states that a function parameter shall not be modified. In read_cb the identifier size is a function parameter (size_t size). Passing &size to compress_buf allows that callee to write through the pointer and thereby modify the parameter variable size inside read_cb. That is a modification of a function parameter and therefore violates Rule 17.8.\n\n(Clarification: the rule\u2019s note that \u201cthe object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified\u201d concerns pointer parameters of the function being defined \u2014 it does not permit taking the address of a non\u2011pointer parameter and allowing a callee to change it. To comply, make a local copy (e.g. size_t local_size = size;) and pass &local_size to compress_buf, or change the API so no parameter variable is modified.)"
}