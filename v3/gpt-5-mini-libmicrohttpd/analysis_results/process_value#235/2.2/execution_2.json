{
  "result": "success",
  "message": "process_value: entry pp=0x555df942a3e0 value_start=0x555ded17102b value_end=0x555ded17102f last_escape=(nil) pp->xbuf_pos=0 pp->must_ikvi=1 pp->value_offset=0\nafter move: initial xoff=0 pp->xbuf_pos cleared to 0\nloop start: value_start=0x555ded17102b value_end=0x555ded17102f delta=4 pp->must_ikvi=1 xoff=0 pp->value_offset=0\nmoved input: delta=4 new xoff=4 new value_start=0x555ded17102f\nbefore_unescape: xoff=4 xbuf[0..min(32,xoff)]='xxxx'\nafter_unescape: new xoff=4 xbuf[0..min(32,xoff)]='xxxx'\ninvoking ikvi: must_ikvi=1 xoff=4 pp->value_offset=0 key_ptr=0x555df942a480\nikvi returned success: pp->must_ikvi now cleared, pp->value_offset will be updated\nafter ikvi: pp->value_offset=4\nloop end: next xoff=0 next value_start=0x555ded17102f value_end=0x555ded17102f pp->must_ikvi=0\nprocess_value: exit pp=0x555df942a3e0 final value_offset=4 final pp->xbuf_pos=0\nprocess_value: entry pp=0x555df942a3e0 value_start=0x555ded171036 value_end=0x555ded17103a last_escape=(nil) pp->xbuf_pos=0 pp->must_ikvi=1 pp->value_offset=0\nafter move: initial xoff=0 pp->xbuf_pos cleared to 0\nloop start: value_start=0x555ded171036 value_end=0x555ded17103a delta=4 pp->must_ikvi=1 xoff=0 pp->value_offset=0\nmoved input: delta=4 new xoff=4 new value_start=0x555ded17103a\nbefore_unescape: xoff=4 xbuf[0..min(32,xoff)]='yyyy'\nafter_unescape: new xoff=4 xbuf[0..min(32,xoff)]='yyyy'\ninvoking ikvi: must_ikvi=1 xoff=4 pp->value_offset=0 key_ptr=0x555df942a480\nikvi returned success: pp->must_ikvi now cleared, pp->value_offset will be updated\nafter ikvi: pp->value_offset=4\nloop end: next xoff=0 next value_start=0x555ded17103a value_end=0x555ded17103a pp->must_ikvi=0\nprocess_value: exit pp=0x555df942a3e0 final value_offset=4 final pp->xbuf_pos=0\nprocess_value: entry pp=0x555df942a3e0 value_start=0x555ded171040 value_end=0x555ded171040 last_escape=(nil) pp->xbuf_pos=0 pp->must_ikvi=1 pp->value_offset=0\nafter move: initial xoff=0 pp->xbuf_pos cleared to 0\nloop start: value_start=0x555ded171040 value_end=0x555ded171040 delta=0 pp->must_ikvi=1 xoff=0 pp->value_offset=0\nbefore_unescape: xoff=0 xbuf[0..min(32,xoff)]=''\ninvoking ikvi: must_ikvi=1 xoff=0 pp->value_offset=0 key_ptr=0x555df942a480\nikvi returned success: pp->must_ikvi now cleared, pp->value_offset will be updated\nafter ikvi: pp->value_offset=0\nloop end: next xoff=0 next value_start=0x555ded171040 value_end=0x555ded171040 pp->must_ikvi=0\nprocess_value: exit pp=0x555df942a3e0 final value_offset=0 final pp->xbuf_pos=0\nprocess_value: entry pp=0x555df942a3e0 value_start=0x555ded1791dc value_end=0x555ded1791dc last_escape=(nil) pp->xbuf_pos=0 pp->must_ikvi=1 pp->value_offset=0\nafter move: initial xoff=0 pp->xbuf_pos cleared to 0\nloop start: value_start=0x555ded1791dc value_end=0x555ded1791dc delta=0 pp->must_ikvi=1 xoff=0 pp->value_offset=0\nbefore_unescape: xoff=0 xbuf[0..min(32,xoff)]=''\ninvoking ikvi: must_ikvi=1 xoff=0 pp->value_offset=0 key_ptr=0x555df942a480\nikvi returned success: pp->must_ikvi now cleared, pp->value_offset will be updated\nafter ikvi: pp->value_offset=0\nloop end: next xoff=0 next value_start=0x555ded1791dc value_end=0x555ded1791dc pp->must_ikvi=0\nprocess_value: exit pp=0x555df942a3e0 final value_offset=0 final pp->xbuf_pos=0\nprocess_value: entry pp=0x555df942a3e0 value_start=0x555ded17104c value_end=0x555ded171052 last_escape=0x555ded171050 pp->xbuf_pos=0 pp->must_ikvi=1 pp->value_offset=0\nafter move: initial xoff=0 pp->xbuf_pos cleared to 0\nloop start: value_start=0x555ded17104c value_end=0x555ded171052 delta=6 pp->must_ikvi=1 xoff=0 pp->value_offset=0\nmoved input: delta=6 new xoff=6 new value_start=0x555ded171052\nfound '%' two bytes before end: cut=1 adjusted xoff=4\ntwo-byte '%' cut: copied 2 bytes into pp->xbuf, pp->xbuf_pos=2\nbefore_unescape: xoff=4 xbuf[0..min(32,xoff)]='text'\nafter_unescape: new xoff=4 xbuf[0..min(32,xoff)]='text'\ninvoking ikvi: must_ikvi=1 xoff=4 pp->value_offset=0 key_ptr=0x555df942a480\nikvi returned success: pp->must_ikvi now cleared, pp->value_offset will be updated\nafter ikvi: pp->value_offset=4\ncut is true -> break from loop (xoff=4 pp->must_ikvi=0 value_start=0x555ded1"
}