{
  "user_message": "An agent A claimed that the following MHD_digest_auth_calc_userhash code violates the MISRA C 2023 rule 21.17.\n<misra_rule>\nMISRA C 2023 Rule 21.17 is Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_digest_auth_calc_userhash.\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_digest_auth_calc_userhash (enum MHD_DigestAuthAlgo3 algo3,\n                               const char *username,\n                               const char *realm,\n                               void *userhash_bin,\n                               size_t bin_buf_size)\n{\n  struct DigestAlgorithm da;\n  enum MHD_Result ret;\n\n  if (! digest_init_one_time (&da, get_base_digest_algo (algo3)))\n    return MHD_NO;\n  if (digest_get_size (&da) > bin_buf_size)\n    ret = MHD_NO;\n  else\n  {\n    calc_userhash (&da,\n                   username,\n                   strlen (username),\n                   realm,\n                   strlen (realm),\n                   userhash_bin);\n    ret = MHD_YES;\n\n#ifdef MHD_DIGEST_HAS_EXT_ERROR\n    if (digest_ext_error (&da))\n      ret = MHD_NO;\n#endif /* MHD_DIGEST_HAS_EXT_ERROR */\n  }\n  digest_deinit (&da);\n\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nstrlen(username) is called without validating username. If username is NULL or points to a non\u2011null\u2011terminated buffer, strlen will read beyond the object bounds (NULL dereference or buffer overread), violating MISRA C 2023 Rule 21.17.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\nENTRY: MHD_digest_auth_calc_userhash algo3=66 username=0x56324a27c0fa realm=0x56324a27c122 bin_buf_size=31\ndigest initialized, digest_size=32\nEXIT: ret=0\nENTRY: MHD_digest_auth_calc_userhash algo3=66 username=0x56324a27c0fa realm=0x56324a27c122 bin_buf_size=0\ndigest initialized, digest_size=32\nEXIT: ret=0\nENTRY: MHD_digest_auth_calc_userhash algo3=68 username=0x56324a27c0fa realm=0x56324a27c122 bin_buf_size=31\ndigest initialized, digest_size=32\nEXIT: ret=0\nENTRY: MHD_digest_auth_calc_userhash algo3=68 username=0x56324a27c0fa realm=0x56324a27c122 bin_buf_size=0\ndigest initialized, digest_size=32\nEXIT: ret=0\nENTRY: MHD_digest_auth_calc_userhash algo3=65 username=0x55a3ba83b171 realm=0x55a3ba83b18e bin_buf_size=16\ndigest initialized, digest_size=16\nAbout to call strlen on username and realm. username=0x55a3ba83b171 realm=0x55a3ba83b18e\nstrlen results: username_len=1 realm_len=1\ncalc_userhash called\nEXIT: ret=1\nENTRY: MHD_digest_auth_calc_userhash algo3=65 username=0x55a3ba83b171 realm=0x55a3ba83b18e bin_buf_size=32\ndigest initialized, digest_size=16\nAbout to call strlen on username and realm. username=0x55a3ba83b171 realm=0x55a3ba83b18e\nstrlen results: username_len=1 realm_len=1\ncalc_userhash called\nEXIT: ret=1\nENTRY: MHD_digest_auth_calc_userhash algo3=65 username=0x55a3ba83b173 realm=0x55a3ba83b17c bin_buf_size=16\ndigest initialized, digest_size=16\nAbout to call strlen on username and realm. username=0x55a3ba83b173 realm=0x55a3ba83b17c\nstrlen results: username_len=8 realm_len=9\ncalc_userhash called\nEXIT: ret=1\nENTRY: MHD_digest_auth_calc_userhash algo3=65 username=0x55a3ba83b173 realm=0x55a3ba83b17c bin_buf_size=32\ndigest initialized, digest_size=16\nAbout to call strlen on username and realm. username=0x55a3ba83b173 realm=0x55a3ba83b17c\nstrlen results: username_len=8 realm_len=9\ncalc_userhash called\nEXIT: ret=1\nENTRY: MHD_digest_auth_calc_userhash algo3=65 username=0x55a3ba83b186 realm=0x55a3ba83b190 bin_buf_size=16\ndigest initialized, digest_size=16\nAbout to call strlen on username and realm. username=0x55a3ba83b186 realm=0x55a3ba83b190\nstrlen results: username_len=9 realm_len=9\ncalc_userhash called\nEXIT: ret=1\nENTRY: MHD_digest_auth_calc_userhash algo3=65 username=0x55a3ba83b186 realm=0x55a3ba83b190 bin_buf_size=32\ndigest initialized, digest_size=16\nAbout to call strlen on username and realm. username=0x55a3ba83b186 realm=0x55a3ba83b190\nstrlen results: username_len=9 realm_len=9\ncalc_userhash called\nEXIT: ret=1\nENTRY: MHD_digest_auth_calc_userhash algo3=65 username=0x55a3ba83b19a realm=0x55a3ba83b1a1 bin_buf_size=16\ndigest initialized, digest_size=16\nAbout to call strlen on username and realm. username=0x55a3ba83b19a realm=0x55a3ba83b1a1\nstrlen results: username_len=6 realm_len=20\ncalc_userhash called\nEXIT: ret=1\nENTRY: MHD_digest_auth_calc_userhash algo3=65 username=0x55a3ba83b19a realm=0x55a3ba83b1a1 bin_buf_size=32\ndigest initialized, digest_size=16\nAbout to call strlen on username and realm. username=0x55a3ba83b19a realm=0x55a3ba83b1a1\nstrlen results: username_len=6 realm_len=20\ncalc_userhash called\nEXIT: ret=1\nENTRY: MHD_digest_auth_calc_userhash algo3=65 username=0x55a3ba83b19a realm=0x55a3ba83b1b6 bin_buf_size=16\ndigest initialized, digest_size=16\nAbout to call strlen on username and realm. username=0x55a3ba83b19a realm=0x55a3ba83b1b6\nstrlen results: username_len=6 realm_len=18\ncalc_userhash called\nEXIT: ret=1\nENTRY: MHD_digest_auth_calc_userhash algo3=65 username=0x55a3ba83b19a realm=0x55a3ba83b1b6 bin_buf_size=32\ndigest initialized, digest_size=16\nAbout to call strlen on username and realm. username=0x55a3ba83b19a realm=0x55a3ba83b1b6\nstrlen results: username_len=6 realm_len=18\ncalc_userhash called\nEXIT: ret=1\nENTRY: MHD_digest_auth_calc_userhash algo3=65 username=0x55a3ba83b19a realm=0x55a3ba83b1c9 bin_buf_size=16\ndigest initialized, digest_size=16\nAbout to call strlen on username and realm. username=0x55a3ba83b19a realm=0x55a3ba83b1c9\nstrlen results: username_len=6 realm_len=21\ncalc_userhash called\nEXIT: ret=1\nENTRY: MHD_digest_auth_calc_userhash algo3=65 username=0x55a3ba83b19a realm=0x55a3ba83b1c9 bin_buf_s\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "MISRA C:2023 Rule 21.17 concerns any <string.h> functions that may read beyond the bounds of the object referenced by their pointer parameters. strlen is explicitly listed. In the presented code MHD_digest_auth_calc_userhash the calls strlen(username) and strlen(realm) occur with no prior checks of the pointer values or bounds. If either pointer is NULL or references a non\u2011NUL\u2011terminated buffer, strlen can dereference out of bounds (or dereference NULL) and thus violate Rule 21.17. The execution log only shows examples where the pointers were valid at runtime, but that does not eliminate the static possibility of out\u2011of\u2011bounds access at other call sites. Therefore, unless there is an externally guaranteed, formally documented and enforced contract that username and realm are non\u2011NULL, valid, NUL\u2011terminated strings (and that contract is part of the verified interface), the code as shown fails to prevent out\u2011of\u2011bounds accesses and so violates MISRA C 2023 Rule 21.17. To conform, the function should validate the pointers (and/or use bounded alternatives such as strnlen with a known maximum) or rely on a verifiable contract."
}