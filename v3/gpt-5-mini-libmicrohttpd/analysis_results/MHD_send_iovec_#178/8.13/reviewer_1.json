{
  "user_message": "An agent A claimed that the following MHD_send_iovec_ code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_send_iovec_.\n```c\nssize_t\nMHD_send_iovec_ (struct MHD_Connection *connection,\n                 struct MHD_iovec_track_ *const r_iov,\n                 bool push_data)\n{\n#ifdef MHD_VECT_SEND\n#if defined(HTTPS_SUPPORT) || \\\n  defined(_MHD_VECT_SEND_NEEDS_SPIPE_SUPPRESSED)\n  bool use_iov_send = true;\n#endif /* HTTPS_SUPPORT || _MHD_VECT_SEND_NEEDS_SPIPE_SUPPRESSED */\n#endif /* MHD_VECT_SEND */\n\n  mhd_assert (NULL != connection->rp.resp_iov.iov);\n  mhd_assert (NULL != connection->rp.response->data_iov);\n  mhd_assert (connection->rp.resp_iov.cnt > connection->rp.resp_iov.sent);\n#ifdef MHD_VECT_SEND\n#if defined(HTTPS_SUPPORT) || \\\n  defined(_MHD_VECT_SEND_NEEDS_SPIPE_SUPPRESSED)\n#ifdef HTTPS_SUPPORT\n  use_iov_send = use_iov_send &&\n                 (0 == (connection->daemon->options & MHD_USE_TLS));\n#endif /* HTTPS_SUPPORT */\n#ifdef _MHD_VECT_SEND_NEEDS_SPIPE_SUPPRESSED\n  use_iov_send = use_iov_send && (connection->daemon->sigpipe_blocked ||\n                                  connection->sk_spipe_suppress);\n#endif /* _MHD_VECT_SEND_NEEDS_SPIPE_SUPPRESSED */\n  if (use_iov_send)\n#endif /* HTTPS_SUPPORT || _MHD_VECT_SEND_NEEDS_SPIPE_SUPPRESSED */\n  return send_iov_nontls (connection, r_iov, push_data);\n#endif /* MHD_VECT_SEND */\n\n#if ! defined(MHD_VECT_SEND) || defined(HTTPS_SUPPORT) || \\\n  defined(_MHD_VECT_SEND_NEEDS_SPIPE_SUPPRESSED)\n  return send_iov_emu (connection, r_iov, push_data);\n#endif /* !MHD_VECT_SEND || HTTPS_SUPPORT\n          || _MHD_VECT_SEND_NEEDS_SPIPE_SUPPRESSED */\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nPotential violation: r_iov is declared as 'struct MHD_iovec_track_ *const r_iov' (pointer to mutable object). The call send_iov_nontls(connection, r_iov, push_data) will violate MISRA C 2023 Rule 8.13 if send_iov_nontls's parameter is a non-const pointer but the function does not need to modify the pointed-to MHD_iovec_track_ object. In that case the parameter and the argument should be of type 'const struct MHD_iovec_track_ *' (or the function prototype should accept a pointer-to-const) and the present call/definition would violate the rule. The code as given cannot be determined to definitely violate the rule without the prototype/implementation of send_iov_nontls; the above describes the specific violation scenario.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The report is not conclusively correct. MISRA C 2023 Rule 8.13 recommends that pointers point to const-qualified types when the pointed-to object does not need modification. In the snippet r_iov is declared as \"struct MHD_iovec_track_ *const r_iov\" (a const pointer to a mutable pointee). That by itself is not a rule violation \u2014 it only becomes a violation if the pointee really could (and should) be const-qualified. Agent A's scenario is speculative: whether there is a violation depends on the prototypes/implementations of send_iov_nontls and send_iov_emu. If those functions (and any other callees) do not modify the MHD_iovec_track_ object, then they and this parameter should be changed to accept a pointer-to-const (e.g. \"const struct MHD_iovec_track_ *\" or \"const struct MHD_iovec_track_ *const\"), and only then would the current code violate Rule 8.13. If the callees do modify the pointee, the current non-const pointee type is justified. Without the callee signatures/definitions we cannot assert a definite violation, so the report as stated is not correct."
}