{
  "user_message": "An agent A claimed that the following try_match_header code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of try_match_header.\n```c\nstatic int\ntry_match_header (const char *prefix,\n                  size_t prefix_len,\n                  char *line,\n                  char **suffix)\n{\n  if (NULL != *suffix)\n    return MHD_NO;\n  while (0 != *line)\n  {\n    if (MHD_str_equal_caseless_n_ (prefix,\n                                   line,\n                                   prefix_len))\n    {\n      *suffix = strdup (&line[prefix_len]);\n      return MHD_YES;\n    }\n    ++line;\n  }\n  return MHD_NO;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'line' is declared as 'char *line' but is only read from (while (0 != *line), passed to MHD_str_equal_caseless_n_ and used as input to strdup). According to MISRA C 2023 Rule 8.13, the pointer should point to a const-qualified type whenever possible. In this code 'line' can and should be declared as 'const char *line' (and usages such as &line[prefix_len] remain valid). Change the function signature to use 'const char *line' to comply with the rule.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\nevent=entry prefix_len=14 pos=0 note=start\nprefix=\"Content-type: \"\nline_rest=\"Content-Type: text/plain\"\nevent=iter prefix_len=14 pos=0 note=checking\nprefix=\"Content-type: \"\nline_rest=\"Content-Type: text/plain\"\nevent=match_found prefix_len=14 pos=0 note=about to strdup suffix\nprefix=\"Content-type: \"\nline_rest=\"Content-Type: text/plain\"\nevent=strdup_ok prefix_len=14 pos=0 note=text/plain\nprefix=\"Content-type: \"\nline_rest=\"Content-Type: text/plain\"\nevent=entry prefix_len=27 pos=0 note=start\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"Content-Type: text/plain\"\nevent=iter prefix_len=27 pos=0 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"Content-Type: text/plain\"\nevent=iter prefix_len=27 pos=1 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"ontent-Type: text/plain\"\nevent=iter prefix_len=27 pos=2 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"ntent-Type: text/plain\"\nevent=iter prefix_len=27 pos=3 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"tent-Type: text/plain\"\nevent=iter prefix_len=27 pos=4 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"ent-Type: text/plain\"\nevent=iter prefix_len=27 pos=5 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"nt-Type: text/plain\"\nevent=iter prefix_len=27 pos=6 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"t-Type: text/plain\"\nevent=iter prefix_len=27 pos=7 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"-Type: text/plain\"\nevent=iter prefix_len=27 pos=8 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"Type: text/plain\"\nevent=iter prefix_len=27 pos=9 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"ype: text/plain\"\nevent=iter prefix_len=27 pos=10 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"pe: text/plain\"\nevent=iter prefix_len=27 pos=11 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"e: text/plain\"\nevent=iter prefix_len=27 pos=12 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\": text/plain\"\nevent=iter prefix_len=27 pos=13 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\" text/plain\"\nevent=iter prefix_len=27 pos=14 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"text/plain\"\nevent=iter prefix_len=27 pos=15 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"ext/plain\"\nevent=iter prefix_len=27 pos=16 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"xt/plain\"\nevent=iter prefix_len=27 pos=17 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"t/plain\"\nevent=iter prefix_len=27 pos=18 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"/plain\"\nevent=iter prefix_len=27 pos=19 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"plain\"\nevent=iter prefix_len=27 pos=20 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"lain\"\nevent=iter prefix_len=27 pos=21 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"ain\"\nevent=iter prefix_len=27 pos=22 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"in\"\nevent=iter prefix_len=27 pos=23 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"n\"\nevent=no_match prefix_len=27 pos=24 note=exhausted line\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"\"\nevent=entry prefix_len=14 pos=0 note=start\nprefix=\"Content-type: \"\nline_rest=\"Content-Transfer-Encoding: binary\"\nevent=exit_suffix_not_null prefix_len=14 pos=0 note=suffix already set\nprefix=\"Content-type: \"\nline_rest=\"Content-Transfer-Encoding: binary\"\nevent=entry prefix_len=27 pos=0 note=start\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"Content-Transfer-Encoding: binary\"\nevent=iter prefix_len=27 pos=0 note=checking\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"Content-Transfer-Encoding: binary\"\nevent=match_found prefix_len=27 pos=0 note=about to strdup suffix\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"Content-Transfer-Encoding: binary\"\nevent=strdup_ok prefix_len=27 pos=0 note=binary\nprefix=\"Content-Transfer-Encoding: \"\nline_rest=\"Content-Transfer-Encoding: binary\"\nevent=entry prefix_len=14 pos=0 note=star\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. MISRA C:2023 Rule 8.13 requires that a pointer should point to a const-qualified type whenever possible. In try_match_header the parameter line is only read: the code tests *line, passes line to a comparison function and takes &line[prefix_len] as input to strdup. The function never modifies the characters pointed to by line (pointer arithmetic ++line only changes the local pointer, not the referenced objects), so the referenced type can and should be const-qualified. Changing the signature to use const char *line (and propagating const where needed in callees or ensuring the called functions accept const) would satisfy the rule. Therefore the reported violation is correct."
}