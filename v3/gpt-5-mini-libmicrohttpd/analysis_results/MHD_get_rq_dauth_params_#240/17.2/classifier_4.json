{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 17.2 is: Functions shall not call themselves, either directly or indirectly.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_get_rq_dauth_params_:\n```c\nconst struct MHD_RqDAuth *\nMHD_get_rq_dauth_params_ (struct MHD_Connection *connection)\n{\n  struct _MHD_str_w_len h_auth_value;\n  struct MHD_RqDAuth *dauth;\n\n  mhd_assert (MHD_CONNECTION_HEADERS_PROCESSED <= connection->state);\n\n  if (connection->rq.dauth_tried)\n    return connection->rq.dauth;\n\n  if (MHD_CONNECTION_HEADERS_PROCESSED > connection->state)\n    return NULL;\n\n  if (! find_auth_rq_header_ (connection, MHD_AUTHTYPE_DIGEST, &h_auth_value))\n  {\n    connection->rq.dauth_tried = true;\n    connection->rq.dauth = NULL;\n    return NULL;\n  }\n\n  dauth =\n    (struct MHD_RqDAuth *)\n    MHD_connection_alloc_memory_ (connection, sizeof (struct MHD_RqDAuth));\n\n  if (NULL == dauth)\n  {\n#ifdef HAVE_MESSAGES\n    MHD_DLOG (connection->daemon,\n              _ (\"Not enough memory in the connection's pool to allocate \" \\\n                 \"for Digest Authorization header parsing.\\n\"));\n#endif /* HAVE_MESSAGES */\n    return NULL;\n  }\n\n  memset (dauth, 0, sizeof(struct MHD_RqDAuth));\n  if (parse_dauth_params (h_auth_value.str, h_auth_value.len, dauth))\n    connection->rq.dauth = dauth;\n  else\n  {\n#ifdef HAVE_MESSAGES\n    MHD_DLOG (connection->daemon,\n              _ (\"The Digest Authorization client's header has \"\n                 \"incorrect format.\\n\"));\n#endif /* HAVE_MESSAGES */\n    connection->rq.dauth = NULL;\n    /* Memory in the pool remains allocated until next request */\n  }\n  connection->rq.dauth_tried = true;\n  return connection->rq.dauth;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nMHD_DLOG (connection->daemon,\n              _ (\"The Digest Authorization client's header has \"\n                 \"incorrect format.\\n\"));\n```\nFocus on the above code fragment and judge whether it violates the rule 17.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No recursion: the fragment is a logging macro invocation (MHD_DLOG) with a translated string (via _(...)). It does not call MHD_get_rq_dauth_params_ (nor any other function shown) directly or indirectly. Therefore Rule 17.2 is not violated. (Only if MHD_DLOG or _ were implemented such that they call back into MHD_get_rq_dauth_params_ would recursion be possible, but nothing in the fragment indicates that.)"
}