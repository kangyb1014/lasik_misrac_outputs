{
  "user_message": "An agent A claimed that the following MHD_connection_close_ code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_connection_close_.\n```c\nvoid\nMHD_connection_close_ (struct MHD_Connection *connection,\n                       enum MHD_RequestTerminationCode termination_code)\n{\n  struct MHD_Daemon *daemon = connection->daemon;\n  struct MHD_Response *resp = connection->rp.response;\n\n  mhd_assert (! connection->suspended);\n#ifdef MHD_USE_THREADS\n  mhd_assert ( (! MHD_D_IS_USING_THREADS_ (daemon)) || \\\n               MHD_thread_handle_ID_is_current_thread_ (connection->tid) );\n#endif /* MHD_USE_THREADS */\n  if ( (NULL != daemon->notify_completed) &&\n       (connection->rq.client_aware) )\n    daemon->notify_completed (daemon->notify_completed_cls,\n                              connection,\n                              &connection->rq.client_context,\n                              termination_code);\n  connection->rq.client_aware = false;\n  if (NULL != resp)\n  {\n    connection->rp.response = NULL;\n    MHD_destroy_response (resp);\n  }\n  if (NULL != connection->pool)\n  {\n    MHD_pool_destroy (connection->pool);\n    connection->pool = NULL;\n  }\n\n  MHD_connection_mark_closed_ (connection);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe local pointer 'daemon' is declared as 'struct MHD_Daemon *daemon = connection->daemon;' but in this function it is only used for read-only access (checking daemon->notify_completed, testing thread status via a macro, and reading notify_completed_cls). There are no modifications to the pointed-to MHD_Daemon object, so the pointer could and should be declared as 'const struct MHD_Daemon *daemon' to satisfy MISRA C 2023 Rule 8.13. (If any macros or called functions require a non-const pointer, that would be the only legitimate reason to keep it non-const.)\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\n[MHD_connection_close_] stage=entry\n  connection=0x562468f261e0\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=0x562468f26450\n---\n[MHD_connection_close_] stage=thread_check_passed\n  connection=0x562468f261e0\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=0x562468f26450\n---\n[MHD_connection_close_] stage=before_destroy_pool\n  connection=0x562468f261e0\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=0x562468f26450\n---\n[MHD_connection_close_] stage=end\n  connection=0x562468f261e0\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=(nil)\n---\n[MHD_connection_close_] stage=entry\n  connection=0x562468f27490\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=0x562468f26450\n---\n[MHD_connection_close_] stage=thread_check_passed\n  connection=0x562468f27490\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=0x562468f26450\n---\n[MHD_connection_close_] stage=before_destroy_pool\n  connection=0x562468f27490\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=0x562468f26450\n---\n[MHD_connection_close_] stage=end\n  connection=0x562468f27490\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=(nil)\n---\n[MHD_connection_close_] stage=entry\n  connection=0x562468f276e0\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=0x562468f26450\n---\n[MHD_connection_close_] stage=thread_check_passed\n  connection=0x562468f276e0\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=0x562468f26450\n---\n[MHD_connection_close_] stage=before_destroy_pool\n  connection=0x562468f276e0\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=0x562468f26450\n---\n[MHD_connection_close_] stage=end\n  connection=0x562468f276e0\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=(nil)\n---\n[MHD_connection_close_] stage=entry\n  connection=0x562468f27930\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=0x562468f26450\n---\n[MHD_connection_close_] stage=thread_check_passed\n  connection=0x562468f27930\n  daemon=0x562468f258d0\n  resp=(nil)\n  termination_code=5\n  connection->rq.client_aware=0\n  daemon->notify_completed=0x56242acf92f0\n  daemon->notify_completed_cls=0x562468f25890\n  connection->pool=0x562468f26450\n---\n[MHD_connection_close_] stage=before_destroy_pool\n  connection=0x562468f27930\n  daemon=0x562468f258d0\n  resp=(n\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A's report is correct. In the body of MHD_connection_close_ the local variable daemon is only used for read-only accesses (checking daemon->notify_completed, reading daemon->notify_completed_cls, and passing daemon to a thread-check macro). There are no writes to *daemon and daemon itself is not reassigned, so the pointer could be declared as const struct MHD_Daemon *daemon to satisfy MISRA C 2023 Rule 8.13. The only caveat would be if the macro MHD_D_IS_USING_THREADS_ or any invoked function expects a non-const pointer or performs a modification via that pointer; from the shown code and execution log there is no indication of such modification, so the rule is violated as reported."
}