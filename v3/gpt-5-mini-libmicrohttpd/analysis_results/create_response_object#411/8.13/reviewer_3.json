{
  "user_message": "An agent A claimed that the following create_response_object code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of create_response_object.\n```c\nstatic struct MHD_Response *\ncreate_response_object (void)\n{\n#if MHD_VERSION >= 0x00097701\n  if (NULL != body_dyn)\n    return MHD_create_response_from_buffer_static (body_dyn_size,\n                                                   body_dyn);\n  else if (tool_params.empty)\n    return MHD_create_response_empty (MHD_RF_NONE);\n\n  return MHD_create_response_from_buffer_static (MHD_STATICSTR_LEN_ (tiny_body),\n                                                 tiny_body);\n\n#else  /* MHD_VERSION < 0x00097701 */\n  if (NULL != body_dyn)\n    return MHD_create_response_from_buffer (body_dyn_size,\n                                            (void *) body_dyn,\n                                            MHD_RESPMEM_PERSISTENT);\n  else if (tool_params.empty)\n    return MHD_create_response_from_buffer (0,\n                                            (void *) tiny_body,\n                                            MHD_RESPMEM_PERSISTENT);\n\n  return MHD_create_response_from_buffer (MHD_STATICSTR_LEN_ (tiny_body),\n                                          (void *) tiny_body,\n                                          MHD_RESPMEM_PERSISTENT);\n#endif /* MHD_VERSION < 0x00097701 */\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe call casts away const from tiny_body: (void *) tiny_body. If tiny_body refers to a string literal or a const-qualified object (e.g. const char * or const char[]), this removes the const qualifier when passing to MHD_create_response_from_buffer, which means the pointer does not point to a const-qualified type as required by MISRA C 2023 Rule 8.13. (Root cause: the library API expects a non-const void*, so the code casts away const.)\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct in the scenario described. MISRA C:2023 Rule 8.13 directs that pointers should point to const-qualified types wherever possible. In the #else branch the code explicitly casts tiny_body (and likewise body_dyn) to (void *), which removes any const qualification on the referenced object when calling MHD_create_response_from_buffer. If tiny_body/body_dyn are string literals or otherwise const-qualified (as they typically should be, since they are immutable response data), this cast discards const and therefore violates the intent of Rule 8.13. Note: if, contrary to typical practice, tiny_body/body_dyn are actually declared as non-const char arrays, there would be no discard of const in this snippet; but given the usual definitions (and the agent A scenario), the report that this is a Rule 8.13 violation is correct."
}