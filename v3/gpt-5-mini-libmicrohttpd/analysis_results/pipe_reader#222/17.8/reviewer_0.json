{
  "user_message": "An agent A claimed that the following pipe_reader code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of pipe_reader.\n```c\nstatic ssize_t\npipe_reader (void *cls,\n             uint64_t pos,\n             char *buf,\n             size_t max)\n{\n  struct MHD_Response *response = cls;\n  ssize_t n;\n\n  (void) pos;\n\n#ifndef _WIN32\n  if (SSIZE_MAX < max)\n    max = SSIZE_MAX;\n  n = read (response->fd,\n            buf,\n            (MHD_SCKT_SEND_SIZE_) max);\n#else  /* _WIN32 */\n  if (UINT_MAX < max)\n    max = INT_MAX;\n  n = read (response->fd,\n            buf,\n            (unsigned int) max);\n#endif /* _WIN32 */\n\n  if (0 == n)\n    return MHD_CONTENT_READER_END_OF_STREAM;\n  if (n < 0)\n    return MHD_CONTENT_READER_END_WITH_ERROR;\n  return n;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function parameter 'max' (type size_t) is assigned new values (e.g. \"max = SSIZE_MAX;\" or \"max = INT_MAX;\") inside pipe_reader. This modifies the parameter variable itself, which violates MISRA C 2023 Rule 17.8. (Fix: copy 'max' to a local variable and modify that local variable instead.)\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. MISRA C:2023 Rule 17.8 states that a function parameter shall not be modified. In pipe_reader the value parameter 'max' (type size_t) is assigned new values (e.g. \"max = SSIZE_MAX;\" and \"max = INT_MAX;\"), which constitutes modifying the parameter variable itself and therefore violates Rule 17.8. The pointer exception in the rule (you may modify the object referred to by a pointer parameter, but not the pointer) does not apply here because 'max' is not a pointer. Fix: introduce a local variable (e.g. size_t to_send = max;) and adjust that local variable instead of assigning to the parameter."
}