{
  "user_message": "An agent A claimed that the following MHD_create_response_from_buffer_with_free_callback code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_create_response_from_buffer_with_free_callback.\n```c\n_MHD_EXTERN struct MHD_Response *\nMHD_create_response_from_buffer_with_free_callback (size_t size,\n                                                    void *buffer,\n                                                    MHD_ContentReaderFreeCallback\n                                                    crfc)\n{\n  return MHD_create_response_from_buffer_with_free_callback_cls (size,\n                                                                 buffer,\n                                                                 crfc,\n                                                                 buffer);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'void *buffer' is not const-qualified. If the function and its callee only read the response data (do not modify it), then the pointer should be declared 'const void *buffer' per MISRA C 2023 Rule 8.13. As written, declaring it as 'void *' violates the rule because const-qualification is possible but not used. (If, however, the implementation takes ownership and frees or otherwise modifies the buffer via the pointer, the non-const declaration would be justified and not a violation.)\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "MISRA C:2023 Rule 8.13 requires pointers to be const-qualified when they need not be used to modify the pointed-to object. The snippet shown is only a thin wrapper that takes a void *buffer and forwards it to MHD_create_response_from_buffer_with_free_callback_cls both as the buffer argument and as the cls/context argument. From this fragment alone you cannot determine whether the buffer is ever modified or freed by the callee or by the free-callback; if the implementation (or the free callback) takes ownership and will free or otherwise modify the buffer, the non-const qualification is required and conformant with MISRA. Therefore the report that this code violates Rule 8.13 is not proven by the snippet \u2014 the claim is only correct if it can be shown that the buffer is never modified or freed (i.e. const qualification is indeed possible). Given the provided code and context, the agent\u2019s assertion is not justified."
}