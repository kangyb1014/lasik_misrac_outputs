{
  "user_message": "An agent A claimed that the following MHD_add_to_fd_set_ code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_add_to_fd_set_.\n```c\nint\nMHD_add_to_fd_set_ (MHD_socket fd,\n                    fd_set *set,\n                    MHD_socket *max_fd,\n                    int fd_setsize)\n{\n  if ( (NULL == set) ||\n       (MHD_INVALID_SOCKET == fd) )\n    return 0;\n\n#ifndef HAS_FD_SETSIZE_OVERRIDABLE\n  (void) fd_setsize;  /* Mute compiler warning */\n  fd_setsize = (int) FD_SETSIZE; /* Help compiler to optimise */\n#endif /* ! HAS_FD_SETSIZE_OVERRIDABLE */\n\n  if (! MHD_SCKT_FD_FITS_FDSET_SETSIZE_ (fd,\n                                         set,\n                                         fd_setsize))\n    return 0;\n  MHD_SCKT_ADD_FD_TO_FDSET_SETSIZE_ (fd,\n                                     set,\n                                     fd_setsize);\n  if ( (NULL != max_fd) &&\n       ( (fd > *max_fd) ||\n         (MHD_INVALID_SOCKET == *max_fd) ) )\n    *max_fd = fd;\n  return ! 0;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe statement 'fd_setsize = (int) FD_SETSIZE;' assigns to the function parameter fd_setsize, modifying a non\u2011pointer parameter inside the function. MISRA C 2023 Rule 17.8 prohibits modifying function parameters (the exception only allows modifying the object referred to by a pointer parameter, not non\u2011pointer parameters or the pointer itself). This assignment therefore violates Rule 17.8. (Fix: use a local variable, e.g. 'int local_fd_setsize = (int)FD_SETSIZE;'.)\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. MISRA C 2023 Rule 17.8 requires that a function parameter shall not be modified; the exception only allows modifying the object referred to by a pointer parameter (not non\u2011pointer parameters). In the shown code, the statement \"fd_setsize = (int) FD_SETSIZE;\" assigns to the non\u2011pointer parameter fd_setsize, which is a direct modification of a function parameter and therefore violates Rule 17.8. This occurs (when the conditional compilation branch is taken) regardless of the intent to silence a warning or help optimization. Fixes include copying FD_SETSIZE into a local variable (e.g. \"int local_fd_setsize = (int)FD_SETSIZE;\" and use that) or otherwise avoid assigning to the parameter."
}