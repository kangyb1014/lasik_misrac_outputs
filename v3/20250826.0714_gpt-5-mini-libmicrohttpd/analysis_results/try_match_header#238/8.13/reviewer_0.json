{
  "user_message": "An agent A claimed that the following try_match_header code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of try_match_header.\n```c\nstatic int\ntry_match_header (const char *prefix,\n                  size_t prefix_len,\n                  char *line,\n                  char **suffix)\n{\n  if (NULL != *suffix)\n    return MHD_NO;\n  while (0 != *line)\n  {\n    if (MHD_str_equal_caseless_n_ (prefix,\n                                   line,\n                                   prefix_len))\n    {\n      *suffix = strdup (&line[prefix_len]);\n      return MHD_YES;\n    }\n    ++line;\n  }\n  return MHD_NO;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe local parameter 'line' is declared as 'char *line' but is only read (not modified) in try_match_header and is passed to MHD_str_equal_caseless_n_. The pointer\u2019s pointee should be const-qualified (const char *line) whenever possible. Declaring it as non-const violates MISRA C 2023 Rule 8.13.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. In try_match_header the function never modifies the characters that 'line' points to \u2014 it only reads them (calls MHD_str_equal_caseless_n_, indexes into the buffer and passes &line[prefix_len] to strdup) and advances the local pointer variable (++line). Therefore the pointed-to type can and should be const-qualified (i.e. const char *line). Declaring it const does not prevent pointer arithmetic (you can increment a const char *), and it matches the callees that expect const char * as input. Under MISRA C 2023 Rule 8.13 this is a violation: the pointer should point to a const-qualified type whenever possible."
}