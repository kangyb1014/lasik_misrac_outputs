{
  "user_message": "An agent A claimed that the following ahc_echo code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of ahc_echo.\n```c\nstatic enum MHD_Result\nahc_echo (void *cls, struct MHD_Connection *con, const char *url, const\n          char *method, const char *version,\n          const char *upload_data, size_t *upload_size, void **req_cls)\n{\n  struct Holder *holder;\n  struct MHD_Response *res;\n  enum MHD_Result ret;\n  (void) cls;\n  (void) url;\n  (void) method;\n  (void) version;\n  (void) upload_data;\n  (void) upload_size;\n  if (NULL == *req_cls)\n  {\n    *req_cls = (void *) 1;\n    return MHD_YES;\n  }\n  *req_cls = NULL;\n  holder = calloc (1, sizeof (struct Holder));\n  if (! holder)\n    return MHD_NO;\n  holder->file = fopen (__FILE__, \"rb\");\n  if (NULL == holder->file)\n    goto file_error;\n  if (Z_OK != deflateInit (&holder->stream, Z_BEST_COMPRESSION))\n    goto stream_error;\n  holder->buf = malloc (CHUNK);\n  if (NULL == holder->buf)\n    goto buf_error;\n  res = MHD_create_response_from_callback (MHD_SIZE_UNKNOWN, 1024, &read_cb,\n                                           holder, &free_cb);\n  if (NULL == res)\n    goto error;\n  ret = MHD_add_response_header (res, MHD_HTTP_HEADER_CONTENT_ENCODING,\n                                 \"deflate\");\n  if (MHD_YES != ret)\n    goto res_error;\n  ret = MHD_add_response_header (res, MHD_HTTP_HEADER_CONTENT_TYPE, \"text/x-c\");\n  if (MHD_YES != ret)\n    goto res_error;\n  ret = MHD_queue_response (con, MHD_HTTP_OK, res);\nres_error:\n  MHD_destroy_response (res);\n  return ret;\nerror:\n  free (holder->buf);\nbuf_error:\n  deflateEnd (&holder->stream);\nstream_error:\n  fclose (holder->file);\nfile_error:\n  free (holder);\n  return MHD_NO;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function parameter 'size_t *upload_size' is not const-qualified even though the function does not modify the pointed-to value (it merely casts it to void). It should be declared as 'const size_t *upload_size' (or omitted) to satisfy Rule 8.13.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The report is not correct. Rule 8.13 advises that pointers should point to const-qualified types when possible, but it does not override the requirement to match an external API\u2019s required prototype. The ahc_echo function implements the libmicrohttpd access handler callback whose signature expects a size_t *upload_data_size (non-const) because the library may require the handler to update that value. Even if this particular implementation does not use or modify *upload_size (it explicitly casts it to void), the parameter must keep the non-const type to remain a valid implementation of the required callback. Changing it to const size_t * would break compatibility with the library\u2019s prototype. Therefore there is no MISRA 8.13 violation in this context (the non-const pointer is required by the external interface)."
}