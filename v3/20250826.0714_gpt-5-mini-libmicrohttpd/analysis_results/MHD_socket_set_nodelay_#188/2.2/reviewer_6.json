{
  "user_message": "An agent A claimed that the following MHD_socket_set_nodelay_ code violates the MISRA C 2023 rule 2.2.\n<misra_rule>\nMISRA C 2023 Rule 2.2 is A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_socket_set_nodelay_.\n```c\nint\nMHD_socket_set_nodelay_ (MHD_socket sock,\n                         bool on)\n{\n#ifdef TCP_NODELAY\n  {\n    const MHD_SCKT_OPT_BOOL_ off_val = 0;\n    const MHD_SCKT_OPT_BOOL_ on_val = 1;\n    /* Disable Nagle's algorithm for normal buffering */\n    return setsockopt (sock,\n                       IPPROTO_TCP,\n                       TCP_NODELAY,\n                       (const void *) ((on) ? &on_val : &off_val),\n                       sizeof (on_val));\n  }\n#else\n  (void) sock;\n  return 0;\n#endif /* TCP_NODELAY */\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nWhen TCP_NODELAY is not defined, the statement '(void) sock;' is executed solely to suppress an unused-parameter warning. Removing this statement does not change the program's runtime behaviour (the function still returns 0), so the operation is executed but its removal would not affect program behaviour \u2014 this is dead code and thus violates MISRA C 2023 Rule 2.2.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. MISRA C 2023 Rule 2.2 forbids \u2018\u2018dead code\u2019\u2019 defined as any operation that is executed but whose removal would not affect program behaviour. In the else branch (when TCP_NODELAY is not defined) the statement '(void) sock;' is an executed expression statement with no observable effect. Removing that statement does not change the runtime behaviour (the function still returns 0 and has no side effects), so by the rule's wording it is dead code. (Compiler warnings or build diagnostics are not part of the program behaviour as defined by the rule.)\n\nSuggested fixes: remove the executed no-op by avoiding the parameter name in the function definition (e.g. use MHD_socket /*sock*/ in the parameter list or omit the name in that configuration), or use a mechanism recognized by MISRA (conditional compilation of the parameter name, or a standardized UNUSED_PARAMETER macro that expands to nothing) so that no no-op expression is executed at runtime."
}