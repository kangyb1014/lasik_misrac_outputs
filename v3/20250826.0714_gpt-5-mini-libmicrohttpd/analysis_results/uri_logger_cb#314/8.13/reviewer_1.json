{
  "user_message": "An agent A claimed that the following uri_logger_cb code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of uri_logger_cb.\n```c\nstatic void *\nuri_logger_cb (void *cls,\n               const char *uri)\n{\n  struct timeval *tv = malloc (sizeof (struct timeval));\n  (void) cls; /* Unused. Silent compiler warning. */\n  (void) uri; /* Unused. Silent compiler warning. */\n\n  if (NULL != tv)\n    gettimeofday (tv, NULL);\n  return tv;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'cls' is declared as void * but is not used or modified in the function; per MISRA C 2023 Rule 8.13 it should be declared to point to a const-qualified type (e.g. const void *) when possible. If this prototype must match an external/non-const callback signature, that is a valid justification; otherwise the non-const declaration is a violation.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "MISRA C:2023 R.8.13 advises that pointers should be to const-qualified types when possible. In the snippet, the parameter cls is not used or modified, so from a purely local view it could be declared const void * (and the (void) cls suppression removed), which would satisfy the rule. However, whether the current declaration is actually a MISRA violation depends on context: if uri_logger_cb must match an external callback API whose prototype uses void * (non-const), keeping void * is a valid justification and not a fault. The provided code is static, so the context is not shown; therefore you cannot conclusively assert a violation based only on the snippet. Recommendation: if the signature is not constrained by an external API, change the parameter to const void *cls. If it must match an external API, document that justification (or record a formal deviation) so the non-const pointer is acceptable under MISRA."
}