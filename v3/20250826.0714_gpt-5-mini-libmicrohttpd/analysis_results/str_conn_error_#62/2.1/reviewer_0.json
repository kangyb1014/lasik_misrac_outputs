{
  "user_message": "An agent A claimed that the following str_conn_error_ code violates the MISRA C 2023 rule 2.1.\n<misra_rule>\nMISRA C 2023 Rule 2.1 is A project shall not contain unreachable code.\n\n</misra_rule>\n<target_code>\nHere is the original code of str_conn_error_.\n```c\nstatic const char *\nstr_conn_error_ (ssize_t mhd_err_code)\n{\n  switch (mhd_err_code)\n  {\n  case MHD_ERR_AGAIN_:\n    return _ (\"The operation would block, retry later\");\n  case MHD_ERR_CONNRESET_:\n    return _ (\"The connection was forcibly closed by remote peer\");\n  case MHD_ERR_NOTCONN_:\n    return _ (\"The socket is not connected\");\n  case MHD_ERR_NOMEM_:\n    return _ (\"Not enough system resources to serve the request\");\n  case MHD_ERR_BADF_:\n    return _ (\"Bad FD value\");\n  case MHD_ERR_INVAL_:\n    return _ (\"Argument value is invalid\");\n  case MHD_ERR_OPNOTSUPP_:\n    return _ (\"Argument value is not supported\");\n  case MHD_ERR_PIPE_:\n    return _ (\"The socket is no longer available for sending\");\n  case MHD_ERR_TLS_:\n    return _ (\"TLS encryption or decryption error\");\n  default:\n    break;   /* Mute compiler warning */\n  }\n  if (0 <= mhd_err_code)\n    return _ (\"Not an error code\");\n\n  mhd_assert (0); /* Should never be reachable */\n  return _ (\"Wrong error code value\");\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIf mhd_assert is implemented as a non\u2011returning check (e.g. expands to abort(), exit(), __builtin_trap() or a call to a function marked noreturn), control cannot proceed past mhd_assert(0) and the subsequent 'return \"Wrong error code value\";' is unreachable. This makes the code violate MISRA C 2023 Rule 2.1. (Note: if mhd_assert is a no-op in some builds, the return is reachable; the violation occurs when the assert does not return.)\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The agent A's report is correct for the scenario described. MISRA C 2023 Rule 2.1 forbids unreachable code. If mhd_assert is implemented as a non\u2011returning operation (e.g. abort(), exit(), __builtin_trap() or a function declared noreturn), control cannot continue past mhd_assert(0) and the subsequent return _ (\"Wrong error code value\"); is unreachable \u2014 this constitutes a Rule 2.1 violation. If, however, mhd_assert is a no\u2011op or otherwise returns normally in the build under analysis, the return is reachable and there is no violation. In short: the report is correct in the case where mhd_assert does not return; the presence or absence of a violation depends on how mhd_assert is defined in the project configuration."
}