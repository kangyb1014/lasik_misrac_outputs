{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of check_apply_param__thread_per_conn:\n```c\nstatic int\ncheck_apply_param__thread_per_conn (void)\n{\n  if (! tool_params.thread_per_conn)\n    return ! 0;\n\n  if (tool_params.epoll)\n  {\n    fprintf (stderr, \"'Thread-per-connection' mode cannot be used together \"\n             \"with 'epoll'.\\n\");\n    return 0;\n  }\n  num_threads = 1;\n\n  return ! 0;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nstatic int\ncheck_apply_param__thread_per_conn (void)\n{\n```\nFocus on the above code fragment and judge whether it violates the rule 2.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No dead code can be determined from the fragment alone. The function header/definition itself does not prove a Rule 2.2 violation. However, a concrete violation scenario would be: the function is defined with internal linkage (static) but is not called anywhere in the translation unit (no references). In that case check_apply_param__thread_per_conn would be dead code (its removal would not affect program behaviour) and would violate MISRA C 2023 Rule 2.2. Another internal-violation scenario: the assignment 'num_threads = 1;' inside the function would be dead if the variable is never subsequently used in a way that affects behaviour."
}