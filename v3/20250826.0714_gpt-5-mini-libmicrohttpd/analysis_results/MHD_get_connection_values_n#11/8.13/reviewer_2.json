{
  "user_message": "An agent A claimed that the following MHD_get_connection_values_n code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_get_connection_values_n.\n```c\n_MHD_EXTERN int\nMHD_get_connection_values_n (struct MHD_Connection *connection,\n                             enum MHD_ValueKind kind,\n                             MHD_KeyValueIteratorN iterator,\n                             void *iterator_cls)\n{\n  int ret;\n  struct MHD_HTTP_Req_Header *pos;\n\n  if (NULL == connection)\n    return -1;\n  ret = 0;\n\n  if (NULL == iterator)\n    for (pos = connection->rq.headers_received; NULL != pos; pos = pos->next)\n    {\n      if (0 != (kind & pos->kind))\n        ret++;\n    }\n  else\n    for (pos = connection->rq.headers_received; NULL != pos; pos = pos->next)\n      if (0 != (kind & pos->kind))\n      {\n        ret++;\n        if (MHD_NO == iterator (iterator_cls,\n                                pos->kind,\n                                pos->header,\n                                pos->header_size,\n                                pos->value,\n                                pos->value_size))\n          return ret;\n      }\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe pointer parameter 'struct MHD_Connection *connection' is only read (the function traverses connection->rq.headers_received and reads fields) and is not modified, so it should be declared as 'const struct MHD_Connection *connection'. This violates MISRA C 2023 Rule 8.13. Additionally, 'void *iterator_cls' could also be const-qualified (and the iterator type adjusted accordingly) if the iterator does not modify the context object.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\nENTRY: MHD_get_connection_values_n connection=0x5638ba4f6270 kind=1 iterator=0x5638a09c3550 iterator_cls=0x7ffcadedb490\n  node=0x5638ba4fe480 kind=1 header_size=4 value_size=9 header_ptr=0x5638ba4f64d1 value_ptr=0x5638ba4f64d7\n    header_preview=\"Host\" value_preview=\"localhost\"\n  node=0x5638ba4fe440 kind=1 header_size=10 value_size=15 header_ptr=0x5638ba4f64e2 value_ptr=0x5638ba4f64ee\n    header_preview=\"User-Agent\" value_preview=\"dummyclient/0.9\"\n  node=0x5638ba4fe400 kind=1 header_size=14 value_size=2 header_ptr=0x5638ba4f64ff value_ptr=0x5638ba4f650f\n    header_preview=\"Content-Length\" value_preview=\"18\"\n  node=0x5638ba4fe3c0 kind=1 header_size=12 value_size=10 header_ptr=0x5638ba4f6513 value_ptr=0x5638ba4f6521\n    header_preview=\"Content-Type\" value_preview=\"text/plain\"\n  iterator-path: matched node=0x5638ba4fe480 kind=1 ret=1 calling iterator...\n  iterator returned continue at node=0x5638ba4fe480, ret=1\n  iterator-path: matched node=0x5638ba4fe440 kind=1 ret=2 calling iterator...\n  iterator returned continue at node=0x5638ba4fe440, ret=2\n  iterator-path: matched node=0x5638ba4fe400 kind=1 ret=3 calling iterator...\n  iterator returned continue at node=0x5638ba4fe400, ret=3\n  iterator-path: matched node=0x5638ba4fe3c0 kind=1 ret=4 calling iterator...\n  iterator returned continue at node=0x5638ba4fe3c0, ret=4\nEXIT: MHD_get_connection_values_n returning 4\nENTRY: MHD_get_connection_values_n connection=0x5638ba4f6270 kind=1 iterator=0x5638a09c3550 iterator_cls=0x7ffcadedb490\n  node=0x5638ba4fe480 kind=1 header_size=4 value_size=9 header_ptr=0x5638ba4f64d1 value_ptr=0x5638ba4f64d7\n    header_preview=\"Host\" value_preview=\"localhost\"\n  node=0x5638ba4fe440 kind=1 header_size=10 value_size=15 header_ptr=0x5638ba4f64e2 value_ptr=0x5638ba4f64ee\n    header_preview=\"User-Agent\" value_preview=\"dummyclient/0.9\"\n  node=0x5638ba4fe400 kind=1 header_size=14 value_size=2 header_ptr=0x5638ba4f64ff value_ptr=0x5638ba4f650f\n    header_preview=\"Content-Length\" value_preview=\"18\"\n  node=0x5638ba4fe3c0 kind=1 header_size=12 value_size=10 header_ptr=0x5638ba4f6513 value_ptr=0x5638ba4f6521\n    header_preview=\"Content-Type\" value_preview=\"text/plain\"\n  iterator-path: matched node=0x5638ba4fe480 kind=1 ret=1 calling iterator...\n  iterator returned continue at node=0x5638ba4fe480, ret=1\n  iterator-path: matched node=0x5638ba4fe440 kind=1 ret=2 calling iterator...\n  iterator returned continue at node=0x5638ba4fe440, ret=2\n  iterator-path: matched node=0x5638ba4fe400 kind=1 ret=3 calling iterator...\n  iterator returned continue at node=0x5638ba4fe400, ret=3\n  iterator-path: matched node=0x5638ba4fe3c0 kind=1 ret=4 calling iterator...\n  iterator returned continue at node=0x5638ba4fe3c0, ret=4\nEXIT: MHD_get_connection_values_n returning 4\nENTRY: MHD_get_connection_values_n connection=0x5638ba4f6270 kind=1 iterator=0x5638a09c3550 iterator_cls=0x7ffcadedb490\n  node=0x5638ba4fe480 kind=1 header_size=4 value_size=9 header_ptr=0x5638ba4f64d1 value_ptr=0x5638ba4f64d7\n    header_preview=\"Host\" value_preview=\"localhost\"\n  node=0x5638ba4fe440 kind=1 header_size=10 value_size=15 header_ptr=0x5638ba4f64e2 value_ptr=0x5638ba4f64ee\n    header_preview=\"User-Agent\" value_preview=\"dummyclient/0.9\"\n  node=0x5638ba4fe400 kind=1 header_size=14 value_size=2 header_ptr=0x5638ba4f64ff value_ptr=0x5638ba4f650f\n    header_preview=\"Content-Length\" value_preview=\"18\"\n  node=0x5638ba4fe3c0 kind=1 header_size=12 value_size=10 header_ptr=0x5638ba4f6513 value_ptr=0x5638ba4f6521\n    header_preview=\"Content-Type\" value_preview=\"text/plain\"\n  iterator-path: matched node=0x5638ba4fe480 kind=1 ret=1 calling iterator...\n  iterator returned continue at node=0x5638ba4fe480, ret=1\n  iterator-path: matched node=0x5638ba4fe440 kind=1 ret=2 calling iterator...\n  iterator returned continue at node=0x5638ba4fe440, ret=2\n  iterator-path: matched node=0x5638ba4fe400 kind=1 ret=3 calling iterator...\n  iterator returned continue at node=0x5638ba4fe400, ret=3\n  iterator-path: matched node=0x5638ba4fe3c0 kind=1 ret=4 calling iterator...\n  iterator returned continue at node=0x5638ba4fe3c0, ret=4\nEXIT:\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A\u2019s report is essentially correct: within the body of MHD_get_connection_values_n the connection parameter is only read (the code traverses connection->rq.headers_received and reads fields) and is not modified, so per MISRA C 2023 Rule 8.13 it should be declared to point to a const-qualified type (e.g. const struct MHD_Connection *connection). Likewise the local iterator-traversal pointer (pos) should become a pointer-to-const (const struct MHD_HTTP_Req_Header *pos). The remark about iterator_cls is plausible but cannot be confirmed from the snippet alone because the iterator callback type (MHD_KeyValueIteratorN) determines whether iterator_cls can be const; if the callback API requires void * then changing iterator_cls would also require changing the callback prototype/clients. In short: the function as shown violates Rule 8.13 for the connection (and the pos local), and changing iterator_cls is desirable only if the callback prototype can also be made const-correct. If API/ABI compatibility or the callback signature prevents making these pointers const then that is an acceptable justification for not applying the qualification."
}