{
  "user_message": "An agent A claimed that the following MHD_get_connection_values_n code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_get_connection_values_n.\n```c\n_MHD_EXTERN int\nMHD_get_connection_values_n (struct MHD_Connection *connection,\n                             enum MHD_ValueKind kind,\n                             MHD_KeyValueIteratorN iterator,\n                             void *iterator_cls)\n{\n  int ret;\n  struct MHD_HTTP_Req_Header *pos;\n\n  if (NULL == connection)\n    return -1;\n  ret = 0;\n\n  if (NULL == iterator)\n    for (pos = connection->rq.headers_received; NULL != pos; pos = pos->next)\n    {\n      if (0 != (kind & pos->kind))\n        ret++;\n    }\n  else\n    for (pos = connection->rq.headers_received; NULL != pos; pos = pos->next)\n      if (0 != (kind & pos->kind))\n      {\n        ret++;\n        if (MHD_NO == iterator (iterator_cls,\n                                pos->kind,\n                                pos->header,\n                                pos->header_size,\n                                pos->value,\n                                pos->value_size))\n          return ret;\n      }\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe pointer 'pos' is only used to read fields of the linked list (pos->kind, pos->header, pos->header_size, pos->value, pos->value_size) and is never used to modify the pointed-to MHD_HTTP_Req_Header object. Therefore it should be declared to point to a const-qualified type, e.g. 'const struct MHD_HTTP_Req_Header *pos;'. Declaring it as a non-const pointer ('struct MHD_HTTP_Req_Header *pos;') violates MISRA C 2023 Rule 8.13.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\n[entry] connection=0x5591749e3270 kind=1 ret=-1 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=(nil)\n[iterate_start] connection=0x5591749e3270 kind=1 ret=0 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=(nil)\n[iterate_iter] connection=0x5591749e3270 kind=1 ret=0 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb480\n  pos->kind=1 header=0x5591749e34d1 header_size=4 value=0x5591749e34d7 value_size=9\n  header_bytes=486f7374\n  value_bytes=6c6f63616c686f7374\n[call_iterator_before] connection=0x5591749e3270 kind=1 ret=1 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb480\n  pos->kind=1 header=0x5591749e34d1 header_size=4 value=0x5591749e34d7 value_size=9\n  header_bytes=486f7374\n  value_bytes=6c6f63616c686f7374\n[call_iterator_after] connection=0x5591749e3270 kind=1 ret=1 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb480\n  pos->kind=1 header=0x5591749e34d1 header_size=4 value=0x5591749e34d7 value_size=9\n  header_bytes=486f7374\n  value_bytes=6c6f63616c686f7374\n[iterate_iter] connection=0x5591749e3270 kind=1 ret=1 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb440\n  pos->kind=1 header=0x5591749e34e2 header_size=10 value=0x5591749e34ee value_size=15\n  header_bytes=557365722d4167656e74\n  value_bytes=64756d6d79636c69656e742f302e39\n[call_iterator_before] connection=0x5591749e3270 kind=1 ret=2 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb440\n  pos->kind=1 header=0x5591749e34e2 header_size=10 value=0x5591749e34ee value_size=15\n  header_bytes=557365722d4167656e74\n  value_bytes=64756d6d79636c69656e742f302e39\n[call_iterator_after] connection=0x5591749e3270 kind=1 ret=2 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb440\n  pos->kind=1 header=0x5591749e34e2 header_size=10 value=0x5591749e34ee value_size=15\n  header_bytes=557365722d4167656e74\n  value_bytes=64756d6d79636c69656e742f302e39\n[iterate_iter] connection=0x5591749e3270 kind=1 ret=2 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb400\n  pos->kind=1 header=0x5591749e34ff header_size=14 value=0x5591749e350f value_size=2\n  header_bytes=436f6e74656e742d4c656e677468\n  value_bytes=3138\n[call_iterator_before] connection=0x5591749e3270 kind=1 ret=3 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb400\n  pos->kind=1 header=0x5591749e34ff header_size=14 value=0x5591749e350f value_size=2\n  header_bytes=436f6e74656e742d4c656e677468\n  value_bytes=3138\n[call_iterator_after] connection=0x5591749e3270 kind=1 ret=3 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb400\n  pos->kind=1 header=0x5591749e34ff header_size=14 value=0x5591749e350f value_size=2\n  header_bytes=436f6e74656e742d4c656e677468\n  value_bytes=3138\n[iterate_iter] connection=0x5591749e3270 kind=1 ret=3 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb3c0\n  pos->kind=1 header=0x5591749e3513 header_size=12 value=0x5591749e3521 value_size=10\n  header_bytes=436f6e74656e742d54797065\n  value_bytes=746578742f706c61696e\n[call_iterator_before] connection=0x5591749e3270 kind=1 ret=4 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb3c0\n  pos->kind=1 header=0x5591749e3513 header_size=12 value=0x5591749e3521 value_size=10\n  header_bytes=436f6e74656e742d54797065\n  value_bytes=746578742f706c61696e\n[call_iterator_after] connection=0x5591749e3270 kind=1 ret=4 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb3c0\n  pos->kind=1 header=0x5591749e3513 header_size=12 value=0x5591749e3521 value_size=10\n  header_bytes=436f6e74656e742d54797065\n  value_bytes=746578742f706c61696e\n[exit] connection=0x5591749e3270 kind=1 ret=4 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=(nil)\n[entry] connection=0x5591749e3270 kind=1 ret=-1 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=(nil)\n[iterate_start] connection=0x5591749e3270 kind=1 ret=0 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=(nil)\n[iterate_iter] connection=0x5591749e3270 kind=1 ret=0 iterator=0x55914fe2a550 iterator_cls=0x7ffcbb06ce90 pos=0x5591749eb48\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. The local pointer variable pos is only used to read fields of the linked-list nodes (pos->kind, pos->header, pos->header_size, pos->value, pos->value_size) and is never used to modify the pointed-to MHD_HTTP_Req_Header object. Per MISRA C 2023 Rule 8.13, such pointers should be to const-qualified types when possible. Declaring pos as const struct MHD_HTTP_Req_Header *pos would be valid here: assigning connection->rq.headers_received (a non-const pointer) to a pointer-to-const is permitted, and iterating via pos = pos->next still works (the member access yields a pointer value which is convertible to pointer-to-const). There is no use in the function that requires pos to be a pointer-to-modifiable structure, so the reported violation is correct."
}