{
  "result": "success",
  "message": "[add_response_header_connection] phase=entry\n  value=\"a,b,c,d,e\", value_len=9\n  old_value_len=0, norm_len=0, buf_size=0\n  flags_auto=0x00000000, value_has_close=0, already_has_close=0, pos=0\n\n[add_response_header_connection] phase=after_hdr_lookup\n  value=\"a,b,c,d,e\", value_len=9\n  old_value_len=0, norm_len=0, buf_size=0\n  flags_auto=0x00000000, value_has_close=0, already_has_close=0, pos=0\n  extra=hdr_null\n\n[add_response_header_connection] phase=before_const_if\n  value=\"a,b,c,d,e\", value_len=9\n  old_value_len=0, norm_len=14, buf_size=14\n  flags_auto=0x00000000, value_has_close=0, already_has_close=0, pos=0\n  extra=About to evaluate constant 'if (1)' block (always true)\n\n[add_response_header_connection] phase=const_if_enter\n  value=\"a,b,c,d,e\", value_len=9\n  old_value_len=0, norm_len=14, buf_size=14\n  flags_auto=0x00000000, value_has_close=0, already_has_close=0, pos=0\n  extra=Entered constant-true local scope (if (1))\n\n[add_response_header_connection] phase=after_remove_close_token\n  value=\"a,b,c,d,e\", value_len=9\n  old_value_len=0, norm_len=13, buf_size=14\n  flags_auto=0x00000000, value_has_close=0, already_has_close=0, pos=0\n  extra=Result of MHD_str_remove_token_caseless_\n\n[add_response_header_connection] phase=after_normalisation\n  value=\"a,b,c,d,e\", value_len=9\n  old_value_len=0, norm_len=13, buf_size=14\n  flags_auto=0x00000000, value_has_close=0, already_has_close=0, pos=0\n\n[add_response_header_connection] phase=added_new_tokens\n  value=\"a,b,c,d,e\", value_len=9\n  old_value_len=0, norm_len=13, buf_size=14\n  flags_auto=0x00000000, value_has_close=0, already_has_close=0, pos=13\n  extra=Appended normalized new tokens\n\n[add_response_header_connection] phase=insert_new_header\n  value=\"a,b,c,d,e\", value_len=9\n  old_value_len=0, norm_len=13, buf_size=14\n  flags_auto=0x00000001, value_has_close=0, already_has_close=0, pos=13\n  extra=Inserted new Connection header\n\n[add_response_header_connection] phase=entry\n  value=\"i,k,l,m,n,o,p,close\", value_len=19\n  old_value_len=0, norm_len=0, buf_size=0\n  flags_auto=0x00000000, value_has_close=0, already_has_close=0, pos=0\n\n[add_response_header_connection] phase=after_hdr_lookup\n  value=\"i,k,l,m,n,o,p,close\", value_len=19\n  old_value_len=0, norm_len=0, buf_size=0\n  flags_auto=0x00000000, value_has_close=0, already_has_close=0, pos=0\n  extra=hdr_null\n\n[add_response_header_connection] phase=before_const_if\n  value=\"i,k,l,m,n,o,p,close\", value_len=19\n  old_value_len=0, norm_len=29, buf_size=29\n  flags_auto=0x00000000, value_has_close=0, already_has_close=0, pos=0\n  extra=About to evaluate constant 'if (1)' block (always true)\n\n[add_response_header_connection] phase=const_if_enter\n  value=\"i,k,l,m,n,o,p,close\", value_len=19\n  old_value_len=0, norm_len=29, buf_size=29\n  flags_auto=0x00000000, value_has_close=0, already_has_close=0, pos=0\n  extra=Entered constant-true local scope (if (1))\n\n[add_response_header_connection] phase=after_remove_close_token\n  value=\"i,k,l,m,n,o,p,close\", value_len=19\n  old_value_len=0, norm_len=19, buf_size=29\n  flags_auto=0x00000000, value_has_close=1, already_has_close=0, pos=0\n  extra=Result of MHD_str_remove_token_caseless_\n\n[add_response_header_connection] phase=after_normalisation\n  value=\"i,k,l,m,n,o,p,close\", value_len=19\n  old_value_len=0, norm_len=19, buf_size=29\n  flags_auto=0x00000000, value_has_close=1, already_has_close=0, pos=0\n\n[add_response_header_connection] phase=added_close_front\n  value=\"i,k,l,m,n,o,p,close\", value_len=19\n  old_value_len=0, norm_len=19, buf_size=29\n  flags_auto=0x00000000, value_has_close=1, already_has_close=0, pos=5\n  extra=Inserted 'close' token at front\n\n[add_response_header_connection] phase=added_new_tokens\n  value=\"i,k,l,m,n,o,p,close\", value_len=19\n  old_value_len=0, norm_len=19, buf_size=29\n  flags_auto=0x00000000, value_has_close=1, already_has_close=0, pos=26\n  extra=Appended normalized new tokens\n\n[add_response_header_connection] phase=insert_new_header\n  value=\"i,k,l,m,n,o,p,close\", value_len=19\n  old_value_len=0, norm_len=19, buf_size=29\n  flags_auto=0x00000003, value_has_close=1, already_has_close=0, pos=26\n "
}