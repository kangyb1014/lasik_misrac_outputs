{
  "result": "success",
  "message": "add_response_header_connection: entry response=0x56059b334820 value=a,b,c,d,e\nadd_response_header_connection: no existing Connection header; hdr set to NULL, already_has_close=false\nold_value_len=0 (hdr=(nil))\nvalue_len=9\nnorm_len (initial)=14\nbuf_size=14 (old_value_len=0 + norm_len=14)\nmalloc succeeded: buf=0x56059b3348e0\nafter MHD_str_remove_token_caseless_: value_has_close=0, norm_len_s=13\nnorm_len (after removal)=13\nafter removing keep-alive: norm_len=13\nabout to assert position invariant: value_has_close=0 already_has_close=0 pos=0 old_value_len=0 norm_len=13\nafter adding new value tokens: pos=13\nfinal buffer (pos=13): a, b, c, d, e\ninserted new header: new_hdr=0x56059b334c00 header=Connection value=a, b, c, d, e flags_auto=0x1\nadd_response_header_connection: entry response=0x56059b334820 value=i,k,l,m,n,o,p,close\nadd_response_header_connection: no existing Connection header; hdr set to NULL, already_has_close=false\nold_value_len=0 (hdr=(nil))\nvalue_len=19\nnorm_len (initial)=29\nbuf_size=29 (old_value_len=0 + norm_len=29)\nmalloc succeeded: buf=0x56059b334c40\nafter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=19\nnorm_len (after removal)=19\nafter removing keep-alive: norm_len=19\nadding close token: buf_size=29 old_value_len=0 norm_len=19\nafter inserting close: pos=5\nabout to assert position invariant: value_has_close=1 already_has_close=0 pos=7 old_value_len=0 norm_len=19\nafter adding new value tokens: pos=26\nfinal buffer (pos=26): close, i, k, l, m, n, o, p\ninserted new header: new_hdr=0x56059b334c70 header=Connection value=close, i, k, l, m, n, o, p flags_auto=0x3\nadd_response_header_connection: entry response=0x56059b334820 value=1,2,3,4,5,6,7,close\nadd_response_header_connection: no existing Connection header; hdr set to NULL, already_has_close=false\nold_value_len=0 (hdr=(nil))\nvalue_len=19\nnorm_len (initial)=29\nbuf_size=29 (old_value_len=0 + norm_len=29)\nmalloc succeeded: buf=0x56059b334c40\nafter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=19\nnorm_len (after removal)=19\nafter removing keep-alive: norm_len=19\nadding close token: buf_size=29 old_value_len=0 norm_len=19\nafter inserting close: pos=5\nabout to assert position invariant: value_has_close=1 already_has_close=0 pos=7 old_value_len=0 norm_len=19\nafter adding new value tokens: pos=26\nfinal buffer (pos=26): close, 1, 2, 3, 4, 5, 6, 7\ninserted new header: new_hdr=0x56059b334cb0 header=Connection value=close, 1, 2, 3, 4, 5, 6, 7 flags_auto=0x3\nadd_response_header_connection: entry response=0x56059b334820 value=8,9,close\nflags_auto has CONNECTION_HDR, hdr=0x56059b334cb0, hdr->value=close, 1, 2, 3, 4, 5, 6, 7, hdr->value_size=26, already_has_close=1, memcmp_is_close=1\nadd_response_header_connection: asserting already_has_close == (0 == memcmp(...)) and hdr != NULL (original code asserts)\nold_value_len=28 (hdr=0x56059b334cb0)\nvalue_len=9\nnorm_len (initial)=14\nbuf_size=42 (old_value_len=28 + norm_len=14)\nmalloc succeeded: buf=0x56059b334c70\nafter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=4\nnorm_len (after removal)=4\nafter removing keep-alive: norm_len=4\nadded old value: new pos=26\nabout to assert position invariant: value_has_close=1 already_has_close=1 pos=28 old_value_len=28 norm_len=4\nafter adding new value tokens: pos=32\nfinal buffer (pos=32): close, 1, 2, 3, 4, 5, 6, 7, 8, 9\nupdating existing header hdr=0x56059b334cb0 old_value=close, 1, 2, 3, 4, 5, 6, 7 old_size=26 -> new buf=0x56059b334c70 new_size=32\nupdated header done: hdr=0x56059b334cb0 new_value=close, 1, 2, 3, 4, 5, 6, 7, 8, 9 new_size=32 flags_auto=0x3\nadd_response_header_connection: entry response=0x56059b334820 value=10,12\nflags_auto has CONNECTION_HDR, hdr=0x56059b334cb0, hdr->value=close, 2, 4, 6, 8, hdr->value_size=17, already_has_close=1, memcmp_is_close=1\nadd_response_header_connection: asserting already_has_close == (0 == memcmp(...)) and hdr != NULL (original code asserts)\nold_value_len=19 (hdr=0x56059b334cb0)\nvalue_len=5\nnorm_len (initial)=8\nbuf_size=27 (old_value_len=19 + norm_len=8)\nmalloc succeeded: buf=0x56059b334c40\nafter MHD_str_rem"
}