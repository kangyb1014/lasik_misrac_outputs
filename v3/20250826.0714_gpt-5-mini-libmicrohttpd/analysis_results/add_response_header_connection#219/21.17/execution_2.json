{
  "result": "success",
  "message": "enter add_response_header_connection: response=0x56003aec5820, value=0x560020002101\nvalue (preview)='a,b,c,d,e'\nno existing connection header present (flags_auto=0x00000000)\ncomputed lengths: value_len=9, old_value_len=0\nbuf_size computed: old_value_len=0, norm_len=14, buf_size=14\nmalloc(14) -> buf=0x56003aec58e0\nafter MHD_str_remove_token_caseless_: value_has_close=0, norm_len_s=13\nnormalized length updated: norm_len=13\nafter removing keep-alive: norm_len=13\nadded new normalized tokens: norm_len=13, pos=13\nfinal check before null-terminate: buf_size=14, pos=13\nfinal buffer (preview)='a, b, c, d, e'\nallocating new header struct: new_hdr=0x56003aec5c00, new_hdr->header=0x56003aec5900\ninserted new header: new_hdr=0x56003aec5c00, new_hdr->value=0x56003aec58e0, new_hdr->value_size=13, response->flags_auto=0x00000001\nenter add_response_header_connection: response=0x56003aec5820, value=0x56002000218e\nvalue (preview)='i,k,l,m,n,o,p,close'\nno existing connection header present (flags_auto=0x00000000)\ncomputed lengths: value_len=19, old_value_len=0\nbuf_size computed: old_value_len=0, norm_len=29, buf_size=29\nmalloc(29) -> buf=0x56003aec5c40\nafter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=19\nnormalized length updated: norm_len=19\nafter removing keep-alive: norm_len=19\nneed to add 'close' token: value_has_close=1, already_has_close=0\nassertion check: buf_size=29, required=27\nperforming memmove: dest=0x56003aec5c47, src=0x56003aec5c40, len=20\nperforming memcpy: dest=0x56003aec5c40, src=\"close\", len=5\nafter inserting 'close': pos=5\nadded new normalized tokens: norm_len=19, pos=26\nfinal check before null-terminate: buf_size=29, pos=26\nfinal buffer (preview)='close, i, k, l, m, n, o, p'\nallocating new header struct: new_hdr=0x56003aec5c70, new_hdr->header=0x56003aec5900\ninserted new header: new_hdr=0x56003aec5c70, new_hdr->value=0x56003aec5c40, new_hdr->value_size=26, response->flags_auto=0x00000003\nenter add_response_header_connection: response=0x56003aec5820, value=0x560020002240\nvalue (preview)='1,2,3,4,5,6,7,close'\nno existing connection header present (flags_auto=0x00000000)\ncomputed lengths: value_len=19, old_value_len=0\nbuf_size computed: old_value_len=0, norm_len=29, buf_size=29\nmalloc(29) -> buf=0x56003aec5c40\nafter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=19\nnormalized length updated: norm_len=19\nafter removing keep-alive: norm_len=19\nneed to add 'close' token: value_has_close=1, already_has_close=0\nassertion check: buf_size=29, required=27\nperforming memmove: dest=0x56003aec5c47, src=0x56003aec5c40, len=20\nperforming memcpy: dest=0x56003aec5c40, src=\"close\", len=5\nafter inserting 'close': pos=5\nadded new normalized tokens: norm_len=19, pos=26\nfinal check before null-terminate: buf_size=29, pos=26\nfinal buffer (preview)='close, 1, 2, 3, 4, 5, 6, 7'\nallocating new header struct: new_hdr=0x56003aec5cb0, new_hdr->header=0x56003aec5900\ninserted new header: new_hdr=0x56003aec5cb0, new_hdr->value=0x56003aec5c40, new_hdr->value_size=26, response->flags_auto=0x00000003\nenter add_response_header_connection: response=0x56003aec5820, value=0x56002000226f\nvalue (preview)='8,9,close'\nexisting connection header present: hdr=0x56003aec5cb0, already_has_close=1, hdr->value=0x56003aec5c40\nhdr->value_size=26\ncomputed lengths: value_len=9, old_value_len=28\nbuf_size computed: old_value_len=28, norm_len=14, buf_size=42\nmalloc(42) -> buf=0x56003aec5c70\nafter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=4\nnormalized length updated: norm_len=4\nafter removing keep-alive: norm_len=4\ncopying old header value: hdr=0x56003aec5cb0, hdr->value=0x56003aec5c40, hdr->value_size=26, dest=0x56003aec5c70\nafter copying old header: pos=26\nadded new normalized tokens: norm_len=4, pos=32\nfinal check before null-terminate: buf_size=42, pos=32\nfinal buffer (preview)='close, 1, 2, 3, 4, 5, 6, 7, 8, 9'\nupdating existing header hdr=0x56003aec5cb0: free old value 0x56003aec5c40, set new value 0x56003aec5c70, new size=32\nupdate complete: hdr=0x56003aec5cb0, hdr->value=0x56003aec5c70, hdr->value_size=32, response->fl"
}