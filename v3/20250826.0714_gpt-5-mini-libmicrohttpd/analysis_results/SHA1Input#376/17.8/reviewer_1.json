{
  "user_message": "An agent A claimed that the following SHA1Input code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of SHA1Input.\n```c\nstatic enum SHA1_RESULT\nSHA1Input (struct SHA1Context *context, const unsigned char *message_array,\n           unsigned length)\n{\n  if (! length)\n  {\n    return SHA1_RESULT_SUCCESS;\n  }\n  if (! context || ! message_array)\n  {\n    return SHA1_RESULT_NULL;\n  }\n  if (context->computed)\n  {\n    context->corrupted = 1;\n    return SHA1_RESULT_STATE_ERROR;\n  }\n  if (context->corrupted)\n  {\n    return SHA1_RESULT_STATE_ERROR;\n  }\n  while (length-- && ! context->corrupted)\n  {\n    context->message_block[context->message_block_index++]\n      = (*message_array & 0xFF);\n    context->length_low += 8;\n    if (context->length_low == 0)\n    {\n      context->length_high++;\n      if (context->length_high == 0)\n      {\n        context->corrupted = 1;\n      }\n    }\n    if (context->message_block_index == 64)\n    {\n      SHA1ProcessMessageBlock (context);\n    }\n    message_array++;\n  }\n  return SHA1_RESULT_SUCCESS;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe loop condition uses the post\u2011decrement operator on the parameter 'length' (length--), which modifies the function parameter. MISRA C 2023 Rule 17.8 forbids modifying function parameters, so this use of length-- violates the rule. (Fix: copy length to a local variable and decrement that e.g. unsigned rem = length; while (rem-- && !context->corrupted) ...).\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct that the code violates MISRA C:2023 Rule 17.8. The rule forbids modifying function parameters. The expression length-- in the loop both reads and modifies the parameter variable length, so it is a direct violation. \n\nAdditionally, the code also modifies the pointer parameter message_array via message_array++, which likewise violates the rule (the object pointed to may be modified but not the pointer parameter itself). \n\nRecommended fix: copy parameters to local variables and modify those. For example:\nunsigned rem = length;\nconst unsigned char *msg = message_array;\nwhile (rem-- && !context->corrupted) { ... use msg and rem ...; msg++; }\n\nSo the report that length-- violates Rule 17.8 is correct (and there is an additional violation for message_array++)."
}