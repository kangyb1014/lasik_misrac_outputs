{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 17.8 is: A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of completed_callback:\n```c\nstatic void\ncompleted_callback (void *cls,\n                    struct MHD_Connection *connection,\n                    void **req_cls,\n                    enum MHD_RequestTerminationCode toe)\n{\n  struct timeval *tv = *req_cls;\n  struct timeval tve;\n  uint64_t delta;\n  (void) cls;         /* Unused. Silent compiler warning. */\n  (void) connection;  /* Unused. Silent compiler warning. */\n  (void) toe;         /* Unused. Silent compiler warning. */\n\n  if (NULL == tv)\n    return;\n  gettimeofday (&tve, NULL);\n\n  delta = ((uint64_t) (tve.tv_sec - tv->tv_sec)) * 1000000LL\n          + (uint64_t) tve.tv_usec - (uint64_t) tv->tv_usec;\n  if (delta < SMALL)\n    small_deltas[delta]++;\n  else\n    fprintf (stdout, \"D: %\" PRIu64 \" 1\\n\", delta);\n  free (tv);\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "No code fragment in the function modifies a function parameter itself. The parameters are: cls (void *), connection (struct MHD_Connection *), req_cls (void **), and toe (enum MHD_RequestTerminationCode). The lines\n  (void) cls;  (void) connection;  (void) toe;\nare only used to suppress unused-parameter warnings and do not modify those parameters. The statement\n  struct timeval *tv = *req_cls;\nreads the value pointed to by the pointer-parameter req_cls but does not assign to req_cls (the parameter) or to *req_cls (the caller's stored pointer). Subsequent use of tv (reading tv->tv_sec/tv_usec) and the call free(tv) operate on the object pointed to by the pointer value obtained from req_cls; Rule 17.8 explicitly allows modification of the object referred to by a pointer parameter. There are no assignments to req_cls, cls, connection, or toe, nor any other operations that change the value of a function parameter. Therefore no fragments need investigation under MISRA C 2023 Rule 17.8. (Note: although freeing the memory pointed to by the caller's pointer may leave a dangling pointer in the caller, that is not a direct violation of Rule 17.8.)"
}