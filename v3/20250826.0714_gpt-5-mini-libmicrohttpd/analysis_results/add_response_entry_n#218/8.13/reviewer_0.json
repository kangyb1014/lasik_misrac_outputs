{
  "user_message": "An agent A claimed that the following add_response_entry_n code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of add_response_entry_n.\n```c\nstatic bool\nadd_response_entry_n (struct MHD_Response *response,\n                      enum MHD_ValueKind kind,\n                      const char *header,\n                      size_t header_len,\n                      const char *content,\n                      size_t content_len)\n{\n  if (NULL == response)\n    return false;\n  if (0 == header_len)\n    return false;\n  if (0 == content_len)\n    return false;\n  if (NULL != memchr (header, '\\t', header_len))\n    return false;\n  if (NULL != memchr (header, ' ', header_len))\n    return false;\n  if (NULL != memchr (header, '\\r', header_len))\n    return false;\n  if (NULL != memchr (header, '\\n', header_len))\n    return false;\n  if (NULL != memchr (content, '\\r', content_len))\n    return false;\n  if (NULL != memchr (content, '\\n', content_len))\n    return false;\n\n  return MHD_add_response_entry_no_check_ (response, kind, header, header_len,\n                                           content, content_len);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter is declared as a non-const pointer (struct MHD_Response *response) even though the function body performs no modifications on the pointed-to object and only passes it to other routines. If the pointed-to object is not modified by this function (and the called routine does not require a mutable pointer), the parameter should be declared const (const struct MHD_Response *response). Leaving it non-const in that situation violates MISRA C 2023 Rule 8.13.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\n2025-08-26 09:06:49 EVENT=entry response=0x55f0d5598820 kind=1 header=0x55f097d7a01f(header_len=13) content=0x55f097d7a02d(content_len=8)\n2025-08-26 09:06:49 EVENT=calling_add_response_entry_no_check response=0x55f0d5598820 kind=1 header=0x55f097d7a01f(header_len=13) content=0x55f097d7a02d(content_len=8) detail=delegating to MHD_add_response_entry_no_check_\n2025-08-26 09:06:49 EVENT=success_delegated response=0x55f0d5598820 kind=1 header=0x55f097d7a01f(header_len=13) content=0x55f097d7a02d(content_len=8) detail=MHD_add_response_entry_no_check_ returned true\n2025-08-26 09:06:49 EVENT=entry response=0x55f0d5598820 kind=1 header=0x55f097d7a01f(header_len=13) content=0x55f097d7a04d(content_len=8)\n2025-08-26 09:06:49 EVENT=calling_add_response_entry_no_check response=0x55f0d5598820 kind=1 header=0x55f097d7a01f(header_len=13) content=0x55f097d7a04d(content_len=8) detail=delegating to MHD_add_response_entry_no_check_\n2025-08-26 09:06:49 EVENT=success_delegated response=0x55f0d5598820 kind=1 header=0x55f097d7a01f(header_len=13) content=0x55f097d7a04d(content_len=8) detail=MHD_add_response_entry_no_check_ returned true\n2025-08-26 09:06:49 EVENT=entry response=0x55f0d5598820 kind=1 header=0x55f097d7a01f(header_len=13) content=0x55f097d7a087(content_len=8)\n2025-08-26 09:06:49 EVENT=calling_add_response_entry_no_check response=0x55f0d5598820 kind=1 header=0x55f097d7a01f(header_len=13) content=0x55f097d7a087(content_len=8) detail=delegating to MHD_add_response_entry_no_check_\n2025-08-26 09:06:49 EVENT=success_delegated response=0x55f0d5598820 kind=1 header=0x55f097d7a01f(header_len=13) content=0x55f097d7a087(content_len=8) detail=MHD_add_response_entry_no_check_ returned true\n2025-08-26 09:06:49 EVENT=entry response=0x55f0d5598820 kind=1 header=0x55f097d7aa16(header_len=4) content=0x55f097d7aa1b(content_len=29)\n2025-08-26 09:06:49 EVENT=calling_add_response_entry_no_check response=0x55f0d5598820 kind=1 header=0x55f097d7aa16(header_len=4) content=0x55f097d7aa1b(content_len=29) detail=delegating to MHD_add_response_entry_no_check_\n2025-08-26 09:06:49 EVENT=success_delegated response=0x55f0d5598820 kind=1 header=0x55f097d7aa16(header_len=4) content=0x55f097d7aa1b(content_len=29) detail=MHD_add_response_entry_no_check_ returned true\n2025-08-26 09:06:49 EVENT=entry response=0x55f0d5598820 kind=1 header=0x55f097d7aa16(header_len=4) content=0x55f097d7aa79(content_len=29)\n2025-08-26 09:06:49 EVENT=calling_add_response_entry_no_check response=0x55f0d5598820 kind=1 header=0x55f097d7aa16(header_len=4) content=0x55f097d7aa79(content_len=29) detail=delegating to MHD_add_response_entry_no_check_\n2025-08-26 09:06:49 EVENT=success_delegated response=0x55f0d5598820 kind=1 header=0x55f097d7aa16(header_len=4) content=0x55f097d7aa79(content_len=29) detail=MHD_add_response_entry_no_check_ returned true\n2025-08-26 09:06:49 EVENT=entry response=0x55f0d5598820 kind=1 header=0x55f097d7aaf5(header_len=17) content=0x55f097d7ab07(content_len=7)\n2025-08-26 09:06:49 EVENT=calling_add_response_entry_no_check response=0x55f0d5598820 kind=1 header=0x55f097d7aaf5(header_len=17) content=0x55f097d7ab07(content_len=7) detail=delegating to MHD_add_response_entry_no_check_\n2025-08-26 09:06:49 EVENT=success_delegated response=0x55f0d5598820 kind=1 header=0x55f097d7aaf5(header_len=17) content=0x55f097d7ab07(content_len=7) detail=MHD_add_response_entry_no_check_ returned true\n\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "Not enough evidence to conclude a MISRA 8.13 violation. Rule 8.13 requires pointers to point to const-qualified types when possible \u2014 i.e. when the function and the functions it calls do not modify the pointee. In this function the header and content parameters are already const-qualified; only response is a non-const pointer. However add_response_entry_n delegates response directly to MHD_add_response_entry_no_check_. If that callee\u2019s prototype expects (and/or modifies) a non-const struct MHD_Response * (or its API must remain non-const for other callers), then it is not possible to change the parameter here to const without changing the callee (and all its callers). The provided code and log do not show the prototype or behavior of MHD_add_response_entry_no_check_, so you cannot determine from this snippet alone that response could be const. Therefore agent A\u2019s report is not necessarily correct. To decide definitively, inspect the declaration and implementation of MHD_add_response_entry_no_check_: if that function does not modify the response and its prototype can be changed to accept const struct MHD_Response *, then change both prototypes/call sites and the violation would be fixed; otherwise leaving response non-const is appropriate."
}