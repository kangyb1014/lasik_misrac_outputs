{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of handle_req_footers_no_space:\n```c\nstatic void\nhandle_req_footers_no_space (struct MHD_Connection *c,\n                             const char *add_footer,\n                             size_t add_footer_size)\n{\n  (void) add_footer; (void) add_footer_size; /* Unused */\n  mhd_assert (c->rq.have_chunked_upload);\n\n  /* Footers should be optional */\n  transmit_error_response_static (c,\n                                  MHD_HTTP_REQUEST_HEADER_FIELDS_TOO_LARGE,\n                                  ERR_MSG_REQUEST_FOOTER_TOO_BIG);\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "I found no uses of compiler-specific language extensions in the provided function. Specific notes: \n\n- The function definition (static void handle_req_footers_no_space(...)) uses standard C function declaration/definition syntax.\n- Casting to void for unused parameters ((void) add_footer; (void) add_footer_size;) is standard C and a common portable idiom to suppress unused-parameter warnings, not a compiler extension.\n- The comment style (/* ... */) is standard C.\n- The call to transmit_error_response_static(...) and the macro mhd_assert(...) are ordinary identifiers; any extension would be visible in the code (for example, use of GCC __attribute__, __builtin_* functions, typeof, asm, or other compiler-specific tokens). None of those appear in the fragment. If mhd_assert or transmit_error_response_static expand to compiler-specific constructs, that would need inspection in their definitions, but the fragment itself contains no explicit language extensions.\n\nTherefore there are no code fragments in this function that should be flagged for investigation under MISRA C 2023 Rule 1.2 (language extensions should not be used)."
}