{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of process_short_params_str:\n```c\nstatic enum PerfRepl_param_result\nprocess_short_params_str (const char *params_str, const char *next_param)\n{\n  if (0 == params_str[0])\n  {\n    fprintf (stderr, \"Unrecognised parameter: -\\n\");\n    return PERF_RPL_PARAM_ERROR;\n  }\n  do\n  {\n    enum PerfRepl_param_result param_res;\n    param_res = process_short_param (params_str, next_param);\n    if (PERF_RPL_PARAM_ONE_CHAR != param_res)\n      return param_res;\n  } while (0 != (++params_str)[0]);\n  return PERF_RPL_PARAM_FULL_STR;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\ndo\n  {\n    enum PerfRepl_param_result param_res;\n    param_res = process_short_param (params_str, next_param);\n    if (PERF_RPL_PARAM_ONE_CHAR != param_res)\n      return param_res;\n  } while (0 != (++params_str)[0]);\n```\nFocus on the above code fragment and judge whether it violates the rule 2.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation. Every executed operation in the fragment affects program behaviour: the call to process_short_param produces param_res used in the conditional return; the comparison determines whether to return; the pre-increment (++params_str) advances the pointer and its result controls loop continuation. The declaration of param_res is a compile-time construct (no runtime effect) and is not an executed operation. Therefore there is no dead code here."
}