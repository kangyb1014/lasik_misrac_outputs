{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of new_connection_close_:\n```c\nstatic void\nnew_connection_close_ (struct MHD_Daemon *daemon,\n                       struct MHD_Connection *connection)\n{\n  mhd_assert (connection->daemon == daemon);\n  mhd_assert (! connection->in_cleanup);\n  mhd_assert (NULL == connection->next);\n  mhd_assert (NULL == connection->nextX);\n#ifdef EPOLL_SUPPORT\n  mhd_assert (NULL == connection->nextE);\n#endif /* EPOLL_SUPPORT */\n\n#ifdef HTTPS_SUPPORT\n  if (NULL != connection->tls_session)\n  {\n    mhd_assert (0 != (daemon->options & MHD_USE_TLS));\n    gnutls_deinit (connection->tls_session);\n  }\n#endif /* HTTPS_SUPPORT */\n  MHD_socket_close_chk_ (connection->socket_fd);\n  MHD_ip_limit_del (daemon,\n                    connection->addr,\n                    connection->addr_len);\n  if (NULL != connection->addr)\n    free (connection->addr);\n  free (connection);\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "mhd_assert (NULL == connection->nextX);",
    "new_connection_close_ (struct MHD_Daemon *daemon,\n                       struct MHD_Connection *connection)",
    "MHD_ip_limit_del (daemon,\n                    connection->addr,\n                    connection->addr_len);",
    "if (NULL != connection->tls_session)\n  {\n    mhd_assert (0 != (daemon->options & MHD_USE_TLS));\n    gnutls_deinit (connection->tls_session);\n  }",
    "if (NULL != connection->addr)\n    free (connection->addr);",
    "mhd_assert (connection->daemon == daemon);",
    "#ifdef EPOLL_SUPPORT\n  mhd_assert (NULL == connection->nextE);\n#endif /* EPOLL_SUPPORT */",
    "mhd_assert (NULL == connection->next);",
    "free (connection);"
  ],
  "explanation": "I inspected the entire function and included all code fragments where pointer types or pointer-valued struct members appear and therefore could be relevant to MISRA C:2023 Rule 8.13 (use const-qualified pointer targets when possible). Fragments not listed were not included because they do not involve pointer types or pointer-valued members (for example: the socket_fd use via MHD_socket_close_chk_ is an integer, the checks of non-pointer fields such as connection->in_cleanup or connection->addr_len are scalar/flag uses, and the bitwise/options check involves integer fields). Preprocessor lines, control-flow braces, and non-pointer-only expressions were omitted because they are not relevant to the const-qualification guidance of Rule 8.13."
}