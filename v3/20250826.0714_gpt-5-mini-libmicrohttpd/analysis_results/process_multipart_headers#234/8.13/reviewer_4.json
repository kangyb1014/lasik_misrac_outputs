{
  "user_message": "An agent A claimed that the following process_multipart_headers code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of process_multipart_headers.\n```c\nstatic int\nprocess_multipart_headers (struct MHD_PostProcessor *pp,\n                           size_t *ioffptr,\n                           enum PP_State next_state)\n{\n  char *buf = (char *) &pp[1];\n  size_t newline;\n\n  newline = 0;\n  while ( (newline < pp->buffer_pos) &&\n          (buf[newline] != '\\r') &&\n          (buf[newline] != '\\n') )\n    newline++;\n  if (newline == pp->buffer_size)\n  {\n    pp->state = PP_Error;\n    return MHD_NO;              /* out of memory */\n  }\n  if (newline == pp->buffer_pos)\n    return MHD_NO;              /* will need more data */\n  if (0 == newline)\n  {\n    /* empty line - end of headers */\n    pp->skip_rn = RN_Full;\n    pp->state = next_state;\n    return MHD_YES;\n  }\n  /* got an actual header */\n  if (buf[newline] == '\\r')\n    pp->skip_rn = RN_OptN;\n  buf[newline] = '\\0';\n  if (MHD_str_equal_caseless_n_ (\"Content-disposition: \",\n                                 buf,\n                                 MHD_STATICSTR_LEN_ (\"Content-disposition: \")))\n  {\n    try_get_value (&buf[MHD_STATICSTR_LEN_ (\"Content-disposition: \")],\n                   \"name\",\n                   &pp->content_name);\n    try_get_value (&buf[MHD_STATICSTR_LEN_ (\"Content-disposition: \")],\n                   \"filename\",\n                   &pp->content_filename);\n  }\n  else\n  {\n    try_match_header (\"Content-type: \",\n                      MHD_STATICSTR_LEN_ (\"Content-type: \"),\n                      buf,\n                      &pp->content_type);\n    try_match_header (\"Content-Transfer-Encoding: \",\n                      MHD_STATICSTR_LEN_ (\"Content-Transfer-Encoding: \"),\n                      buf,\n                      &pp->content_transfer_encoding);\n  }\n  (*ioffptr) += newline + 1;\n  return MHD_YES;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIf the prototype of try_match_header declares its first parameter as a non-const pointer (for example: int try_match_header(char *header, size_t len, char *buf, char **out)), then the call try_match_header(\"Content-Transfer-Encoding: \", ...) passes a string literal to a non-const char * parameter. That causes a pointer to a string literal to be treated as pointing to a non-const type, violating MISRA C 2023 Rule 8.13. (Fix: change the function prototype to take const char * for the header argument.)\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\n[process_multipart_headers] stage=entry\n  buf_ptr=0x563cbbf7f8c0 newline=0\n  buffer_pos=221 buffer_size=1028 state=7 skip_rn=0\n  content_name=(nil) content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"\"\n[process_multipart_headers] stage=after_scan\n  buf_ptr=0x563cbbf7f8c0 newline=45\n  buffer_pos=221 buffer_size=1028 state=7 skip_rn=0\n  content_name=(nil) content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"content-disposition: form-data; name=\"field1\"\"\n[process_multipart_headers] stage=got_header\n  buf_ptr=0x563cbbf7f8c0 newline=45\n  buffer_pos=221 buffer_size=1028 state=7 skip_rn=1\n  content_name=(nil) content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"content-disposition: form-data; name=\"field1\"\"\n[process_multipart_headers] stage=before_try_get_value_content_disposition\n  header_ptr=0x7fdefb561ed8 header_len=21 header_text=\"Content-disposition: \"\n  buf_ptr=0x563cbbf7f8c0 newline=45\n  buffer_pos=221 buffer_size=1028 state=7 skip_rn=1\n  content_name=(nil) content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"content-disposition: form-data; name=\"field1\"\"\n[process_multipart_headers] stage=after_try_get_value_content_disposition\n  header_ptr=0x7fdefb561ed8 header_len=21 header_text=\"Content-disposition: \"\n  buf_ptr=0x563cbbf7f8c0 newline=45\n  buffer_pos=221 buffer_size=1028 state=7 skip_rn=1\n  content_name=0x563cbbf7feb0 content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"content-disposition: form-data; name=\"field1\"\"\n[process_multipart_headers] stage=return_yes\n  buf_ptr=0x563cbbf7f8c0 newline=45\n  buffer_pos=221 buffer_size=1028 state=7 skip_rn=1\n  content_name=0x563cbbf7feb0 content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"content-disposition: form-data; name=\"field1\"\"\n[process_multipart_headers] stage=entry\n  buf_ptr=0x563cbbf7f8c0 newline=0\n  buffer_pos=174 buffer_size=1028 state=7 skip_rn=0\n  content_name=0x563cbbf7feb0 content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"\"\n[process_multipart_headers] stage=after_scan\n  buf_ptr=0x563cbbf7f8c0 newline=0\n  buffer_pos=174 buffer_size=1028 state=7 skip_rn=0\n  content_name=0x563cbbf7feb0 content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"\"\n[process_multipart_headers] stage=end_of_headers\n  buf_ptr=0x563cbbf7f8c0 newline=0\n  buffer_pos=174 buffer_size=1028 state=8 skip_rn=2\n  content_name=0x563cbbf7feb0 content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"\"\n[process_multipart_headers] stage=entry\n  buf_ptr=0x563cbbf7f8c0 newline=0\n  buffer_pos=152 buffer_size=1028 state=7 skip_rn=0\n  content_name=(nil) content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"\"\n[process_multipart_headers] stage=after_scan\n  buf_ptr=0x563cbbf7f8c0 newline=65\n  buffer_pos=152 buffer_size=1028 state=7 skip_rn=0\n  content_name=(nil) content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"content-disposition: form-data; name=\"pics\"; filename=\"file1.txt\"\"\n[process_multipart_headers] stage=got_header\n  buf_ptr=0x563cbbf7f8c0 newline=65\n  buffer_pos=152 buffer_size=1028 state=7 skip_rn=1\n  content_name=(nil) content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"content-disposition: form-data; name=\"pics\"; filename=\"file1.txt\"\"\n[process_multipart_headers] stage=before_try_get_value_content_disposition\n  header_ptr=0x7fdefb561ed8 header_len=21 header_text=\"Content-disposition: \"\n  buf_ptr=0x563cbbf7f8c0 newline=65\n  buffer_pos=152 buffer_size=1028 state=7 skip_rn=1\n  content_name=(nil) content_filename=(nil) content_type=(nil) content_transfer_encoding=(nil)\n  buf_prefix=\"content-disposition: form-data; name=\"pics\"; filename=\"file1.txt\"\"\n[process_multipart_headers] stage=after_try_get_value_content_disposition\n  header_ptr=0x7fdefb561ed8 header_len=21 header_text=\"Content-disposition: \"\n\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A's reasoning is correct but conditional. MISRA C:2023 Rule 8.13 requires pointer targets to be const-qualified when possible \u2014 i.e. function parameters that are not modified should be declared as pointers-to-const. In the shown call try_match_header(\"Content-Transfer-Encoding: \", ...), a string literal is being passed. If try_match_header is declared with a non-const parameter (e.g. char *header), that prototype is not const-correct and therefore violates the intent of Rule 8.13. If, however, try_match_header is already declared to take a const char * for the header argument, there is no violation in this call. Recommended fix: change the prototype to take const char *header (and likewise for any other functions that take string literals but do not modify them)."
}