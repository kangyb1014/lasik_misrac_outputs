{
  "user_message": "An agent A claimed that the following answer_unique_tiny_response code violates the MISRA C 2023 rule 21.17.\n<misra_rule>\nMISRA C 2023 Rule 21.17 is Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<target_code>\nHere is the original code of answer_unique_tiny_response.\n```c\nstatic enum MHD_Result\nanswer_unique_tiny_response (void *cls,\n                             struct MHD_Connection *connection,\n                             const char *url,\n                             const char *method,\n                             const char *version,\n                             const char *upload_data,\n                             size_t *upload_data_size,\n                             void **req_cls)\n{\n  static int marker = 0;\n  struct MHD_Response *r;\n  enum MHD_Result ret;\n  (void) cls;  /* Unused */\n  (void) url; (void) version; /* Unused */\n  (void) upload_data; (void) upload_data_size; /* Unused */\n\n  if (NULL == *req_cls)\n  {\n    /* The fist call */\n    *req_cls = (void *) &marker;\n    /* Do not send reply yet. No error. */\n    return MHD_YES;\n  }\n  if ((0 != strcmp (method, MHD_HTTP_METHOD_GET)) &&\n      (0 != strcmp (method, MHD_HTTP_METHOD_HEAD)))\n    return MHD_NO; /* Unsupported method, close connection */\n\n#if MHD_VERSION >= 0x00097701\n  r = MHD_create_response_from_buffer_static (MHD_STATICSTR_LEN_ (tiny_body),\n                                              tiny_body);\n#else  /* MHD_VERSION < 0x00097701 */\n  r = MHD_create_response_from_buffer (MHD_STATICSTR_LEN_ (tiny_body),\n                                       (void *) tiny_body,\n                                       MHD_RESPMEM_PERSISTENT);\n#endif /* MHD_VERSION < 0x00097701 */\n  ret = MHD_queue_response (connection, MHD_HTTP_OK, r);\n  MHD_destroy_response (r);\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nPotential violation: if the macro MHD_STATICSTR_LEN_(tiny_body) expands to a call to a <string.h> function (e.g. strlen) or otherwise produces a length larger than the actual storage of tiny_body, then MHD_create_response_from_buffer_static will cause reads beyond the bounds of tiny_body. For example, if tiny_body is declared as a pointer to a buffer whose actual allocation is smaller than the computed length, or if tiny_body is not a null-terminated array and MHD_STATICSTR_LEN_ uses strlen(tiny_body), the library will read past the object\u2019s bounds \u2014 violating MISRA C 2023 Rule 21.17.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The report is not correct as stated. The snippet shown does not itself call any <string.h> function; it only uses the macro MHD_STATICSTR_LEN_(tiny_body) and the function MHD_create_response_from_buffer[_static]. Whether Rule 21.17 is violated depends on the definitions of tiny_body and MHD_STATICSTR_LEN_ (which are not shown). If MHD_STATICSTR_LEN_ expanded to a call to strlen (or otherwise computed a length larger than the actual storage) and tiny_body were not a NUL-terminated object or were a shorter allocation, then an out\u2011of\u2011bounds read could occur and that would indeed breach MISRA C 2023 Rule 21.17. However, in typical libmicrohttpd usage the macro is defined to use sizeof (i.e. a compile\u2011time length such as sizeof(x) - 1) and tiny_body is a static string literal/array, in which case no string.h call or out\u2011of\u2011bounds access occurs. Without the macro and tiny_body definitions there is no evidence in the presented code of a Rule 21.17 violation. To settle this for real you must inspect the definitions of MHD_STATICSTR_LEN_ and tiny_body and ensure any strlen or similar call cannot read past the object bounds."
}