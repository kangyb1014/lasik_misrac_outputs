{
  "user_message": "An agent A claimed that the following connection_done code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of connection_done.\n```c\nstatic void\nconnection_done (void *cls,\n                 struct MHD_Connection *connection,\n                 void **req_cls,\n                 enum MHD_RequestTerminationCode toe)\n{\n  struct Request *req = *req_cls;\n\n  (void) cls;\n  (void) connection;\n  (void) toe;\n  if (-1 != req->timerfd)\n    if (0 != close (req->timerfd))\n      abort ();\n  free (req);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter is declared as void **req_cls but the function never modifies the pointer stored at *req_cls (it only reads it to obtain the Request pointer and then frees the Request). Therefore the pointed-to type (the pointer stored at *req_cls) can be const-qualified. A better declaration would be void * const *req_cls (or, more precisely, struct Request * const *req_cls).\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The code indeed does not modify the pointer stored at *req_cls (it only reads it and frees the pointed-to object), so in isolation one could express that intent by making the pointed-to pointer const (e.g. struct Request * const *). However, connection_done is a callback whose prototype is fixed by the external library (libmicrohttpd) and must match the library's expected void ** parameter. You cannot change the function signature arbitrarily to add const without breaking the required callback type. MISRA's advice to const\u2011qualify pointers \u201cwhere possible\u201d does not force changing a required API/ABI signature. Therefore the agent's report is a false positive in this context."
}