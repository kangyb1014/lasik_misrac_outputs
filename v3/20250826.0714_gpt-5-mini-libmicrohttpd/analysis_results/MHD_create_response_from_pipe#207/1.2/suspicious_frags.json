{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of MHD_create_response_from_pipe:\n```c\n_MHD_EXTERN struct MHD_Response *\nMHD_create_response_from_pipe (int fd)\n{\n  struct MHD_Response *response;\n\n  response = MHD_create_response_from_callback (MHD_SIZE_UNKNOWN,\n                                                MHD_FILE_READ_BLOCK_SIZE,\n                                                &pipe_reader,\n                                                NULL,\n                                                &free_callback);\n  if (NULL == response)\n    return NULL;\n  response->fd = fd;\n  response->is_pipe = true;\n  response->crc_cls = response;\n  return response;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "No explicit compiler language extensions are used in the provided fragment. Specifically:\n- There are no occurrences of known compiler-extension tokens such as __attribute__, __declspec, __builtin_*, __asm, typeof (GCC extension), pragma with compiler-specific forms, or other compiler intrinsics.\n- The token _MHD_EXTERN is a macro name only; its use here is not itself a language extension. Whether it expands to a compiler-specific extension (e.g. __attribute__ or __declspec) cannot be determined from this fragment and would need inspection of its definition, but the code shown does not directly use an extension.\n- Use of true is the standard Boolean literal from <stdbool.h> (C99 and later), not a compiler extension.\n- Other constructs (function definition, pointer assignments, address-of operators &pipe_reader / &free_callback, integer parameter) are standard C.\nGiven the above, there are no code fragments in this snippet that directly exhibit language/compiler-specific extensions that must be flagged under MISRA C 2023 Rule 1.2."
}