{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 17.2 is: Functions shall not call themselves, either directly or indirectly.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of calc_userdigest:\n```c\n_MHD_static_inline void\ncalc_userdigest (struct DigestAlgorithm *da,\n                 const char *username, const size_t username_len,\n                 const char *realm, const size_t realm_len,\n                 const char *password,\n                 uint8_t *ha1_bin)\n{\n  mhd_assert (! da->hashing);\n  digest_update (da, username, username_len);\n  digest_update_with_colon (da);\n  digest_update (da, realm, realm_len);\n  digest_update_with_colon (da);\n  digest_update_str (da, password);\n  digest_calc_hash (da, ha1_bin);\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\ndigest_calc_hash (da, ha1_bin);\n```\nFocus on the above code fragment and judge whether it violates the rule 17.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "From the shown code, calc_userdigest calls another function digest_calc_hash; there is no direct self-call. Rule 17.2 would only be violated if there is indirect recursion (e.g. if digest_calc_hash or one of the other called functions eventually calls calc_userdigest). With the available fragment, there is no evidence of such an indirect call, so no violation can be established. Example of a violating scenario: digest_calc_hash(...) -> ... -> calc_userdigest(...)."
}