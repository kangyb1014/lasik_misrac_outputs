{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 21.17 is: Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of calc_userdigest:\n```c\n_MHD_static_inline void\ncalc_userdigest (struct DigestAlgorithm *da,\n                 const char *username, const size_t username_len,\n                 const char *realm, const size_t realm_len,\n                 const char *password,\n                 uint8_t *ha1_bin)\n{\n  mhd_assert (! da->hashing);\n  digest_update (da, username, username_len);\n  digest_update_with_colon (da);\n  digest_update (da, realm, realm_len);\n  digest_update_with_colon (da);\n  digest_update_str (da, password);\n  digest_calc_hash (da, ha1_bin);\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\ndigest_update (da, realm, realm_len);\n```\nFocus on the above code fragment and judge whether it violates the rule 21.17 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation can be determined from this fragment alone. The call digest_update(da, realm, realm_len) does not itself invoke any <string.h> function shown by Rule 21.17. A violation would occur in this scenario: if realm_len is larger than the actual allocated size of the object pointed to by realm (or realm is NULL/invalid) and digest_update internally uses a string.h routine (e.g. memcpy/memmove/strcpy/strncpy/strlen) that reads realm_len bytes or scans for a NUL terminator, then that internal use would access beyond bounds and violate Rule 21.17 (for example, if digest_update does memcpy(buf, realm, realm_len) but realm actually contains fewer than realm_len bytes)."
}