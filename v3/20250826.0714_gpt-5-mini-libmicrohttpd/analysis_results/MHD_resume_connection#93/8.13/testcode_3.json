{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n\nAnother agent reported that the target code violated the Rule 8.13.\nHere is the comment from the agent.\n<violation scenario>\nThe call passes a translatable string (the result of _(\"...\"), i.e. a string literal) to MHD_DLOG. If MHD_DLOG (or the _() macro/gettext) is declared to take/return a non-const char * (e.g. char *), this discards the const-qualification of data that is not intended to be modified. In that situation the pointer should be declared as pointing to const (e.g. const char *) so the parameter and/or _() return type should be changed accordingly.\n</violation scenario>\n\nYour job is to insert logging code to capture the control flow and state information of the program.\nInsert logging code so that other agents can reproduce and get evidence for the violation scenario.\n<response format>\n- test_code: a modified MHD_resume_connection code that contains useful probe functions that print useful logs to a file \"/tmp/logs/933.txt\". The logs should contain the control path and state information of the violation scenario. If test code is not required to validate the scenario, you can leave this blank.\nHere are the constraints for the test code:\n- The test code MUST preserve the original logic of MHD_resume_connection as much as possible.\nYou CAN just insert probe functions to the original code.\n- DO NOT introduce new violations to demonstrate your scenario.\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- You MUST NOT define the main function.\n- You MUST NOT define macros.\n</response format>\n<target_code>\nHere is the code of MHD_resume_connection:\n```c\n_MHD_EXTERN void\nMHD_resume_connection (struct MHD_Connection *connection)\n{\n  struct MHD_Daemon *daemon = connection->daemon;\n#if defined(MHD_USE_THREADS)\n  mhd_assert (NULL == daemon->worker_pool);\n#endif /* MHD_USE_THREADS */\n\n  if (0 == (daemon->options & MHD_TEST_ALLOW_SUSPEND_RESUME))\n    MHD_PANIC (_ (\"Cannot resume connections without enabling \" \\\n                  \"MHD_ALLOW_SUSPEND_RESUME!\\n\"));\n#if defined(MHD_USE_POSIX_THREADS) || defined(MHD_USE_W32_THREADS)\n  MHD_mutex_lock_chk_ (&daemon->cleanup_connection_mutex);\n#endif\n  connection->resuming = true;\n  daemon->resuming = true;\n#if defined(MHD_USE_POSIX_THREADS) || defined(MHD_USE_W32_THREADS)\n  MHD_mutex_unlock_chk_ (&daemon->cleanup_connection_mutex);\n#endif\n  if ( (MHD_ITC_IS_VALID_ (daemon->itc)) &&\n       (! MHD_itc_activate_ (daemon->itc, \"r\")) )\n  {\n#ifdef HAVE_MESSAGES\n    MHD_DLOG (daemon,\n              _ (\"Failed to signal resume via inter-thread \" \\\n                 \"communication channel.\\n\"));\n#endif\n  }\n}\n```\n</target_code>\nPlease provide the modified MHD_resume_connection code.\n",
  "test_code": "#include <stdio.h>\n#include <stdarg.h>\n#include <stddef.h>\n#include <stdint.h>\n\n/* Probe logger: append human-readable trace to /tmp/logs/933.txt.\n   Kept as small utility functions so original logic is preserved. */\nstatic void\nmhd_probe_log (const char *fmt, ...)\n{\n  FILE *f = fopen(\"/tmp/logs/933.txt\", \"a\");\n  if (NULL == f)\n    return;\n\n  va_list ap;\n  va_start (ap, fmt);\n  (void)vfprintf (f, fmt, ap);\n  va_end (ap);\n  (void)fputc ('\\n', f);\n  (void)fclose (f);\n}\n\n_MHD_EXTERN void\nMHD_resume_connection (struct MHD_Connection *connection)\n{\n  struct MHD_Daemon *daemon = connection->daemon;\n\n  /* Log entry and key state that affect control flow */\n  mhd_probe_log (\"ENTER: MHD_resume_connection connection=%p daemon=%p\",\n                 (void *)connection, (void *)daemon);\n  mhd_probe_log (\"State before resume: connection->resuming=%d daemon->resuming=%d\",\n                 connection->resuming ? 1 : 0,\n                 daemon->resuming ? 1 : 0);\n  mhd_probe_log (\"Daemon pointers: daemon=%p itc=%p options=0x%lx\",\n                 (void *)daemon, (void *)daemon->itc, (unsigned long)daemon->options);\n\n#if defined(MHD_USE_THREADS)\n  mhd_assert (NULL == daemon->worker_pool);\n  mhd_probe_log (\"MHD_USE_THREADS is defined: worker_pool assertion performed\");\n#endif /* MHD_USE_THREADS */\n\n  if (0 == (daemon->options & MHD_TEST_ALLOW_SUSPEND_RESUME))\n  {\n    /* Log the exact reason we will panic before calling MHD_PANIC so the\n       interposition of gettext/_(...) and MHD_DLOG can be observed in the\n       log file. */\n    mhd_probe_log (\"PANIC: MHD_TEST_ALLOW_SUSPEND_RESUME not enabled (options=0x%lx)\",\n                   (unsigned long)daemon->options);\n\n    MHD_PANIC (_ (\"Cannot resume connections without enabling \" \\\n                \"MHD_ALLOW_SUSPEND_RESUME!\\n\"));\n    /* MHD_PANIC is not expected to return. */\n  }\n\n#if defined(MHD_USE_POSIX_THREADS) || defined(MHD_USE_W32_THREADS)\n  mhd_probe_log (\"Attempting to lock cleanup_connection_mutex\");\n  MHD_mutex_lock_chk_ (&daemon->cleanup_connection_mutex);\n  mhd_probe_log (\"Locked cleanup_connection_mutex\");\n#endif\n\n  connection->resuming = true;\n  daemon->resuming = true;\n\n  mhd_probe_log (\"Set resuming flags: connection->resuming=%d daemon->resuming=%d\",\n                 connection->resuming ? 1 : 0,\n                 daemon->resuming ? 1 : 0);\n\n#if defined(MHD_USE_POSIX_THREADS) || defined(MHD_USE_W32_THREADS)\n  MHD_mutex_unlock_chk_ (&daemon->cleanup_connection_mutex);\n  mhd_probe_log (\"Unlocked cleanup_connection_mutex\");\n#endif\n\n  if ( (MHD_ITC_IS_VALID_ (daemon->itc)) &&\n       (! MHD_itc_activate_ (daemon->itc, \"r\")) )\n  {\n#ifdef HAVE_MESSAGES\n    /* Log that we are about to call MHD_DLOG with a translatable literal.\n       This helps reproduce the scenario where a translatable string (the\n       result of _(\"...\")) might have non-const type in its declaration. */\n    const char *probe_msg = _ (\"Failed to signal resume via inter-thread \" \\\n                               \"communication channel.\\n\");\n\n    mhd_probe_log (\"itc valid but MHD_itc_activate_ failed: itc=%p\", (void *)daemon->itc);\n    mhd_probe_log (\"About to call MHD_DLOG with message (from _()): %s\", probe_msg);\n\n    /* Preserve original behavior: still call MHD_DLOG with the translatable\n       string as in the original source. */\n    MHD_DLOG (daemon,\n              _ (\"Failed to signal resume via inter-thread \" \\\n                 \"communication channel.\\n\"));\n\n    mhd_probe_log (\"Returned from MHD_DLOG\");\n#endif\n  }\n\n  mhd_probe_log (\"EXIT: MHD_resume_connection connection=%p daemon=%p\",\n                 (void *)connection, (void *)daemon);\n}\n"
}