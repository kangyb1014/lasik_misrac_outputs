{
  "user_message": "An agent A claimed that the following reply_with_auth_required code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of reply_with_auth_required.\n```c\nstatic enum MHD_Result\nreply_with_auth_required (struct MHD_Connection *c,\n                          int stale,\n                          int wrong_cred)\n{\n  static const char auth_required_content[] =\n    \"<html><head><title>Authentication required</title></head>\" \\\n    \"<body>The requested page needs authentication.</body></html>\";\n  static const size_t auth_required_content_len =\n    (sizeof(auth_required_content) / sizeof(char)) - 1;\n  static const char wrong_creds_content[] =\n    \"<html><head><title>Wrong credentials</title></head>\" \\\n    \"<body>The provided credentials are incorrect.</body></html>\";\n  static const size_t wrong_creds_content_len =\n    (sizeof(wrong_creds_content) / sizeof(char)) - 1;\n  struct MHD_Response *resp;\n  enum MHD_Result ret;\n\n  if (wrong_cred)\n    stale = 0; /* Force client to ask user for username and password */\n\n  if (! wrong_cred)\n    resp = MHD_create_response_from_buffer_static (auth_required_content_len,\n                                                   auth_required_content);\n  else\n    resp = MHD_create_response_from_buffer_static (wrong_creds_content_len,\n                                                   wrong_creds_content);\n  if (NULL == resp)\n    return MHD_NO;\n\n  /* Ignore possible error when adding the header as the reply will work even\n     without this header. */\n  (void) MHD_add_response_header (resp,\n                                  MHD_HTTP_HEADER_CONTENT_TYPE, \"text/html\");\n\n\n  ret = MHD_queue_auth_required_response3 (\n    c,\n    REALM,\n    OPAQUE_DATA, /* The \"opaque data\", not really useful */\n    SEC_AREA1_URL \" \" SEC_AREA2_URL, /* Space-separated list of URLs' initial parts */\n    resp,\n    stale,\n    get_m_QOP (),\n    get_m_algo (),\n    ! 0, /* Userhash support enabled */\n    ! 0 /* UTF-8 is preferred */);\n  MHD_destroy_response (resp);\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function assigns to the parameter 'stale' (stale = 0;) when 'wrong_cred' is true \u2014 this modifies a value parameter inside the function rather than using a local copy.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. MISRA C 2023 Rule 17.8 states that a function parameter shall not be modified. In the code shown the value parameter 'stale' is assigned to (stale = 0;), which is a direct modification of a non\u2011pointer function parameter and therefore violates the rule. The fact that 'stale' is passed by value (so the caller is not altered) does not avoid the rule \u2014 modification of the parameter variable itself is forbidden. Recommended fix: use a local variable initialized from the parameter (e.g. int local_stale = stale; and use local_stale thereafter), or change the function signature/semantics so no parameter assignment is needed."
}