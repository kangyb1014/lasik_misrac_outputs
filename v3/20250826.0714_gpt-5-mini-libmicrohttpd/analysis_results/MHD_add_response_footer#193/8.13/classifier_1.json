{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_add_response_footer:\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_add_response_footer (struct MHD_Response *response,\n                         const char *footer,\n                         const char *content)\n{\n  return add_response_entry (response,\n                             MHD_FOOTER_KIND,\n                             footer,\n                             content);\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nreturn add_response_entry (response,\n                             MHD_FOOTER_KIND,\n                             footer,\n                             content);\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "The call itself does not violate Rule 8.13 because MHD_add_response_footer declares footer and content as const char * (they already point to const-qualified types). A violation would occur if the called function add_response_entry has parameters typed as char * (non-const) \u2014 that would discard the const qualifier when passing footer/content and thus violate Rule 8.13. The fix would be to change add_response_entry's parameter types to const char * (or otherwise ensure no const is discarded)."
}