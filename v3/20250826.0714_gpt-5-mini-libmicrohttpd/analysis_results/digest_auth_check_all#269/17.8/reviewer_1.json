{
  "user_message": "An agent A claimed that the following digest_auth_check_all code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of digest_auth_check_all.\n```c\nstatic enum MHD_DigestAuthResult\ndigest_auth_check_all (struct MHD_Connection *connection,\n                       const char *realm,\n                       const char *username,\n                       const char *password,\n                       const uint8_t *userdigest,\n                       unsigned int nonce_timeout,\n                       uint32_t max_nc,\n                       enum MHD_DigestAuthMultiQOP mqop,\n                       enum MHD_DigestAuthMultiAlgo3 malgo3)\n{\n  enum MHD_DigestAuthResult res;\n  char *buf;\n  struct DigestAlgorithm da;\n\n  buf = NULL;\n  digest_setup_zero (&da);\n  if (0 == nonce_timeout)\n    nonce_timeout = connection->daemon->dauth_def_nonce_timeout;\n  if (0 == max_nc)\n    max_nc = connection->daemon->dauth_def_max_nc;\n  res = digest_auth_check_all_inner (connection, realm, username, password,\n                                     userdigest,\n                                     nonce_timeout,\n                                     max_nc, mqop, malgo3,\n                                     &buf, &da);\n  digest_deinit (&da);\n  if (NULL != buf)\n    free (buf);\n\n  return res;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function assigns to the parameter 'nonce_timeout' (a non-pointer parameter) with: if (0 == nonce_timeout) nonce_timeout = connection->daemon->dauth_def_nonce_timeout; \u2014 this directly modifies the parameter variable, which violates MISRA C 2023 Rule 17.8 (function parameters shall not be modified).\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. MISRA C 2023 Rule 17.8 prohibits modifying function parameters. In digest_auth_check_all the value of the non-pointer parameter nonce_timeout is reassigned (and likewise max_nc is reassigned) via\n  if (0 == nonce_timeout) nonce_timeout = connection->daemon->dauth_def_nonce_timeout;\nThis is a direct modification of a parameter variable and therefore violates Rule 17.8. (The rule\u2019s allowance for modifying the object referred to by a pointer parameter does not apply here because these are non\u2011pointer parameters.) A compliant fix is to copy the parameters into local variables and modify those instead."
}