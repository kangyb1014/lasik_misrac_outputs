{
  "user_message": "An agent A claimed that the following MHD_get_response_headers code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_get_response_headers.\n```c\n_MHD_EXTERN int\nMHD_get_response_headers (struct MHD_Response *response,\n                          MHD_KeyValueIterator iterator,\n                          void *iterator_cls)\n{\n  int numHeaders = 0;\n  struct MHD_HTTP_Res_Header *pos;\n\n  for (pos = response->first_header;\n       NULL != pos;\n       pos = pos->next)\n  {\n    numHeaders++;\n    if ((NULL != iterator) &&\n        (MHD_NO == iterator (iterator_cls,\n                             pos->kind,\n                             pos->header,\n                             pos->value)))\n      break;\n  }\n  return numHeaders;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function parameters are non-const pointers though they are used only for input. In the shown body 'response' is only read (response->first_header and its members are not modified) and 'iterator_cls' is passed through to the iterator but never modified. According to MISRA C 2023 Rule 8.13 these should be declared to point to const-qualified types (e.g. const struct MHD_Response *response and const void *iterator_cls). Also the iterator callback\u2019s parameter types should use const for header/value if they are not modified. Because these input-only pointers are not const-qualified, the rule is violated.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. In the body of MHD_get_response_headers the parameters are only used for input: response is only read (its first_header list is traversed) and iterator_cls is forwarded to the iterator without being modified. Under MISRA C 2023 Rule 8.13 a pointer that is used only for input should be declared to point to a const-qualified type (for example const struct MHD_Response *response and const void *iterator_cls). Likewise the local traversal pointer and the iterator\u2019s header/value parameters should be const-qualified if they are not modified. Caveat: changing these types may require corresponding changes to the iterator callback prototype (and is an API break), so if the public API forces non-const signatures then that is a justified reason to keep non-const here. But strictly speaking against Rule 8.13 the current code is a violation."
}