{
  "user_message": "An agent A claimed that the following MHD_get_response_element_n_ code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_get_response_element_n_.\n```c\nstruct MHD_HTTP_Res_Header *\nMHD_get_response_element_n_ (struct MHD_Response *response,\n                             enum MHD_ValueKind kind,\n                             const char *key,\n                             size_t key_len)\n{\n  struct MHD_HTTP_Res_Header *pos;\n\n  mhd_assert (NULL != key);\n  mhd_assert (0 != key[0]);\n  mhd_assert (0 != key_len);\n\n  for (pos = response->first_header;\n       NULL != pos;\n       pos = pos->next)\n  {\n    if ((pos->header_size == key_len) &&\n        (kind == pos->kind) &&\n        (MHD_str_equal_caseless_bin_n_ (pos->header, key, pos->header_size)))\n      return pos;\n  }\n  return NULL;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function parameter 'response' is declared as 'struct MHD_Response *response' but the function body only reads from response (iterates response->first_header) and does not modify the object pointed to. According to Rule 8.13 the pointer should be const-qualified whenever possible, so it should be 'const struct MHD_Response *response'. Additionally, if callers are not expected to modify the returned header, the return type could be 'const struct MHD_HTTP_Res_Header *' instead of a non-const pointer. As written, the non-const 'response' parameter (and possibly the non-const return) violates MISRA C 2023 Rule 8.13.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828a20 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828a20 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828c70 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828c70 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828cb0 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828cb0 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828cb0 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828cb0 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828cb0 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828cb0 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828cb0 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828cb0 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828cb0 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828cb0 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828cb0 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828cb0 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828cb0 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828cb0 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828cb0 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828cb0 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828cb0 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828cb0 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828d10 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828d10 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828d10 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828d10 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828d50 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828d50 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828d50 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828d50 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x55775f828d50 header_size=10 kind=1 header='Connection'\n  match at pos=0x55775f828d50 (returning this node)\nMHD_get_response_element_n_: entry response=0x55775f828820 kind=1 key=0x7fcda90a6cb2 key_len=10\n  key (as string)='Connection'\n  iter pos=0x5577\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The agent A is correct that the function parameter should be const-qualified. The function only reads from the response object (iterates response->first_header and tests fields) and does not modify it, so per MISRA C 2023 Rule 8.13 the parameter could and should be declared as const struct MHD_Response *response. That change is feasible: declaring the parameter const does not change the type of the member response->first_header (it will still be a struct MHD_HTTP_Res_Header * value), so callers can still obtain a modifiable pointer to the headers if that is intended.\n\nThe return type is less clear: Rule 8.13 would also favor returning a pointer to const if the pointed-to header must not be modified, but from this single function we cannot determine whether callers are expected to modify the returned MHD_HTTP_Res_Header. Thus the report is correct with respect to the non-const response parameter; the comment about the return type is a valid suggestion but not provably a violation from this code alone."
}