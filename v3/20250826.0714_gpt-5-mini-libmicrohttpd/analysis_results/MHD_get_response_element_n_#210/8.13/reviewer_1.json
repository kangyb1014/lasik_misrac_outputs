{
  "user_message": "An agent A claimed that the following MHD_get_response_element_n_ code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_get_response_element_n_.\n```c\nstruct MHD_HTTP_Res_Header *\nMHD_get_response_element_n_ (struct MHD_Response *response,\n                             enum MHD_ValueKind kind,\n                             const char *key,\n                             size_t key_len)\n{\n  struct MHD_HTTP_Res_Header *pos;\n\n  mhd_assert (NULL != key);\n  mhd_assert (0 != key[0]);\n  mhd_assert (0 != key_len);\n\n  for (pos = response->first_header;\n       NULL != pos;\n       pos = pos->next)\n  {\n    if ((pos->header_size == key_len) &&\n        (kind == pos->kind) &&\n        (MHD_str_equal_caseless_bin_n_ (pos->header, key, pos->header_size)))\n      return pos;\n  }\n  return NULL;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIf struct MHD_HTTP_Res_Header declares header as a non-const pointer (e.g. 'char *header') but the member is only ever read (as here, passed to MHD_str_equal_caseless_bin_n_), then Rule 8.13 is violated \u2014 header should be declared 'const char *header'. (Note: key is already const; if header is intentionally mutable elsewhere, then no violation.)\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\n\n--- MHD_get_response_element_n_ entry: 1756199773 ---\nresponse=0x5652b491f820, kind=1, key=0x7f266587ecb2, key_len=10\nkey (len=10): \"Connection\"\niter: pos=0x5652b491fa20, header=0x5652b491f900, header_size=10, pos->kind=1\npos->header (len=10): \"Connection\"\ncmp: size_equal=1, kind_equal=1\nMHD_str_equal_caseless_bin_n_ called, result=1\nMATCH found at pos=0x5652b491fa20 -- returning.\n\n--- MHD_get_response_element_n_ entry: 1756199773 ---\nresponse=0x5652b491f820, kind=1, key=0x7f266587ecb2, key_len=10\nkey (len=10): \"Connection\"\niter: pos=0x5652b491fc70, header=0x5652b491f900, header_size=10, pos->kind=1\npos->header (len=10): \"Connection\"\ncmp: size_equal=1, kind_equal=1\nMHD_str_equal_caseless_bin_n_ called, result=1\nMATCH found at pos=0x5652b491fc70 -- returning.\n\n--- MHD_get_response_element_n_ entry: 1756199773 ---\nresponse=0x5652b491f820, kind=1, key=0x7f266587ecb2, key_len=10\nkey (len=10): \"Connection\"\niter: pos=0x5652b491fcb0, header=0x5652b491f900, header_size=10, pos->kind=1\npos->header (len=10): \"Connection\"\ncmp: size_equal=1, kind_equal=1\nMHD_str_equal_caseless_bin_n_ called, result=1\nMATCH found at pos=0x5652b491fcb0 -- returning.\n\n--- MHD_get_response_element_n_ entry: 1756199773 ---\nresponse=0x5652b491f820, kind=1, key=0x7f266587ecb2, key_len=10\nkey (len=10): \"Connection\"\niter: pos=0x5652b491fcb0, header=0x5652b491f900, header_size=10, pos->kind=1\npos->header (len=10): \"Connection\"\ncmp: size_equal=1, kind_equal=1\nMHD_str_equal_caseless_bin_n_ called, result=1\nMATCH found at pos=0x5652b491fcb0 -- returning.\n\n--- MHD_get_response_element_n_ entry: 1756199773 ---\nresponse=0x5652b491f820, kind=1, key=0x7f266587ecb2, key_len=10\nkey (len=10): \"Connection\"\niter: pos=0x5652b491fcb0, header=0x5652b491f900, header_size=10, pos->kind=1\npos->header (len=10): \"Connection\"\ncmp: size_equal=1, kind_equal=1\nMHD_str_equal_caseless_bin_n_ called, result=1\nMATCH found at pos=0x5652b491fcb0 -- returning.\n\n--- MHD_get_response_element_n_ entry: 1756199773 ---\nresponse=0x5652b491f820, kind=1, key=0x7f266587ecb2, key_len=10\nkey (len=10): \"Connection\"\niter: pos=0x5652b491fcb0, header=0x5652b491f900, header_size=10, pos->kind=1\npos->header (len=10): \"Connection\"\ncmp: size_equal=1, kind_equal=1\nMHD_str_equal_caseless_bin_n_ called, result=1\nMATCH found at pos=0x5652b491fcb0 -- returning.\n\n--- MHD_get_response_element_n_ entry: 1756199773 ---\nresponse=0x5652b491f820, kind=1, key=0x7f266587ecb2, key_len=10\nkey (len=10): \"Connection\"\niter: pos=0x5652b491fcb0, header=0x5652b491f900, header_size=10, pos->kind=1\npos->header (len=10): \"Connection\"\ncmp: size_equal=1, kind_equal=1\nMHD_str_equal_caseless_bin_n_ called, result=1\nMATCH found at pos=0x5652b491fcb0 -- returning.\n\n--- MHD_get_response_element_n_ entry: 1756199773 ---\nresponse=0x5652b491f820, kind=1, key=0x7f266587ecb2, key_len=10\nkey (len=10): \"Connection\"\niter: pos=0x5652b491fcb0, header=0x5652b491f900, header_size=10, pos->kind=1\npos->header (len=10): \"Connection\"\ncmp: size_equal=1, kind_equal=1\nMHD_str_equal_caseless_bin_n_ called, result=1\nMATCH found at pos=0x5652b491fcb0 -- returning.\n\n--- MHD_get_response_element_n_ entry: 1756199773 ---\nresponse=0x5652b491f820, kind=1, key=0x7f266587ecb2, key_len=10\nkey (len=10): \"Connection\"\niter: pos=0x5652b491fcb0, header=0x5652b491f900, header_size=10, pos->kind=1\npos->header (len=10): \"Connection\"\ncmp: size_equal=1, kind_equal=1\nMHD_str_equal_caseless_bin_n_ called, result=1\nMATCH found at pos=0x5652b491fcb0 -- returning.\n\n--- MHD_get_response_element_n_ entry: 1756199773 ---\nresponse=0x5652b491f820, kind=1, key=0x7f266587ecb2, key_len=10\nkey (len=10): \"Connection\"\niter: pos=0x5652b491fcb0, header=0x5652b491f900, header_size=10, pos->kind=1\npos->header (len=10): \"Connection\"\ncmp: size_equal=1, kind_equal=1\nMHD_str_equal_caseless_bin_n_ called, result=1\nMATCH found at pos=0x5652b491fcb0 -- returning.\n\n--- MHD_get_response_element_n_ entry: 1756199773 ---\nresponse=0x5652b491f820, kind=1, key=0x7f266587ecb2, key_len=10\nkey (len=10): \"Connection\"\niter: pos=0x5652b491fcb0, header=0x5652b491f900, header_size=10, pos->kind=1\npos->header (len=10): \"\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The claim cannot be confirmed from the function alone. MISRA C:2023 R8.13 says pointers should be to const-qualified types whenever possible \u2014 so if struct MHD_HTTP_Res_Header declares header as a non-const pointer (e.g. char *header) and that member is never modified anywhere, then that declaration would violate R8.13 and agent A\u2019s observation would be correct. However, the violation is a property of the struct member declaration and of all uses of that member, not of this function by itself. This function only reads pos->header (passing it to a comparison routine), and passing a char * to a parameter of type const char * is allowed by C; that use does not by itself prove a MISRA violation. To decide definitively you must inspect the definition of MHD_HTTP_Res_Header and the rest of the code to see whether header is ever modified or needs to be mutable. If it is never modified, change the member to const char *header to conform to R8.13; if it is intentionally mutable, no violation occurs."
}