{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 21.17 is: Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of handle_req_headers_no_space:\n```c\nstatic void\nhandle_req_headers_no_space (struct MHD_Connection *c,\n                             const char *add_header,\n                             size_t add_header_size)\n{\n  unsigned int err_code;\n\n  err_code = get_no_space_err_status_code (c,\n                                           MHD_PROC_RECV_HEADERS,\n                                           add_header,\n                                           add_header_size);\n  transmit_error_response_static (c,\n                                  err_code,\n                                  ERR_MSG_REQUEST_HEADER_TOO_BIG);\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nerr_code = get_no_space_err_status_code (c,                                           MHD_PROC_RECV_HEADERS,                                           add_header,                                           add_header_size);\n```\nFocus on the above code fragment and judge whether it violates the rule 21.17 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "The fragment itself does not call any functions from <string.h>, so it does not by itself violate MISRA C 2023 Rule 21.17. A violation could occur if the called function get_no_space_err_status_code uses string.h functions in a way that overruns the object referenced by add_header/add_header_size. For example, if add_header actually points to a buffer of length N but add_header_size > N and get_no_space_err_status_code does memcpy(dest, add_header, add_header_size) or if get_no_space_err_status_code calls strlen/add_header is not NUL-terminated, causing reads beyond the buffer, then Rule 21.17 would be violated."
}