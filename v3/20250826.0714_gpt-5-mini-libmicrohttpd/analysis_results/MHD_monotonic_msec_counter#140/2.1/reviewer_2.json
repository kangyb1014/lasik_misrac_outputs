{
  "user_message": "An agent A claimed that the following MHD_monotonic_msec_counter code violates the MISRA C 2023 rule 2.1.\n<misra_rule>\nMISRA C 2023 Rule 2.1 is A project shall not contain unreachable code.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_monotonic_msec_counter.\n```c\nuint64_t\nMHD_monotonic_msec_counter (void)\n{\n#if defined(HAVE_CLOCK_GETTIME) || defined(HAVE_TIMESPEC_GET)\n  struct timespec ts;\n#endif /* HAVE_CLOCK_GETTIME || HAVE_TIMESPEC_GET */\n\n#ifdef HAVE_CLOCK_GETTIME\n  if ( (_MHD_UNWANTED_CLOCK != mono_clock_id) &&\n       (0 == clock_gettime (mono_clock_id,\n                            &ts)) )\n    return (uint64_t) (((uint64_t) (ts.tv_sec - mono_clock_start)) * 1000\n                       + (uint64_t) (ts.tv_nsec / 1000000));\n#endif /* HAVE_CLOCK_GETTIME */\n#ifdef HAVE_CLOCK_GET_TIME\n  if (_MHD_INVALID_CLOCK_SERV != mono_clock_service)\n  {\n    mach_timespec_t cur_time;\n\n    if (KERN_SUCCESS == clock_get_time (mono_clock_service,\n                                        &cur_time))\n      return (uint64_t) (((uint64_t) (cur_time.tv_sec - mono_clock_start))\n                         * 1000 + (uint64_t) (cur_time.tv_nsec / 1000000));\n  }\n#endif /* HAVE_CLOCK_GET_TIME */\n#if defined(_WIN32)\n#if _WIN32_WINNT >= 0x0600\n  if (1)\n    return (uint64_t) (GetTickCount64 () - tick_start);\n#else  /* _WIN32_WINNT < 0x0600 */\n  if (0 != perf_freq)\n  {\n    LARGE_INTEGER perf_counter;\n    uint64_t num_ticks;\n\n    QueryPerformanceCounter (&perf_counter);   /* never fail on XP and later */\n    num_ticks = (uint64_t) (perf_counter.QuadPart - perf_start);\n    return ((num_ticks / perf_freq) * 1000)\n           + ((num_ticks % perf_freq) / (perf_freq / 1000));\n  }\n#endif /* _WIN32_WINNT < 0x0600 */\n#endif /* _WIN32 */\n#ifdef HAVE_GETHRTIME\n  if (1)\n    return ((uint64_t) (gethrtime () - hrtime_start)) / 1000000;\n#endif /* HAVE_GETHRTIME */\n\n  /* Fallbacks, affected by system time change */\n#ifdef HAVE_TIMESPEC_GET\n  if (TIME_UTC == timespec_get (&ts, TIME_UTC))\n    return (uint64_t) (((uint64_t) (ts.tv_sec - gettime_start)) * 1000\n                       + (uint64_t) (ts.tv_nsec / 1000000));\n#elif defined(HAVE_GETTIMEOFDAY)\n  if (1)\n  {\n    struct timeval tv;\n    if (0 == gettimeofday (&tv, NULL))\n      return (uint64_t) (((uint64_t) (tv.tv_sec - gettime_start)) * 1000\n                         + (uint64_t) (tv.tv_usec / 1000));\n  }\n#endif /* HAVE_GETTIMEOFDAY */\n\n  /* The last resort fallback with very low resolution */\n  return (uint64_t) (time (NULL) - sys_clock_start) * 1000;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIf HAVE_GETHRTIME is defined, the if (1) branch is always taken, so the function will always return at that point and the subsequent fallback code (the TIMESPEC_GET/GETTIMEOFDAY branches and the final time(NULL) return) becomes unreachable. This constitutes unreachable code.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=14078895 result=14\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=14078895 result=14\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=14078895 result=14\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=14078895 result=14\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=14078895 result=14\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=14078895 result=14\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=14078895 result=14\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=14078895 result=14\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=14078895 result=14\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=14078895 result=14\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=14078895 result=14\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 ts.tv_sec=10957082 ts.tv_nsec=18078978 result=18\nbranch=CLOCK_GETTIME mono_clock_id=6 mono_clock_start=10957082 t\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. If HAVE_GETHRTIME is defined, the compiled function contains an unconditional return (the if (1) return ...), so any code that follows in that same translation unit (the TIMESPEC_GET/GETTIMEOFDAY fallback branches and the final time(NULL) return) cannot be reached at runtime. Under MISRA C 2023 Rule 2.1 (no unreachable code) this is a violation for that build configuration. To comply, the fallback code must be excluded from the same compilation when HAVE_GETHRTIME is present (for example by using mutually exclusive #elif/#else guards or moving the unconditional return into an #else branch), so that no unreachable code remains in the built project."
}