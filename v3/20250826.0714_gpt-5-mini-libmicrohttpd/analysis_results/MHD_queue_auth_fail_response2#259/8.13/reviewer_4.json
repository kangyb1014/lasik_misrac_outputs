{
  "user_message": "An agent A claimed that the following MHD_queue_auth_fail_response2 code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_queue_auth_fail_response2.\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_queue_auth_fail_response2 (struct MHD_Connection *connection,\n                               const char *realm,\n                               const char *opaque,\n                               struct MHD_Response *response,\n                               int signal_stale,\n                               enum MHD_DigestAuthAlgorithm algo)\n{\n  enum MHD_DigestAuthMultiAlgo3 algo3;\n\n  if (MHD_DIGEST_ALG_MD5 == algo)\n    algo3 = MHD_DIGEST_AUTH_MULT_ALGO3_MD5;\n  else if (MHD_DIGEST_ALG_SHA256 == algo)\n    algo3 = MHD_DIGEST_AUTH_MULT_ALGO3_SHA256;\n  else if (MHD_DIGEST_ALG_AUTO == algo)\n    algo3 = MHD_DIGEST_AUTH_MULT_ALGO3_ANY_NON_SESSION;\n  else\n    MHD_PANIC (_ (\"Wrong algo value.\\n\")); /* API violation! */\n\n  return MHD_queue_auth_required_response3 (connection, realm, opaque,\n                                            NULL, response, signal_stale,\n                                            MHD_DIGEST_AUTH_MULT_QOP_AUTH,\n                                            algo3,\n                                            0, 0);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'response' is declared as a plain pointer: 'struct MHD_Response *response'. In this function 'response' is not modified (it is only forwarded to MHD_queue_auth_required_response3), so if the pointee is intended to be read-only in this routine (and in the called routine), the parameter should be 'const struct MHD_Response *response'. Thus, if neither this function nor the callee modify the object pointed to, the current declaration violates MISRA C 2023 Rule 8.13. If, however, MHD_queue_auth_required_response3 (or other code) legitimately modifies *response, then the non-const declaration is appropriate and there is no violation.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "Agent A\u2019s observation is plausible but not provable from the snippet alone. In the shown function MHD_queue_auth_fail_response2 the parameter response is not modified locally \u2014 it is only forwarded to MHD_queue_auth_required_response3 \u2014 so the only way this is a Rule 8.13 violation is if the pointee is in fact read-only across this call chain (i.e. neither this function nor MHD_queue_auth_required_response3 or any downstream code modify *response). If the callee (or other code) legitimately modifies the object pointed to by response, then the non-const parameter is appropriate and there is no violation. To decide definitively you must inspect the signature and implementation of MHD_queue_auth_required_response3 and any other callers that rely on a mutable response. If those do not mutate *response, change the parameter (and the callee\u2019s parameter) to const struct MHD_Response * to comply with MISRA C 2023 Rule 8.13."
}