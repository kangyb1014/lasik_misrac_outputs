{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of get_mhd_response_size:\n```c\nstatic const char *\nget_mhd_response_size (void)\n{\n  if (tool_params.empty)\n    return \"0 bytes (empty)\";\n  else if (tool_params.tiny)\n    return \"3 bytes (tiny)\";\n  else if (tool_params.medium)\n    return \"8 KB (medium)\";\n  else if (tool_params.large)\n    return \"1 MB (large)\";\n  return \"!!internal error!!\";\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "return \"!!internal error!!\";",
    "return \"1 MB (large)\";",
    "return \"0 bytes (empty)\";",
    "return \"8 KB (medium)\";",
    "return \"3 bytes (tiny)\";"
  ],
  "explanation": "Only the branch bodies (the return statements) are potential candidates for dead code in this snippet because dead code is an executed operation whose removal would not affect program behaviour. The surrounding items \u2014 the function signature, the if/else-if control structure, and the condition expressions (e.g. if (tool_params.empty)) \u2014 are control constructs or declarations that do not by themselves constitute removable executed operations and thus are not candidates for dead code in isolation. Whether any specific return statement is actually dead depends on invariants of tool_params (which are not visible in this fragment); therefore all return statements are listed for investigation. Note: unreachable code (branches that can never be executed by design) is distinct from dead code per the rule; determining reachability vs true dead code requires analysis of the broader program state and invariants outside this snippet."
}