{
  "user_message": "An agent A claimed that the following MHD_get_daemon_info code violates the MISRA C 2023 rule 2.2.\n<misra_rule>\nMISRA C 2023 Rule 2.2 is A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_get_daemon_info.\n```c\n_MHD_EXTERN const union MHD_DaemonInfo *\nMHD_get_daemon_info (struct MHD_Daemon *daemon,\n                     enum MHD_DaemonInfoType info_type,\n                     ...)\n{\n  if (NULL == daemon)\n    return NULL;\n\n  mhd_assert ((0 == (daemon->options & MHD_USE_SELECT_INTERNALLY)) || \\\n              (NULL != daemon->worker_pool) || \\\n              (MHD_thread_handle_ID_is_valid_handle_ (daemon->tid)));\n  mhd_assert (((0 != (daemon->options & MHD_USE_SELECT_INTERNALLY)) &&\n               (NULL == daemon->worker_pool)) || \\\n              (! MHD_thread_handle_ID_is_valid_handle_ (daemon->tid)));\n\n  switch (info_type)\n  {\n  case MHD_DAEMON_INFO_KEY_SIZE:\n    return NULL;   /* no longer supported */\n  case MHD_DAEMON_INFO_MAC_KEY_SIZE:\n    return NULL;   /* no longer supported */\n  case MHD_DAEMON_INFO_LISTEN_FD:\n    daemon->daemon_info_dummy_listen_fd.listen_fd = daemon->listen_fd;\n    return &daemon->daemon_info_dummy_listen_fd;\n  case MHD_DAEMON_INFO_EPOLL_FD:\n#ifdef EPOLL_SUPPORT\n    daemon->daemon_info_dummy_epoll_fd.epoll_fd = daemon->epoll_fd;\n    return &daemon->daemon_info_dummy_epoll_fd;\n#else  /* ! EPOLL_SUPPORT */\n    return NULL;\n#endif /* ! EPOLL_SUPPORT */\n  case MHD_DAEMON_INFO_CURRENT_CONNECTIONS:\n    if (! MHD_D_IS_THREAD_SAFE_ (daemon))\n      MHD_cleanup_connections (daemon);\n#if defined(MHD_USE_POSIX_THREADS) || defined(MHD_USE_W32_THREADS)\n    else if (daemon->worker_pool)\n    {\n      unsigned int i;\n      /* Collect the connection information stored in the workers. */\n      daemon->connections = 0;\n      for (i = 0; i < daemon->worker_pool_size; i++)\n      {\n        /* FIXME: next line is thread-safe only if read is atomic. */\n        daemon->connections += daemon->worker_pool[i].connections;\n      }\n    }\n#endif\n    daemon->daemon_info_dummy_num_connections.num_connections\n      = daemon->connections;\n    return &daemon->daemon_info_dummy_num_connections;\n  case MHD_DAEMON_INFO_FLAGS:\n    daemon->daemon_info_dummy_flags.flags = daemon->options;\n    return &daemon->daemon_info_dummy_flags;\n  case MHD_DAEMON_INFO_BIND_PORT:\n    daemon->daemon_info_dummy_port.port = daemon->port;\n    return &daemon->daemon_info_dummy_port;\n  default:\n    return NULL;\n  }\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe case label for MHD_DAEMON_INFO_MAC_KEY_SIZE simply does 'return NULL;' while the switch's default case also returns NULL. Removing this case and its return statement would not change program behaviour (the default would handle that enum value), so the operation is redundant and constitutes dead code.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=6 (MHD_DAEMON_INFO_BIND_PORT) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_BIND_PORT: port=33707 returning address=0x564a307eab70\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=5 (MHD_DAEMON_INFO_FLAGS) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_FLAGS: options=0x80001 returning address=0x564a307eab68\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=2 (MHD_DAEMON_INFO_LISTEN_FD) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_LISTEN_FD: listen_fd=3 returning address=0x564a307eab50\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=5 (MHD_DAEMON_INFO_FLAGS) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_FLAGS: options=0x80001 returning address=0x564a307eab68\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=2 (MHD_DAEMON_INFO_LISTEN_FD) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_LISTEN_FD: listen_fd=3 returning address=0x564a307eab50\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=5 (MHD_DAEMON_INFO_FLAGS) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_FLAGS: options=0x80001 returning address=0x564a307eab68\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=2 (MHD_DAEMON_INFO_LISTEN_FD) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_LISTEN_FD: listen_fd=3 returning address=0x564a307eab50\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=5 (MHD_DAEMON_INFO_FLAGS) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_FLAGS: options=0x80001 returning address=0x564a307eab68\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=2 (MHD_DAEMON_INFO_LISTEN_FD) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_LISTEN_FD: listen_fd=3 returning address=0x564a307eab50\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=5 (MHD_DAEMON_INFO_FLAGS) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_FLAGS: options=0x80001 returning address=0x564a307eab68\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=2 (MHD_DAEMON_INFO_LISTEN_FD) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_LISTEN_FD: listen_fd=3 returning address=0x564a307eab50\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=5 (MHD_DAEMON_INFO_FLAGS) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_FLAGS: options=0x80001 returning address=0x564a307eab68\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=2 (MHD_DAEMON_INFO_LISTEN_FD) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_LISTEN_FD: listen_fd=3 returning address=0x564a307eab50\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=5 (MHD_DAEMON_INFO_FLAGS) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_FLAGS: options=0x80001 returning address=0x564a307eab68\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=2 (MHD_DAEMON_INFO_LISTEN_FD) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_LISTEN_FD: listen_fd=3 returning address=0x564a307eab50\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=5 (MHD_DAEMON_INFO_FLAGS) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_FLAGS: options=0x80001 returning address=0x564a307eab68\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=2 (MHD_DAEMON_INFO_LISTEN_FD) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_INFO_LISTEN_FD: listen_fd=3 returning address=0x564a307eab50\n[1756196061] pid=2665420: MHD_get_daemon_info ENTER daemon=0x564a307ea8d0 info_type=5 (MHD_DAEMON_INFO_FLAGS) options=0x80001\n[1756196061] pid=2665420: CASE MHD_DAEMON_\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. The explicit case for MHD_DAEMON_INFO_MAC_KEY_SIZE (and similarly MHD_DAEMON_INFO_KEY_SIZE) executes a return NULL; that exact behaviour is also provided by the switch's default label. Removing the explicit case would not change program behaviour for that enumerator, so the operation is redundant and meets MISRA C 2023 Rule 2.2\u2019s definition of dead code. If the case is present only for documentation/clarity, replace it with a comment or handle it in a way that does not execute redundant code; otherwise remove the case to comply with the rule."
}