{
  "user_message": "An agent A claimed that the following send_all code violates the MISRA C 2023 rule 14.2.\n<misra_rule>\nMISRA C 2023 Rule 14.2 is A for loop shall be well-formed.\nThe three clauses of a for statement are the:\n1. First clause shall be empty or an expression whose set the value of the loop counter or define and intialize the loop counter.\n2. Second clause shall be an expression that has no persistent side effects, and shall use the loop counter and optionally loop control flags, and shall not use any other object that is modified in the for loop body.\n3.Third clause shall be an expression whose modify only the value of the loop counter, and shall not use objects that are modified in the for loop body.\n4. There shall only be one loop counter in a for loop, which shall not be modified in for loop body. A loop control flag is defined as single identifier denoting an object with Boolean type that is used in the second clause. The behaviour of a for loop body includes the behaviour of any functions called within that statement. \n</misra_rule>\n<target_code>\nHere is the original code of send_all.\n```c\nstatic size_t\nsend_all (MHD_socket sock, const unsigned char *buf, size_t len)\n{\n  ssize_t ret;\n  size_t off;\n\n  for (off = 0; off < len; off += (size_t) ret)\n  {\n#if ! defined(_WIN32) || defined(__CYGWIN__)\n    ret = send (sock, (const void *) &buf[off], len - off, 0);\n#else  /* Native W32 */\n    ret = send (sock, (const void *) &buf[off], (int) (len - off), 0);\n#endif /* Native W32 */\n    if (0 > ret)\n    {\n      if (EAGAIN == errno)\n      {\n        ret = 0;\n        continue;\n      }\n      break;\n    }\n    if (0 == ret)\n    {\n      break;\n    }\n  }\n  return off;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe for loop\u2019s third clause (off += (size_t) ret) uses the object 'ret', which is assigned inside the loop body (ret = send(...)). MISRA C 2023 R14.2 requires the third clause to modify only the loop counter and not use objects that are modified in the loop body. Because 'ret' is modified by the loop body (including the send call), this violates clause 3 (and the single-loop-counter requirement).\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. The for statement uses 'off' as the loop counter but its third clause (off += (size_t) ret) reads the object 'ret', and 'ret' is assigned inside the loop body (ret = send(...); and ret may be set to 0 on EAGAIN). MISRA C 2023 R14.2 explicitly requires the third clause to modify only the loop counter and not use objects that are modified in the loop body (and there must be only one loop counter). Because 'ret' is modified by the loop body, using it in the third clause violates clause 3 (and the single-loop-counter requirement), so the reported violation is correct."
}