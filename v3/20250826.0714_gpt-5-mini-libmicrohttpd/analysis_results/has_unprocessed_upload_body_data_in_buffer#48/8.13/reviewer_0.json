{
  "user_message": "An agent A claimed that the following has_unprocessed_upload_body_data_in_buffer code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of has_unprocessed_upload_body_data_in_buffer.\n```c\nstatic bool\nhas_unprocessed_upload_body_data_in_buffer (struct MHD_Connection *c)\n{\n  mhd_assert (MHD_CONNECTION_BODY_RECEIVING == c->state);\n  if (! c->rq.have_chunked_upload)\n    return 0 != c->read_buffer_offset;\n\n  /* Chunked upload */\n  mhd_assert (0 != c->rq.remaining_upload_size); /* Must not be possible in MHD_CONNECTION_BODY_RECEIVING state */\n  if (c->rq.current_chunk_offset == c->rq.current_chunk_size)\n  {\n    /* 0 == c->rq.current_chunk_size: Waiting the chunk size (chunk header).\n       0 != c->rq.current_chunk_size: Waiting for chunk-closing CRLF. */\n    return false;\n  }\n  return 0 != c->read_buffer_offset; /* Chunk payload data in the read buffer */\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function parameter 'struct MHD_Connection *c' is not const-qualified even though the function only reads fields of *c (accesses c->state, c->rq..., c->read_buffer_offset) and does not modify the pointed-to object. According to MISRA C 2023 Rule 8.13, the pointer should point to a const-qualified type whenever possible. The signature should be changed to: static bool has_unprocessed_upload_body_data_in_buffer(const struct MHD_Connection *c).\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Correct. The function only reads members of *c and does not modify the object; therefore, per MISRA C 2023 Rule 8.13 a pointer parameter should be to a const-qualified type when possible. Declaring the parameter as const struct MHD_Connection *c would satisfy the rule. (As a caveat, ensure no callers rely on the exact non-const function type in contexts such as function-pointer assignments; otherwise the change is safe because non-const-to-const pointer conversion is allowed for actual arguments.)"
}