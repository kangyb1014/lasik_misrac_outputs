{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of add_session_cookie:\n```c\nstatic void\nadd_session_cookie (struct Session *session,\n                    struct MHD_Response *response)\n{\n  char cstr[256];\n  snprintf (cstr,\n            sizeof (cstr),\n            \"%s=%s\",\n            COOKIE_NAME,\n            session->sid);\n  if (MHD_NO ==\n      MHD_add_response_header (response,\n                               MHD_HTTP_HEADER_SET_COOKIE,\n                               cstr))\n  {\n    fprintf (stderr,\n             \"Failed to set session cookie header!\\n\");\n  }\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "No compiler-specific language extensions are used in the provided code fragment. The constructs present are all standard C: - Function definition with static linkage (standard). - Prototype-style parameter list with pointer-to-struct parameters (standard). - Fixed-size array declaration char cstr[256] (standard). - Use of standard library functions snprintf and fprintf (standard C library; snprintf is part of C99 and later). - Use of sizeof operator and string formatting (standard). - Use of identifiers/macros beginning with MHD_ (MHD_NO, MHD_add_response_header, MHD_HTTP_HEADER_SET_COOKIE) appear to be from an external library (libmicrohttpd or similar) and are not compiler language extensions \u2014 they are library symbols/macros, not compiler-specific syntax extensions. - Control structures (if) and block syntax are standard. Because none of the above are documented compiler extensions (no use of GCC/Clang attributes like __attribute__, no builtin compiler-specific keywords like __builtin_*, no nested functions, no statement expressions, no inline assembly, no vendor-specific pragmas or type qualifiers), there are no fragments that need investigation under MISRA C 2023 Rule 1.2."
}