{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 17.2 is: Functions shall not call themselves, either directly or indirectly.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of MHD_get_timeout:\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_get_timeout (struct MHD_Daemon *daemon,\n                 MHD_UNSIGNED_LONG_LONG *timeout)\n{\n  uint64_t t64;\n  if (MHD_NO == MHD_get_timeout64 (daemon, &t64))\n    return MHD_NO;\n\n#if SIZEOF_UINT64_T > SIZEOF_UNSIGNED_LONG_LONG\n  if (ULLONG_MAX <= t64)\n    *timeout = ULLONG_MAX;\n  else\n#endif /* SIZEOF_UINT64_T > SIZEOF_UNSIGNED_LONG_LONG */\n  *timeout = (MHD_UNSIGNED_LONG_LONG) t64;\n  return MHD_YES;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "if (MHD_NO == MHD_get_timeout64 (daemon, &t64))\n    return MHD_NO;",
    "_MHD_EXTERN enum MHD_Result\nMHD_get_timeout (struct MHD_Daemon *daemon,\n                 MHD_UNSIGNED_LONG_LONG *timeout)"
  ],
  "explanation": "The only potential for violating MISRA C Rule 17.2 (no direct or indirect self-call) in this function is the call to MHD_get_timeout64: if that function (elsewhere in the codebase) calls back into MHD_get_timeout, an indirect recursion would occur. There is no direct call to MHD_get_timeout within this function. Other fragments in the function (the uint64_t t64 declaration, the conditional compilation using SIZEOF_UINT64_T, the ULLONG_MAX comparison and assignment, and the final return MHD_YES) are simple data operations or compile-time guards and do not perform function calls that could introduce recursion. The _MHD_EXTERN linkage specifier and the use of macros/constants are not function calls and therefore are not relevant to Rule 17.2. Accordingly, investigation should focus on the call to MHD_get_timeout64 and the implementation of that function to determine whether indirect recursion exists; the rest of the function does not warrant investigation for Rule 17.2."
}