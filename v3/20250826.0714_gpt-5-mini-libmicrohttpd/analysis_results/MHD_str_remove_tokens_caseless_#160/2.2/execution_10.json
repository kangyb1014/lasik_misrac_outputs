{
  "result": "success",
  "message": "ENTER: MHD_str_remove_tokens_caseless_: str_len=6, tokens_len=6\n  str(prefix 6)='string'\n  tokens(prefix 6)='string'\ntokens: skipped ws, pt=0\nprocessing token: tkn_len=6, pt=6\n  compare whole string: str_len==tkn_len (6)\n  token matched entire string -> removed, new str_len=0\nEXIT: token_removed=1, final str_len=0\nENTER: MHD_str_remove_tokens_caseless_: str_len=6, tokens_len=6\n  str(prefix 6)='String'\n  tokens(prefix 6)='string'\ntokens: skipped ws, pt=0\nprocessing token: tkn_len=6, pt=6\n  compare whole string: str_len==tkn_len (6)\n  token matched entire string -> removed, new str_len=0\nEXIT: token_removed=1, final str_len=0\nENTER: MHD_str_remove_tokens_caseless_: str_len=6, tokens_len=6\n  str(prefix 6)='string'\n  tokens(prefix 6)='String'\ntokens: skipped ws, pt=0\nprocessing token: tkn_len=6, pt=6\n  compare whole string: str_len==tkn_len (6)\n  token matched entire string -> removed, new str_len=0\nEXIT: token_removed=1, final str_len=0\nENTER: MHD_str_remove_tokens_caseless_: str_len=6, tokens_len=6\n  str(prefix 6)='strinG'\n  tokens(prefix 6)='String'\ntokens: skipped ws, pt=0\nprocessing token: tkn_len=6, pt=6\n  compare whole string: str_len==tkn_len (6)\n  token matched entire string -> removed, new str_len=0\nEXIT: token_removed=1, final str_len=0\nENTER: MHD_str_remove_tokens_caseless_: str_len=6, tokens_len=7\n  str(prefix 6)='strinG'\n  tokens(prefix 7)='String\t'\ntokens: skipped ws, pt=0\nprocessing token: tkn_len=6, pt=7\n  compare whole string: str_len==tkn_len (6)\n  token matched entire string -> removed, new str_len=0\nEXIT: token_removed=1, final str_len=0\nENTER: MHD_str_remove_tokens_caseless_: str_len=6, tokens_len=7\n  str(prefix 6)='strinG'\n  tokens(prefix 7)='\tString'\ntokens: skipped ws, pt=1\nprocessing token: tkn_len=6, pt=7\n  compare whole string: str_len==tkn_len (6)\n  token matched entire string -> removed, new str_len=0\nEXIT: token_removed=1, final str_len=0\nENTER: MHD_str_remove_tokens_caseless_: str_len=5, tokens_len=10\n  str(prefix 5)='tOkEn'\n  tokens(prefix 10)=' \t toKEN  '\ntokens: skipped ws, pt=3\nprocessing token: tkn_len=5, pt=10\n  compare whole string: str_len==tkn_len (5)\n  token matched entire string -> removed, new str_len=0\nEXIT: token_removed=1, final str_len=0\nENTER: MHD_str_remove_tokens_caseless_: str_len=16, tokens_len=5\n  str(prefix 16)='not-token, tOkEn'\n  tokens(prefix 5)='token'\ntokens: skipped ws, pt=0\nprocessing token: tkn_len=5, pt=5\n  enter removal loop: pr=0, pw=0, str_len=16, tkn_len=5\n    assertion-probe: pr=11, pw=9, str[0]=0x6e('n'), str_len=16\n    matched token at pr=11, advancing by 7 (tkn_len+2)\n    rest too small, copied rest -> new str_len=9\nEXIT: token_removed=1, final str_len=9\nENTER: MHD_str_remove_tokens_caseless_: str_len=25, tokens_len=6\n  str(prefix 25)='not-token1, tOkEn1, token'\n  tokens(prefix 6)='token1'\ntokens: skipped ws, pt=0\nprocessing token: tkn_len=6, pt=6\n  enter removal loop: pr=0, pw=0, str_len=25, tkn_len=6\n    assertion-probe: pr=12, pw=10, str[0]=0x6e('n'), str_len=25\n    matched token at pr=12, advancing by 8 (tkn_len+2)\n    rest too small, copied rest -> new str_len=17\nEXIT: token_removed=1, final str_len=17\nENTER: MHD_str_remove_tokens_caseless_: str_len=13, tokens_len=6\n  str(prefix 13)='token, tOkEn1'\n  tokens(prefix 6)='token1'\ntokens: skipped ws, pt=0\nprocessing token: tkn_len=6, pt=6\n  enter removal loop: pr=0, pw=0, str_len=13, tkn_len=6\n    assertion-probe: pr=7, pw=5, str[0]=0x74('t'), str_len=13\n    matched token at pr=7, advancing by 8 (tkn_len+2)\n    rest too small, copied rest -> new str_len=5\nEXIT: token_removed=1, final str_len=5\nENTER: MHD_str_remove_tokens_caseless_: str_len=16, tokens_len=8\n  str(prefix 16)='not-token, tOkEn'\n  tokens(prefix 8)=' \t toKEN'\ntokens: skipped ws, pt=3\nprocessing token: tkn_len=5, pt=8\n  enter removal loop: pr=0, pw=0, str_len=16, tkn_len=5\n    assertion-probe: pr=11, pw=9, str[0]=0x6e('n'), str_len=16\n    matched token at pr=11, advancing by 7 (tkn_len+2)\n    rest too small, copied rest -> new str_len=9\nEXIT: token_removed=1, final str_len=9\nENTER: MHD_str_remove_tokens_caseless_: str_len=28, tokens_len=6\n  s"
}