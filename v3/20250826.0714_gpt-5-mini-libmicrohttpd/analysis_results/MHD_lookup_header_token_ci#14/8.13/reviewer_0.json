{
  "user_message": "An agent A claimed that the following MHD_lookup_header_token_ci code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_lookup_header_token_ci.\n```c\nstatic bool\nMHD_lookup_header_token_ci (const struct MHD_Connection *connection,\n                            const char *header,\n                            size_t header_len,\n                            const char *token,\n                            size_t token_len)\n{\n  struct MHD_HTTP_Req_Header *pos;\n\n  if ((NULL == connection) || (NULL == header) || (0 == header[0]) ||\n      (NULL == token) || (0 == token[0]))\n    return false;\n\n  for (pos = connection->rq.headers_received; NULL != pos; pos = pos->next)\n  {\n    if ((0 != (pos->kind & MHD_HEADER_KIND)) &&\n        (header_len == pos->header_size) &&\n        ( (header == pos->header) ||\n          (MHD_str_equal_caseless_bin_n_ (header,\n                                          pos->header,\n                                          header_len)) ) &&\n        (MHD_str_has_token_caseless_ (pos->value, token, token_len)))\n      return true;\n  }\n  return false;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIf struct MHD_HTTP_Req_Header::header is declared as a non-const char * (e.g. char *header), this is a violation: the function treats the header as read\u2011only (const char *header parameter and only performs comparisons/reads), so the pointer in the struct should be const-qualified. In that case Rule 8.13 is violated (pos->header should be declared const char *). If, however, pos->header is already declared as const char *, there is no violation.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A's report is correct in the scenario they described. MISRA C 2023 Rule 8.13 requires pointers to point to const-qualified types whenever possible. In this function the code only reads pos->header (it never modifies it), passing it to functions that perform const reads/comparisons. If the field in struct MHD_HTTP_Req_Header is declared as char *header (a non-const pointer) while it is only used for reading, then the field should be declared as const char *header and the present declaration would violate R8.13. That said, whether there is an actual violation in the project depends on the real declaration of MHD_HTTP_Req_Header and any other code that may legitimately modify header; if header is already declared const char * (or must be mutable elsewhere), there is no violation. Also note related qualifier issues: making the struct member const or declaring pos as pointer-to-const struct (const struct MHD_HTTP_Req_Header *pos) are appropriate fixes depending on intended mutability."
}