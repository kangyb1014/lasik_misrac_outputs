{
  "user_message": "An agent A claimed that the following process_request_target code violates the MISRA C 2023 rule 21.17.\n<misra_rule>\nMISRA C 2023 Rule 21.17 is Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<target_code>\nHere is the original code of process_request_target.\n```c\nstatic bool\nprocess_request_target (struct MHD_Connection *c)\n{\n#ifdef _DEBUG\n  size_t params_len;\n#endif /* _DEBUG */\n  mhd_assert (MHD_CONNECTION_REQ_LINE_RECEIVING == c->state);\n  mhd_assert (NULL == c->rq.url);\n  mhd_assert (0 == c->rq.url_len);\n  mhd_assert (NULL != c->rq.hdrs.rq_line.rq_tgt);\n  mhd_assert ((NULL == c->rq.hdrs.rq_line.rq_tgt_qmark) || \\\n              (c->rq.hdrs.rq_line.rq_tgt <= c->rq.hdrs.rq_line.rq_tgt_qmark));\n  mhd_assert ((NULL == c->rq.hdrs.rq_line.rq_tgt_qmark) || \\\n              (c->rq.req_target_len > \\\n               (size_t) (c->rq.hdrs.rq_line.rq_tgt_qmark \\\n                         - c->rq.hdrs.rq_line.rq_tgt)));\n\n  /* Log callback before the request-target is modified/decoded */\n  if (NULL != c->daemon->uri_log_callback)\n  {\n    c->rq.client_aware = true;\n    c->rq.client_context =\n      c->daemon->uri_log_callback (c->daemon->uri_log_callback_cls,\n                                   c->rq.hdrs.rq_line.rq_tgt,\n                                   c);\n  }\n\n  if (NULL != c->rq.hdrs.rq_line.rq_tgt_qmark)\n  {\n#ifdef _DEBUG\n    params_len =\n      c->rq.req_target_len\n      - (size_t) (c->rq.hdrs.rq_line.rq_tgt_qmark - c->rq.hdrs.rq_line.rq_tgt);\n#endif /* _DEBUG */\n    c->rq.hdrs.rq_line.rq_tgt_qmark[0] = 0; /* Replace '?' with zero termination */\n    if (MHD_NO == MHD_parse_arguments_ (c,\n                                        MHD_GET_ARGUMENT_KIND,\n                                        c->rq.hdrs.rq_line.rq_tgt_qmark + 1,\n                                        &connection_add_header,\n                                        c))\n    {\n      mhd_assert (MHD_CONNECTION_REQ_LINE_RECEIVING != c->state);\n      return false;\n    }\n  }\n#ifdef _DEBUG\n  else\n    params_len = 0;\n#endif /* _DEBUG */\n\n  mhd_assert (strlen (c->rq.hdrs.rq_line.rq_tgt) == \\\n              c->rq.req_target_len - params_len);\n\n  /* Finally unescape URI itself */\n  c->rq.url_len =\n    c->daemon->unescape_callback (c->daemon->unescape_callback_cls,\n                                  c,\n                                  c->rq.hdrs.rq_line.rq_tgt);\n  c->rq.url = c->rq.hdrs.rq_line.rq_tgt;\n\n  return true;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIf the request-target contains a lone '?' as its final character (i.e. the query string is empty), then rq.hdrs.rq_line.rq_tgt_qmark points to that '?' which is replaced with '\\0'. The code nevertheless passes rq.hdrs.rq_line.rq_tgt_qmark + 1 to MHD_parse_arguments_. In that case +1 points to the byte immediately after the string terminator (one-past the request-target region) and is not guaranteed to be a valid NUL-terminated buffer. If MHD_parse_arguments_ (or the string.h functions it uses) reads from that pointer, it can access memory beyond the bounds of the object, violating MISRA C 2023 Rule 21.17.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark == NULL).\n  params_len (probe)=0\n\n[process_request_target] stage=done\n  connection ptr=0x55915e064270\n  rq.url=0x55915e0644c4 url_len=2\n  rq_tgt=0x55915e0644c4 rq_tgt_qmark=(nil) rq_req_target_len=2\n  Info: no query mark present (rq_tgt_qmark\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report from agent A is correct. In the code path where rq.hdrs.rq_line.rq_tgt_qmark != NULL the code writes a NUL into the '?' location (rq_tgt_qmark[0] = 0) and then calls MHD_parse_arguments_(..., rq_tgt_qmark + 1, ...). If the '?' is the final character of the request-target, rq_tgt_qmark + 1 points to the byte immediately after the request-target (one-past the region that defines the request-target). There is no guarantee in the shown code that that byte is within the object that should be passed to string-processing routines or that it contains a NUL terminator. Passing a pointer that does not point to a valid NUL-terminated string into a parser that uses the <string.h> functions (or otherwise reads the string) can result in reads beyond the bounds of the referenced object. That is exactly what MISRA C 2023 Rule 21.17 forbids. The existing assertions do not guarantee that there is a valid character (or NUL) at rq_tgt_qmark + 1 (the assertion only ensures qmark lies inside the request-target), so the potential out-of-bounds access remains. Therefore the reported violation of Rule 21.17 is valid."
}