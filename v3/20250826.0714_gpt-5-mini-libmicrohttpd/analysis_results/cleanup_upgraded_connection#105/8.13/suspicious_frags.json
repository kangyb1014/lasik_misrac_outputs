{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of cleanup_upgraded_connection:\n```c\nstatic void\ncleanup_upgraded_connection (struct MHD_Connection *connection)\n{\n  struct MHD_UpgradeResponseHandle *urh = connection->urh;\n\n  if (NULL == urh)\n    return;\n#ifdef HTTPS_SUPPORT\n  /* Signal remote client the end of TLS connection by\n   * gracefully closing TLS session. */\n  if (0 != (connection->daemon->options & MHD_USE_TLS))\n    gnutls_bye (connection->tls_session,\n                GNUTLS_SHUT_WR);\n\n  if (MHD_INVALID_SOCKET != urh->mhd.socket)\n    MHD_socket_close_chk_ (urh->mhd.socket);\n\n  if (MHD_INVALID_SOCKET != urh->app.socket)\n    MHD_socket_close_chk_ (urh->app.socket);\n#endif /* HTTPS_SUPPORT */\n  connection->urh = NULL;\n  free (urh);\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "if (0 != (connection->daemon->options & MHD_USE_TLS))",
    "struct MHD_UpgradeResponseHandle *urh = connection->urh;",
    "connection->urh = NULL;",
    "static void\ncleanup_upgraded_connection (struct MHD_Connection *connection)",
    "gnutls_bye (connection->tls_session,\n                GNUTLS_SHUT_WR);",
    "free (urh);"
  ],
  "explanation": "I did not include the remaining lines (NULL check and the socket comparisons/close calls) because they do not introduce pointer-to-object declarations that could be const-qualified: the \"if (NULL == urh) return;\" is a control-flow check, not a pointer declaration or conversion. The socket comparisons (e.g. \"if (MHD_INVALID_SOCKET != urh->mhd.socket)\") and the calls to MHD_socket_close_chk_ operate on socket values (likely integer/socket handles), not on pointers to objects that could be const-qualified, so Rule 8.13 is not applicable to them. The selected fragments cover the function parameter and local pointer declaration/uses, the daemon/tls_session dereferences and the final free/assignment, which are the locations relevant to determining whether pointers could or should point to const-qualified types."
}