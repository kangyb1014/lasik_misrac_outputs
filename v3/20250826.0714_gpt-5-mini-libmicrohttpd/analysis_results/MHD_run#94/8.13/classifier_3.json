{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_run:\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_run (struct MHD_Daemon *daemon)\n{\n  if ( (daemon->shutdown) ||\n       MHD_D_IS_USING_THREADS_ (daemon) )\n    return MHD_NO;\n\n  (void) MHD_run_wait (daemon, 0);\n  return MHD_YES;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nMHD_run (struct MHD_Daemon *daemon)\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": true,
  "scenario": "The function parameter is declared as 'struct MHD_Daemon *daemon' but within the shown body the daemon is only inspected (daemon->shutdown) and passed on to MHD_run_wait. If MHD_run and the called functions do not modify the pointed-to object (i.e. MHD_run_wait can accept a 'const struct MHD_Daemon *'), then the parameter should be declared 'const struct MHD_Daemon *daemon'. As written (no const), this violates MISRA C 2023 Rule 8.13."
}