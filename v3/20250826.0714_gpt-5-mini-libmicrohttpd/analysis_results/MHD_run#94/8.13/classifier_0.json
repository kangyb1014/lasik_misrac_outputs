{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_run:\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_run (struct MHD_Daemon *daemon)\n{\n  if ( (daemon->shutdown) ||\n       MHD_D_IS_USING_THREADS_ (daemon) )\n    return MHD_NO;\n\n  (void) MHD_run_wait (daemon, 0);\n  return MHD_YES;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\n(void) MHD_run_wait (daemon, 0);\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "The call site alone does not violate MISRA C 2023 Rule 8.13. Whether there is a violation depends on the declaration/behavior of MHD_run_wait: if MHD_run_wait takes a non-const 'struct MHD_Daemon *' but does not modify the pointee, that would violate Rule 8.13 (the parameter should be 'const struct MHD_Daemon *'). If MHD_run_wait legitimately modifies the daemon, then the non-const parameter is required and no rule violation occurs."
}