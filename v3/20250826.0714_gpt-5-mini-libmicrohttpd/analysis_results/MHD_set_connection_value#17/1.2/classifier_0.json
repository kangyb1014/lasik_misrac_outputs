{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_set_connection_value:\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_set_connection_value (struct MHD_Connection *connection,\n                          enum MHD_ValueKind kind,\n                          const char *key,\n                          const char *value)\n{\n  return MHD_set_connection_value_n_nocheck_ (connection,\n                                              kind,\n                                              key,\n                                              NULL != key\n                                              ? strlen (key)\n                                              : 0,\n                                              value,\n                                              NULL != value\n                                              ? strlen (value)\n                                              : 0);\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\n_MHD_EXTERN\n```\nFocus on the above code fragment and judge whether it violates the rule 1.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "The token _MHD_EXTERN by itself is only a macro identifier. As given, it does not by itself show use of a compiler language extension, so no violation can be reported. A concrete violation would occur if the macro expands to a compiler-specific extension documented as such \u2014 for example: #define _MHD_EXTERN __declspec(dllexport) (MSVC) or #define _MHD_EXTERN __attribute__((visibility(\"default\"))) (GCC/Clang). In those cases Rule 1.2 would be violated."
}