{
  "user_message": "An agent A claimed that the following MHD_digest_auth_calc_userhash code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_digest_auth_calc_userhash.\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_digest_auth_calc_userhash (enum MHD_DigestAuthAlgo3 algo3,\n                               const char *username,\n                               const char *realm,\n                               void *userhash_bin,\n                               size_t bin_buf_size)\n{\n  struct DigestAlgorithm da;\n  enum MHD_Result ret;\n\n  if (! digest_init_one_time (&da, get_base_digest_algo (algo3)))\n    return MHD_NO;\n  if (digest_get_size (&da) > bin_buf_size)\n    ret = MHD_NO;\n  else\n  {\n    calc_userhash (&da,\n                   username,\n                   strlen (username),\n                   realm,\n                   strlen (realm),\n                   userhash_bin);\n    ret = MHD_YES;\n\n#ifdef MHD_DIGEST_HAS_EXT_ERROR\n    if (digest_ext_error (&da))\n      ret = MHD_NO;\n#endif /* MHD_DIGEST_HAS_EXT_ERROR */\n  }\n  digest_deinit (&da);\n\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIf the callee calc_userhash is declared to take non-const character pointers (e.g. char *username, char *realm) then this call violates Rule 8.13: the input pointers are const-qualified in the caller but are not declared const in the callee, so the pointer types are not const-qualified where possible. If, instead, calc_userhash is declared to take const char * for those parameters, then there is no violation.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The report is not correct. In the shown function the input parameters username and realm are declared as const char * (they are already const-qualified), so MHD_digest_auth_calc_userhash itself does not violate MISRA C 2023 Rule 8.13. Rule 8.13 concerns pointer declarations that could be const-qualified; the caller has done that.\n\nIf calc_userhash were declared to take non-const char * for those parameters, that would be a problem in calc_userhash's declaration (it would fail the intent of 8.13), not in the caller. Moreover, passing a const char * to a function declared to take char * is a qualifier-discarding conversion and is not permitted by standard C without an explicit cast (so the code as shown would not compile without a cast or an incompatible prototype). Therefore the alleged violation would be in the callee's prototype/definition, not in MHD_digest_auth_calc_userhash. To fix, ensure calc_userhash declares those parameters as const char * if it does not modify the pointed-to data."
}