{
  "user_message": "An agent A claimed that the following uri_logger_cb code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of uri_logger_cb.\n```c\nstatic void *\nuri_logger_cb (void *cls,\n               const char *uri)\n{\n  struct timeval *tv = malloc (sizeof (struct timeval));\n  (void) cls; /* Unused. Silent compiler warning. */\n  (void) uri; /* Unused. Silent compiler warning. */\n\n  if (NULL != tv)\n    gettimeofday (tv, NULL);\n  return tv;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'cls' is declared as 'void *cls' but is not used or modified in the function (it is only cast to void). Per MISRA C 2023 Rule 8.13, the pointer should be const-qualified when possible \u2014 e.g. 'const void *cls'. This is a violation unless the function must match an external/non\u2011modifiable callback prototype that requires a non\u2011const 'void *'.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. Rule 8.13 says a pointer parameter should be const-qualified when it is not used to modify the pointed-to object. In the shown code the parameter cls is not used or modified (it is merely cast to void to suppress an unused warning) and therefore could and should be declared as const void *cls. The only valid justification for keeping it non-const is if this function must match a callback prototype that is fixed elsewhere and requires a non-const void * parameter; that exception is not apparent from the snippet. Recommended fixes: change the prototype to static void *uri_logger_cb (const void *cls, const char *uri) (and remove the (void) cls), or document/justify the non-const signature if required to match an external API."
}