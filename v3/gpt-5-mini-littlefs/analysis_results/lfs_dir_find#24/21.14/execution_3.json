{
  "result": "success",
  "message": "ENTER lfs_dir_find: path=\n  initial name ptr=0x555fa6df606c, first_char='b' (0x62)\n  initial tag=0x002ffc00, root[0]=0x00000001, root[1]=0x00000000\nloop: name_ptr=0x555fa6df606c namelen=9 current=\n  name[0..namelen]='breakfast'\n  check single '.' -> namelen=9\n  check double '..' -> namelen=9\n  updating path pointer to 0x555fa6df606c, name='breakfast'\n  calling lfs_dir_fetchmatch name='breakfast' namelen=9\n  returned from lfs_dir_fetchmatch -> tag=0x00000000 id=0x0001\nEXIT lfs_dir_find: no entry and not split -> LFS_ERR_NOENT\nENTER lfs_dir_find: path=\n  initial name ptr=0x7fff1bf89518, first_char='b' (0x62)\n  initial tag=0x002ffc00, root[0]=0x00000001, root[1]=0x00000000\nloop: name_ptr=0x7fff1bf89518 namelen=9 current=\n  name[0..namelen]='breakfast'\n  check single '.' -> namelen=9\n  check double '..' -> namelen=9\n  suffix loop: suffix_ptr=0x7fff1bf89522 sufflen=5 depth=1 suffix[0..sufflen]='bacon'\n    suffix is normal name, increment depth -> 2\n  updating path pointer to 0x7fff1bf89518, name='breakfast'\n  calling lfs_dir_fetchmatch name='breakfast' namelen=9\n  returned from lfs_dir_fetchmatch -> tag=0x00200409 id=0x0001\n  match found -> tag=0x00200409\n  advancing name by namelen=9 from 0x7fff1bf89518 to 0x7fff1bf89521\nloop: name_ptr=0x7fff1bf89522 namelen=5 current=\n  name[0..namelen]='bacon'\n  check single '.' -> namelen=5\n  check double '..' -> namelen=5\n  updating path pointer to 0x7fff1bf89522, name='bacon'\n  calling lfs_dir_get with tag id=0x1\n  lfs_dir_get success, dir->tail[0]=0x00000688 dir->tail[1]=0x00000689\n  calling lfs_dir_fetchmatch name='bacon' namelen=5\n  returned from lfs_dir_fetchmatch -> tag=0x00000000 id=0x0000\nEXIT lfs_dir_find: no entry and not split -> LFS_ERR_NOENT\nENTER lfs_dir_find: path=\n  initial name ptr=0x7fff1bf89518, first_char='b' (0x62)\n  initial tag=0x002ffc00, root[0]=0x00000001, root[1]=0x00000000\nloop: name_ptr=0x7fff1bf89518 namelen=9 current=\n  name[0..namelen]='breakfast'\n  check single '.' -> namelen=9\n  check double '..' -> namelen=9\n  suffix loop: suffix_ptr=0x7fff1bf89522 sufflen=4 depth=1 suffix[0..sufflen]='eggs'\n    suffix is normal name, increment depth -> 2\n  updating path pointer to 0x7fff1bf89518, name='breakfast'\n  calling lfs_dir_fetchmatch name='breakfast' namelen=9\n  returned from lfs_dir_fetchmatch -> tag=0x00200409 id=0x0001\n  match found -> tag=0x00200409\n  advancing name by namelen=9 from 0x7fff1bf89518 to 0x7fff1bf89521\nloop: name_ptr=0x7fff1bf89522 namelen=4 current=\n  name[0..namelen]='eggs'\n  check single '.' -> namelen=4\n  check double '..' -> namelen=4\n  updating path pointer to 0x7fff1bf89522, name='eggs'\n  calling lfs_dir_get with tag id=0x1\n  lfs_dir_get success, dir->tail[0]=0x00000688 dir->tail[1]=0x00000689\n  calling lfs_dir_fetchmatch name='eggs' namelen=4\n  returned from lfs_dir_fetchmatch -> tag=0x00000000 id=0x0001\nEXIT lfs_dir_find: no entry and not split -> LFS_ERR_NOENT\nENTER lfs_dir_find: path=\n  initial name ptr=0x7fff1bf89518, first_char='b' (0x62)\n  initial tag=0x002ffc00, root[0]=0x00000001, root[1]=0x00000000\nloop: name_ptr=0x7fff1bf89518 namelen=9 current=\n  name[0..namelen]='breakfast'\n  check single '.' -> namelen=9\n  check double '..' -> namelen=9\n  suffix loop: suffix_ptr=0x7fff1bf89522 sufflen=8 depth=1 suffix[0..sufflen]='pancakes'\n    suffix is normal name, increment depth -> 2\n  updating path pointer to 0x7fff1bf89518, name='breakfast'\n  calling lfs_dir_fetchmatch name='breakfast' namelen=9\n  returned from lfs_dir_fetchmatch -> tag=0x00200409 id=0x0001\n  match found -> tag=0x00200409\n  advancing name by namelen=9 from 0x7fff1bf89518 to 0x7fff1bf89521\nloop: name_ptr=0x7fff1bf89522 namelen=8 current=\n  name[0..namelen]='pancakes'\n  check single '.' -> namelen=8\n  check double '..' -> namelen=8\n  updating path pointer to 0x7fff1bf89522, name='pancakes'\n  calling lfs_dir_get with tag id=0x1\n  lfs_dir_get success, dir->tail[0]=0x00000688 dir->tail[1]=0x00000689\n  calling lfs_dir_fetchmatch name='pancakes' namelen=8\n  returned from lfs_dir_fetchmatch -> tag=0x00000000 id=0x0002\nEXIT lfs_dir_find: no entry and not split -> LFS_ERR_NOENT"
}