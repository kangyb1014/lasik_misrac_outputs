{
  "result": "success",
  "message": "lfs_bd_cmp start: block=1 off=8 size=8 hint=8\nloop_entry: i=0 diff_before=0\ndiff_assigned: diff=8 (size-i=8, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=0 diff=8\nmemcmp returned res=0 for i=0 diff=8\nabout_to_increment: i=0 will be incremented by diff=8\nlfs_bd_cmp end: returning LFS_CMP_EQ\nlfs_bd_cmp start: block=1 off=8 size=8 hint=8\nloop_entry: i=0 diff_before=0\ndiff_assigned: diff=8 (size-i=8, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=0 diff=8\nmemcmp returned res=0 for i=0 diff=8\nabout_to_increment: i=0 will be incremented by diff=8\nlfs_bd_cmp end: returning LFS_CMP_EQ\nlfs_bd_cmp start: block=1 off=72 size=9 hint=9\nloop_entry: i=0 diff_before=0\ndiff_assigned: diff=8 (size-i=9, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=0 diff=8\nmemcmp returned res=0 for i=0 diff=8\nabout_to_increment: i=0 will be incremented by diff=8\nloop_entry: i=8 diff_before=8\ndiff_assigned: diff=1 (size-i=1, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=8 diff=1\nmemcmp returned res=0 for i=8 diff=1\nabout_to_increment: i=8 will be incremented by diff=1\nlfs_bd_cmp end: returning LFS_CMP_EQ\nlfs_bd_cmp start: block=1 off=72 size=9 hint=9\nloop_entry: i=0 diff_before=0\ndiff_assigned: diff=8 (size-i=9, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=0 diff=8\nmemcmp returned res=0 for i=0 diff=8\nabout_to_increment: i=0 will be incremented by diff=8\nloop_entry: i=8 diff_before=8\ndiff_assigned: diff=1 (size-i=1, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=8 diff=1\nmemcmp returned res=0 for i=8 diff=1\nabout_to_increment: i=8 will be incremented by diff=1\nlfs_bd_cmp end: returning LFS_CMP_EQ\nlfs_bd_cmp start: block=1672 off=40 size=4 hint=4\nloop_entry: i=0 diff_before=0\ndiff_assigned: diff=4 (size-i=4, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=0 diff=4\nmemcmp returned res=-3 for i=0 diff=4\nreturning cmp result=1 (res=-3)\nlfs_bd_cmp start: block=1 off=72 size=9 hint=9\nloop_entry: i=0 diff_before=0\ndiff_assigned: diff=8 (size-i=9, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=0 diff=8\nmemcmp returned res=0 for i=0 diff=8\nabout_to_increment: i=0 will be incremented by diff=8\nloop_entry: i=8 diff_before=8\ndiff_assigned: diff=1 (size-i=1, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=8 diff=1\nmemcmp returned res=0 for i=8 diff=1\nabout_to_increment: i=8 will be incremented by diff=1\nlfs_bd_cmp end: returning LFS_CMP_EQ\nlfs_bd_cmp start: block=1672 off=40 size=5 hint=5\nloop_entry: i=0 diff_before=0\ndiff_assigned: diff=5 (size-i=5, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=0 diff=5\nmemcmp returned res=-14 for i=0 diff=5\nreturning cmp result=1 (res=-14)\nlfs_bd_cmp start: block=1672 off=88 size=4 hint=4\nloop_entry: i=0 diff_before=0\ndiff_assigned: diff=4 (size-i=4, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=0 diff=4\nmemcmp returned res=-11 for i=0 diff=4\nreturning cmp result=1 (res=-11)\nlfs_bd_cmp start: block=1283 off=0 size=64 hint=64\nloop_entry: i=0 diff_before=0\ndiff_assigned: diff=8 (size-i=64, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=0 diff=8\nmemcmp returned res=0 for i=0 diff=8\nabout_to_increment: i=0 will be incremented by diff=8\nloop_entry: i=8 diff_before=8\ndiff_assigned: diff=8 (size-i=56, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=8 diff=8\nmemcmp returned res=0 for i=8 diff=8\nabout_to_increment: i=8 will be incremented by diff=8\nloop_entry: i=16 diff_before=8\ndiff_assigned: diff=8 (size-i=48, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=16 diff=8\nmemcmp returned res=0 for i=16 diff=8\nabout_to_increment: i=16 will be incremented by diff=8\nloop_entry: i=24 diff_before=8\ndiff_assigned: diff=8 (size-i=40, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=24 diff=8\nmemcmp returned res=0 for i=24 diff=8\nabout_to_increment: i=24 will be incremented by diff=8\nloop_entry: i=32 diff_before=8\ndiff_assigned: diff=8 (size-i=32, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=32 diff=8\nmemcmp returned res=0 for i=32 diff=8\nabout_to_increment: i=32 will be incremented by diff=8\nloop_entry: i=40 diff_before=8\ndiff_assigned: diff=8 (size-i=24, sizeof(dat)=8)\nlfs_bd_read returned err=0 for i=40 diff=8\nmemcmp returned res="
}