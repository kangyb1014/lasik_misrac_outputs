{
  "user_message": "An agent A claimed that the following OS_ObjectIdFindNextMatch code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of OS_ObjectIdFindNextMatch.\n```c\nint32 OS_ObjectIdFindNextMatch(OS_ObjectMatchFunc_t MatchFunc, void *arg, OS_object_token_t *token)\n{\n    int32               return_code;\n    uint32              obj_count;\n    OS_common_record_t *base;\n    OS_common_record_t *record;\n\n    return_code   = OS_ERR_NAME_NOT_FOUND;\n    base          = &OS_common_table[OS_GetBaseForObjectType(token->obj_type)];\n    obj_count     = OS_GetMaxForObjectType(token->obj_type);\n    token->obj_id = OS_OBJECT_ID_UNDEFINED;\n\n    while (true)\n    {\n        ++token->obj_idx;\n\n        if (token->obj_idx >= obj_count)\n        {\n            break;\n        }\n\n        record = OS_OBJECT_TABLE_GET(base, *token);\n\n        if (OS_ObjectIdDefined(record->active_id) && MatchFunc(arg, token, record))\n        {\n            return_code   = OS_SUCCESS;\n            token->obj_id = record->active_id;\n            break;\n        }\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe local pointer variable 'record' is declared as OS_common_record_t * but is only used for read-only access (used to read record->active_id and passed to MatchFunc which expects a const OS_common_record_t *). Therefore the pointer could and should be declared as const OS_common_record_t *; additionally the OS_OBJECT_TABLE_GET macro returns a non-const pointer. This violates MISRA C 2023 Rule 8.13 (a pointer should point to a const-qualified type whenever possible).\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\nstart: record=0x55dced068300 obj_idx=0 obj_count=0 obj_id=0 obj_type=0 match=-1\nend_loop_out_of_range: record=(nil) obj_idx=1 obj_count=0 obj_id=0 obj_type=0 match=-1\nstart: record=0x55dced068300 obj_idx=0 obj_count=0 obj_id=0 obj_type=0 match=-1\nend_loop_out_of_range: record=(nil) obj_idx=1 obj_count=0 obj_id=0 obj_type=0 match=-1\nstart: record=0x55dced068300 obj_idx=0 obj_count=0 obj_id=0 obj_type=0 match=-1\nend_loop_out_of_range: record=(nil) obj_idx=1 obj_count=0 obj_id=0 obj_type=0 match=-1\nstart: record=0x55dced068300 obj_idx=0 obj_count=0 obj_id=0 obj_type=0 match=-1\nend_loop_out_of_range: record=(nil) obj_idx=1 obj_count=0 obj_id=0 obj_type=0 match=-1\nstart: record=0x55dced068300 obj_idx=0 obj_count=0 obj_id=0 obj_type=0 match=-1\nend_loop_out_of_range: record=(nil) obj_idx=1 obj_count=0 obj_id=0 obj_type=0 match=-1\nstart: record=0x55dced068300 obj_idx=0 obj_count=0 obj_id=0 obj_type=0 match=-1\nend_loop_out_of_range: record=(nil) obj_idx=1 obj_count=0 obj_id=0 obj_type=0 match=-1\nstart: record=0x55dced068300 obj_idx=0 obj_count=0 obj_id=0 obj_type=0 match=-1\nend_loop_out_of_range: record=(nil) obj_idx=1 obj_count=0 obj_id=0 obj_type=0 match=-1\nstart: record=0x55dced068300 obj_idx=0 obj_count=0 obj_id=0 obj_type=0 match=-1\nend_loop_out_of_range: record=(nil) obj_idx=1 obj_count=0 obj_id=0 obj_type=0 match=-1\nstart: record=0x55dced069cf8 obj_idx=4294967295 obj_count=14 obj_id=0 obj_type=11 match=-1\nchecked_record_ptr: record=0x55dced069cf8 obj_idx=0 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069cf8 obj_idx=0 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069d10 obj_idx=1 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069d10 obj_idx=1 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069d28 obj_idx=2 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069d28 obj_idx=2 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069d40 obj_idx=3 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069d40 obj_idx=3 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069d58 obj_idx=4 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069d58 obj_idx=4 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069d70 obj_idx=5 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069d70 obj_idx=5 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069d88 obj_idx=6 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069d88 obj_idx=6 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069da0 obj_idx=7 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069da0 obj_idx=7 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069db8 obj_idx=8 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069db8 obj_idx=8 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069dd0 obj_idx=9 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069dd0 obj_idx=9 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069de8 obj_idx=10 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069de8 obj_idx=10 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069e00 obj_idx=11 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069e00 obj_idx=11 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069e18 obj_idx=12 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069e18 obj_idx=12 obj_count=14 obj_id=0 obj_type=11 match=0\nchecked_record_ptr: record=0x55dced069e30 obj_idx=13 obj_count=14 obj_id=0 obj_type=11 match=-1\nundefined_active_id: record=0x55dced069e30 obj_idx=13 obj_count=14 obj_id=0 obj_type=11 match=0\ne\n</execution_log>\n<additional code>Here are the definitions of symbols that are close to the target function OS_ObjectIdFindNextMatch:\ntypedef bool (*OS_ObjectMatchFunc_t)(void *ref, const OS_object_token_t *token, const OS_common_record_t *obj)\n...\ntypedef struct OS_object_token OS_object_token_t\n...\ntypedef struct OS_common_record OS_common_record_t\n...\nstatic OS_common_record_t OS_common_table[OS_MAX_TOTAL_RECORDS]\n...\n#define OS_OBJECT_TABLE_GET(tbl, tok) (&tbl[OS_ObjectIndexFromToken(&(tok))])\n</additional code>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Correct. In the shown function the local pointer variable record is only used for read-only access: record->active_id is read and record is passed to MatchFunc which expects a const OS_common_record_t *. There are no writes through record in this function, so it can and should be declared as const OS_common_record_t *record. MISRA C:2023 Rule 8.13 requires pointers to point to a const-qualified type whenever possible, so the current declaration (OS_common_record_t *record) violates that requirement. The OS_OBJECT_TABLE_GET macro returning a non-const pointer does not prevent making the local pointer const (assigning a non-const T* to a const T* is allowed without a cast). Recommended fix: change the declaration to const OS_common_record_t *record (or change the macro/array to yield const pointers where appropriate)."
}