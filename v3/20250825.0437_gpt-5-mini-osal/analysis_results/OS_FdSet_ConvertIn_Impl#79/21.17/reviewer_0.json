{
  "user_message": "An agent A claimed that the following OS_FdSet_ConvertIn_Impl code violates the MISRA C 2023 rule 21.17.\n<misra_rule>\nMISRA C 2023 Rule 21.17 is Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<target_code>\nHere is the original code of OS_FdSet_ConvertIn_Impl.\n```c\nstatic int32 OS_FdSet_ConvertIn_Impl(int *os_maxfd, fd_set *os_set, const OS_FdSet *OSAL_set)\n{\n    size_t       offset;\n    size_t       bit;\n    osal_index_t id;\n    uint8        objids;\n    int          osfd;\n    int32        status;\n\n    status = OS_SUCCESS;\n    for (offset = 0; offset < sizeof(OSAL_set->object_ids); ++offset)\n    {\n        objids = OSAL_set->object_ids[offset];\n        bit    = 0;\n        while (objids != 0)\n        {\n            id = OSAL_INDEX_C((offset * 8) + bit);\n            if ((objids & 0x01) != 0 && id < OS_MAX_NUM_OPEN_FILES)\n            {\n                osfd = OS_impl_filehandle_table[id].fd;\n                if (osfd >= 0)\n                {\n                    if (osfd >= FD_SETSIZE || !OS_impl_filehandle_table[id].selectable)\n                    {\n                        /* out of range of select() implementation */\n                        status = OS_ERR_OPERATION_NOT_SUPPORTED;\n                    }\n                    else\n                    {\n                        FD_SET(osfd, os_set);\n                        if (osfd > *os_maxfd)\n                        {\n                            *os_maxfd = osfd;\n                        }\n                    }\n                }\n            }\n            ++bit;\n            objids >>= 1;\n        }\n    }\n\n    return status;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe call strlen(string) can read bytes until a NUL byte is found; if 'string' is NULL or points to a buffer that is not NUL-terminated within its allocated bounds (for example: char buf[4] = {'a','b','c','d'}; strlen(buf);), strlen will access beyond the object bounds. Because the fragment does not show any guarantee or check that 'string' is a valid NUL-terminated object, this use may violate MISRA C 2023 Rule 21.17.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\nENTRY: offset=0 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a21 table_entry=(nil)\nBYTE_SCAN_START: offset=0 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a21 table_entry=(nil)\nBYTE_SCAN_END: offset=0 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a21 table_entry=(nil)\nBYTE_SCAN_START: offset=1 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a22 table_entry=(nil)\nBYTE_SCAN_END: offset=1 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a22 table_entry=(nil)\nBYTE_SCAN_START: offset=2 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a23 table_entry=(nil)\nBYTE_SCAN_END: offset=2 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a23 table_entry=(nil)\nBYTE_SCAN_START: offset=3 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a24 table_entry=(nil)\nBYTE_SCAN_END: offset=3 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a24 table_entry=(nil)\nBYTE_SCAN_START: offset=4 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a25 table_entry=(nil)\nBYTE_SCAN_END: offset=4 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a25 table_entry=(nil)\nBYTE_SCAN_START: offset=5 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a26 table_entry=(nil)\nBYTE_SCAN_END: offset=5 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a26 table_entry=(nil)\nBYTE_SCAN_START: offset=6 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a27 table_entry=(nil)\nBYTE_SCAN_END: offset=6 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a27 table_entry=(nil)\nEXIT: offset=0 bit=0 objids=0x00 id=0 osfd=-1 os_maxfd=*-1 status=0 objids_ptr=0x7ffc4b2f6a21 table_entry=(nil)\n\n</execution_log>\n<additional code>Here are the definitions of symbols that are close to the target function OS_FdSet_ConvertIn_Impl:\nsize_t      length = strlen(string)\n</additional code>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The reported violation is not correct. MISRA C 2023 Rule 21.17 concerns the use of functions from <string.h> (memcpy, strlen, strcpy, etc.) potentially accessing beyond the bounds of their pointed-to objects. The presented OS_FdSet_ConvertIn_Impl function contains no calls to any <string.h> functions \u2014 it simply iterates over the bytes of OSAL_set->object_ids (using sizeof to bound the loop), tests bits, and uses FD_SET. Therefore there is no strlen (or other string function) in the shown function that could read past an object\u2019s bounds, and rule 21.17 does not apply to this function as written. The scenario that cites strlen(string) is unrelated to the target code; if such a strlen existed elsewhere and the pointer/terminator guarantees were missing, that would potentially violate 21.17, but that is not the case here."
}