{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.1 is: A project shall not contain unreachable code.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of OS_NetworkGetHostName_Impl:\n```c\nint32 OS_NetworkGetHostName_Impl(char *host_name, size_t name_len)\n{\n    int32 return_code;\n\n    if (gethostname(host_name, name_len) < 0)\n    {\n        return_code = OS_ERROR;\n    }\n    else\n    {\n        /*\n         * posix does not say that the name is always\n         * null terminated, so its worthwhile to ensure it\n         */\n        host_name[name_len - 1] = 0;\n        return_code             = OS_SUCCESS;\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function OS_NetworkGetHostName_Impl:\n#define OS_ERROR (-1)\n...\n#define OS_SUCCESS (0)\n...\nint32 OS_NetworkGetHostName(char *host_name, size_t name_len)\n{\n    int32 return_code;\n\n    /* Check parameters */\n    OS_CHECK_POINTER(host_name);\n    OS_CHECK_SIZE(name_len);\n\n    /* delegate to low-level API */\n    return_code = OS_NetworkGetHostName_Impl(host_name, name_len);\n    if (return_code != OS_SUCCESS)\n    {\n        /* return an empty string on failure, just in case */\n        host_name[0] = 0;\n    }\n\n    return return_code;\n}\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nif (gethostname(host_name, name_len) < 0)\n    {\n        return_code = OS_ERROR;\n    }\n    else\n    {\n        /*\n         * posix does not say that the name is always\n         * null terminated, so its worthwhile to ensure it\n         */\n        host_name[name_len - 1] = 0;\n        return_code             = OS_SUCCESS;\n    }\n```\nFocus on the above code fragment and judge whether it violates the rule 2.1 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No unreachable code is present. The if/else branches are both reachable depending on the return value of gethostname. (Note: there is a potential out-of-bounds write if name_len == 0, but that is undefined behavior, not an instance of unreachable code. The wrapper shown performs size checks, so this fragment itself does not contain unreachable code.)"
}