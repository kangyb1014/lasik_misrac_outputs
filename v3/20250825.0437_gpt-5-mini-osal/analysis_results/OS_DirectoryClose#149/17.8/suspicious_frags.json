{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 17.8 is: A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of OS_DirectoryClose:\n```c\nint32 OS_DirectoryClose(osal_id_t dir_id)\n{\n    OS_object_token_t token;\n    int32             return_code;\n\n    /* Make sure the file descriptor is legit before using it */\n    return_code = OS_ObjectIdGetById(OS_LOCK_MODE_EXCLUSIVE, LOCAL_OBJID_TYPE, dir_id, &token);\n    if (return_code == OS_SUCCESS)\n    {\n        return_code = OS_DirClose_Impl(&token);\n\n        /* Complete the operation via the common routine */\n        return_code = OS_ObjectIdFinalizeDelete(return_code, &token);\n    }\n\n    return return_code;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "return_code = OS_DirClose_Impl(&token);",
    "return_code = OS_ObjectIdFinalizeDelete(return_code, &token);",
    "return_code = OS_ObjectIdGetById(OS_LOCK_MODE_EXCLUSIVE, LOCAL_OBJID_TYPE, dir_id, &token);"
  ],
  "explanation": "The function itself has a single parameter (dir_id) which is not modified in this body \u2014 only local variables (token, return_code) are assigned, so those assignments are not violations. The only places that require investigation under MISRA C 2023 Rule 17.8 are the calls that pass a pointer (&token) to other functions: these calls should be checked to ensure the callee implementations do not modify their pointer-parameter variables (the rule forbids modifying a function parameter itself). Modifying the object referred to by a pointer parameter (i.e., *parameter) is permitted, so local modifications of token's contents are not in themselves suspicious. No other fragments in this function (local assignments/declarations/return) modify the function parameter and therefore need not be investigated for Rule 17.8."
}