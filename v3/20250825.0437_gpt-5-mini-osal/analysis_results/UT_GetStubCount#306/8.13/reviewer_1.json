{
  "user_message": "An agent A claimed that the following UT_GetStubCount code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of UT_GetStubCount.\n```c\nuint32 UT_GetStubCount(UT_EntryKey_t FuncKey)\n{\n    UT_StubTableEntry_t *StubPtr;\n    uint32               Count;\n\n    StubPtr = UT_GetStubEntry(FuncKey, UT_ENTRYTYPE_COUNTER);\n    if (StubPtr != NULL)\n    {\n        Count = StubPtr->Data.Rc.Count;\n    }\n    else\n    {\n        Count = 0;\n    }\n\n    return Count;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe local pointer StubPtr is declared as UT_StubTableEntry_t * but is only used for read access (reading StubPtr->Data.Rc.Count). According to MISRA C 2023 Rule 8.13 it should be const-qualified when possible (e.g. const UT_StubTableEntry_t *StubPtr). Therefore the code as shown violates the rule.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\nUT_GetStubCount called: FuncKey=94158985213735\nUT_GetStubEntry returned StubPtr=(nil)\nStubPtr is NULL, Count set to 0\nUT_GetStubCount returning Count = 0\n\nUT_GetStubCount called: FuncKey=94158985213735\nUT_GetStubEntry returned StubPtr=0x55a318df3d60\nRead Count = 1 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 1\n\nUT_GetStubCount called: FuncKey=94158985212559\nUT_GetStubEntry returned StubPtr=0x55a318df51a0\nRead Count = 1 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 1\n\nUT_GetStubCount called: FuncKey=93998732136889\nUT_GetStubEntry returned StubPtr=0x557dc90bfdc0\nRead Count = 1 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 1\n\nUT_GetStubCount called: FuncKey=93998732136889\nUT_GetStubEntry returned StubPtr=(nil)\nStubPtr is NULL, Count set to 0\nUT_GetStubCount returning Count = 0\n\nUT_GetStubCount called: FuncKey=93998732136889\nUT_GetStubEntry returned StubPtr=(nil)\nStubPtr is NULL, Count set to 0\nUT_GetStubCount returning Count = 0\n\nUT_GetStubCount called: FuncKey=94457113065289\nUT_GetStubEntry returned StubPtr=0x55e882ad5720\nRead Count = 1 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 1\n\nUT_GetStubCount called: FuncKey=94457113065289\nUT_GetStubEntry returned StubPtr=0x55e882ad5720\nRead Count = 1 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 1\n\nUT_GetStubCount called: FuncKey=94457113065386\nUT_GetStubEntry returned StubPtr=0x55e882ace460\nRead Count = 1 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 1\n\nUT_GetStubCount called: FuncKey=94457113065386\nUT_GetStubEntry returned StubPtr=0x55e882ace460\nRead Count = 1 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 1\n\nUT_GetStubCount called: FuncKey=94643605445999\nUT_GetStubEntry returned StubPtr=0x5613ee7d6fc0\nRead Count = 1 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 1\n\nUT_GetStubCount called: FuncKey=94493501615413\nUT_GetStubEntry returned StubPtr=(nil)\nStubPtr is NULL, Count set to 0\nUT_GetStubCount returning Count = 0\n\nUT_GetStubCount called: FuncKey=94493501615413\nUT_GetStubEntry returned StubPtr=0x55f0fb9b57a0\nRead Count = 1 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 1\n\nUT_GetStubCount called: FuncKey=94493501615413\nUT_GetStubEntry returned StubPtr=0x55f0fb9b57a0\nRead Count = 2 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 2\n\nUT_GetStubCount called: FuncKey=94493501616273\nUT_GetStubEntry returned StubPtr=(nil)\nStubPtr is NULL, Count set to 0\nUT_GetStubCount returning Count = 0\n\nUT_GetStubCount called: FuncKey=94493501619971\nUT_GetStubEntry returned StubPtr=0x55f0fb9b4000\nRead Count = 1 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 1\n\nUT_GetStubCount called: FuncKey=94493501620237\nUT_GetStubEntry returned StubPtr=0x55f0fb9b8b60\nRead Count = 1 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 1\n\nUT_GetStubCount called: FuncKey=94493501615413\nUT_GetStubEntry returned StubPtr=0x55f0fb9b57a0\nRead Count = 2 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 2\n\nUT_GetStubCount called: FuncKey=94493501616273\nUT_GetStubEntry returned StubPtr=(nil)\nStubPtr is NULL, Count set to 0\nUT_GetStubCount returning Count = 0\n\nUT_GetStubCount called: FuncKey=94493501619971\nUT_GetStubEntry returned StubPtr=0x55f0fb9b4000\nRead Count = 2 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 2\n\nUT_GetStubCount called: FuncKey=94493501620237\nUT_GetStubEntry returned StubPtr=0x55f0fb9b8b60\nRead Count = 2 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 2\n\nUT_GetStubCount called: FuncKey=94493501615413\nUT_GetStubEntry returned StubPtr=0x55f0fb9b57a0\nRead Count = 2 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 2\n\nUT_GetStubCount called: FuncKey=94493501615413\nUT_GetStubEntry returned StubPtr=0x55f0fb9b57a0\nRead Count = 3 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 3\n\nUT_GetStubCount called: FuncKey=94493501616273\nUT_GetStubEntry returned StubPtr=0x55f0fb9b9e80\nRead Count = 1 from StubPtr->Data.Rc.Count\nUT_GetStubCount returning Count = 1\n\nUT_GetStubCount \n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "MISRA C 2023 Rule 8.13 recommends that a pointer be qualified with const when it is only used to access data for reading. In the function UT_GetStubCount the local pointer StubPtr is declared as UT_StubTableEntry_t * but it is only used to read StubPtr->Data.Rc.Count (no writes through StubPtr). The execution log also shows only read accesses and NULL checks. Therefore the pointer can and should be declared const UT_StubTableEntry_t *StubPtr to satisfy the rule. The report from agent A is correct (unless there is an unseen need elsewhere in this function to mutate the pointed object through StubPtr, which is not the case in the provided code)."
}