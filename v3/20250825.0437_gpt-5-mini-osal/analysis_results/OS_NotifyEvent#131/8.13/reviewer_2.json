{
  "user_message": "An agent A claimed that the following OS_NotifyEvent code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of OS_NotifyEvent.\n```c\nint32 OS_NotifyEvent(OS_Event_t event, osal_id_t object_id, void *data)\n{\n    int32 status;\n\n    if (OS_SharedGlobalVars.EventHandler != NULL)\n    {\n        status = OS_SharedGlobalVars.EventHandler(event, object_id, data);\n    }\n    else\n    {\n        status = OS_SUCCESS;\n    }\n\n    return status;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe call passes the parameter 'data' declared as void * (non-const) to OS_SharedGlobalVars.EventHandler. If the event handler does not need to modify the pointed-to object, the pointer should be const-qualified (e.g. const void *), so both OS_NotifyEvent's parameter and the EventHandler prototype should use const. As written, the lack of const qualification on 'data' (and on the EventHandler parameter) violates MISRA C 2023 Rule 8.13.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The report is not correct as stated. MISRA C:2023 Rule 8.13 recommends using const-qualified pointee types where possible, but whether a violation actually exists depends on the intended API and whether the data is actually (or potentially) modified. In the snippet OS_NotifyEvent merely forwards a void * parameter to an event-handler function pointer stored in OS_SharedGlobalVars. If the event-handler API requires a mutable pointer (i.e. it may modify the pointed-to data), then the non-const void * is appropriate and there is no violation. If, on the other hand, neither OS_NotifyEvent nor any possible event handler ever modify the pointee, then the API could be improved by using const void * and the checker would consider the current code non-conforming. From the provided code alone you cannot determine that the pointer should be const \u2014 the function pointer prototype and overall API contract must be considered. Therefore the claim that this snippet definitively violates Rule 8.13 is unsupported."
}