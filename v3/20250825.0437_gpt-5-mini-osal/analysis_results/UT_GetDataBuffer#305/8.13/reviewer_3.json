{
  "user_message": "An agent A claimed that the following UT_GetDataBuffer code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of UT_GetDataBuffer.\n```c\nvoid UT_GetDataBuffer(UT_EntryKey_t FuncKey, void **DataBuffer, size_t *MaxSize, size_t *Position)\n{\n    UT_StubTableEntry_t *StubPtr;\n    void *               ResultDataBuffer;\n    size_t               ResultMaxSize;\n    size_t               ResultPosition;\n\n    StubPtr = UT_GetStubEntry(FuncKey, UT_ENTRYTYPE_DATA_BUFFER);\n\n    if (StubPtr == NULL)\n    {\n        ResultDataBuffer = NULL;\n        ResultMaxSize    = 0;\n        ResultPosition   = 0;\n    }\n    else\n    {\n        ResultDataBuffer = StubPtr->Data.Buff.BasePtr;\n        ResultMaxSize    = StubPtr->Data.Buff.TotalSize;\n        ResultPosition   = StubPtr->Data.Buff.Position;\n    }\n\n    if (DataBuffer != NULL)\n    {\n        *DataBuffer = ResultDataBuffer;\n    }\n    if (MaxSize != NULL)\n    {\n        *MaxSize = ResultMaxSize;\n    }\n    if (Position != NULL)\n    {\n        *Position = ResultPosition;\n    }\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe out-parameter DataBuffer is declared as void ** and receives ResultDataBuffer (void *). The function only provides a pointer to data and does not modify the pointee through that pointer, so the pointed-to type should be const-qualified (e.g. const void **DataBuffer or const void * *). Therefore the code fails to qualify the pointee as const and violates MISRA C 2023 Rule 8.13. Suggested fix: change the parameter to const void **DataBuffer (and ResultDataBuffer to const void *) so the pointer points to a const-qualified type.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\n[UT_GetDataBuffer] entry (before lookup)\n  FuncKey=94845410250037\n  StubPtr=(nil)\n  ResultDataBuffer=(nil)\n  ResultMaxSize=0\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e20\n  MaxSize_ptr=0x7ffe97d87e28\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] after lookup (before assignments)\n  FuncKey=94845410250037\n  StubPtr=0x5642eaff7ee0\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e20\n  MaxSize_ptr=0x7ffe97d87e28\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] wrote DataBuffer\n  FuncKey=94845410250037\n  StubPtr=0x5642eaff7ee0\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e20\n  MaxSize_ptr=0x7ffe97d87e28\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] wrote MaxSize\n  FuncKey=94845410250037\n  StubPtr=0x5642eaff7ee0\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e20\n  MaxSize_ptr=0x7ffe97d87e28\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] exit\n  FuncKey=94845410250037\n  StubPtr=0x5642eaff7ee0\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e20\n  MaxSize_ptr=0x7ffe97d87e28\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] entry (before lookup)\n  FuncKey=94845410250037\n  StubPtr=(nil)\n  ResultDataBuffer=(nil)\n  ResultMaxSize=0\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e20\n  MaxSize_ptr=0x7ffe97d87e28\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] after lookup (before assignments)\n  FuncKey=94845410250037\n  StubPtr=0x5642eaff7ee0\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e20\n  MaxSize_ptr=0x7ffe97d87e28\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] wrote DataBuffer\n  FuncKey=94845410250037\n  StubPtr=0x5642eaff7ee0\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e20\n  MaxSize_ptr=0x7ffe97d87e28\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] wrote MaxSize\n  FuncKey=94845410250037\n  StubPtr=0x5642eaff7ee0\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e20\n  MaxSize_ptr=0x7ffe97d87e28\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] exit\n  FuncKey=94845410250037\n  StubPtr=0x5642eaff7ee0\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e20\n  MaxSize_ptr=0x7ffe97d87e28\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] entry (before lookup)\n  FuncKey=94845410250897\n  StubPtr=(nil)\n  ResultDataBuffer=(nil)\n  ResultMaxSize=0\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e38\n  MaxSize_ptr=0x7ffe97d87e40\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] after lookup (before assignments)\n  FuncKey=94845410250897\n  StubPtr=0x5642eafee700\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e38\n  MaxSize_ptr=0x7ffe97d87e40\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] wrote DataBuffer\n  FuncKey=94845410250897\n  StubPtr=0x5642eafee700\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e38\n  MaxSize_ptr=0x7ffe97d87e40\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] wrote MaxSize\n  FuncKey=94845410250897\n  StubPtr=0x5642eafee700\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e38\n  MaxSize_ptr=0x7ffe97d87e40\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] exit\n  FuncKey=94845410250897\n  StubPtr=0x5642eafee700\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e38\n  MaxSize_ptr=0x7ffe97d87e40\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] entry (before lookup)\n  FuncKey=94845410250037\n  StubPtr=(nil)\n  ResultDataBuffer=(nil)\n  ResultMaxSize=0\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87e20\n  MaxSize_ptr=0x7ffe97d87e28\n  Position_ptr=(nil)\n---\n[UT_GetDataBuffer] after lookup (before assignments)\n  FuncKey=94845410250037\n  StubPtr=0x5642eaff7ee0\n  ResultDataBuffer=0x5642eafddae0\n  ResultMaxSize=32768\n  ResultPosition=0\n  DataBuffer_ptr=0x7ffe97d87\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The report is not correct. MISRA C 2023 Rule 8.13 advocates that a pointer should point to a const-qualified type whenever that is feasible, but it is not an unconditional requirement to change every void ** to const void **. In this function the out-parameter DataBuffer receives a pointer value (a void *) that likely refers to modifiable memory the caller will use. Qualifying the pointed-to type as const (const void **) would change the API semantics (prevent callers from treating the pointed-to buffer as mutable) and would force callers to use casts if they have a void * variable. In addition, converting between void ** and const void ** is problematic in C (it can break const-correctness and is not implicitly allowed), so blindly changing the prototype to const void ** can introduce other type-safety issues and MISRA violations. The correct action is to qualification only when the underlying data is truly immutable (in which case the base pointer and the stub storage should be changed to const void *), otherwise the existing signature is appropriate. Therefore the claim that this specific code violates Rule 8.13 is not justified without additional evidence that the underlying data must be const."
}