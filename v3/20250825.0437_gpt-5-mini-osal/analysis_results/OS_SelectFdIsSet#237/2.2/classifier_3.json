{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of OS_SelectFdIsSet:\n```c\nbool OS_SelectFdIsSet(const OS_FdSet *Set, osal_id_t objid)\n{\n    int32        return_code;\n    osal_index_t local_id;\n\n    /* check parameters */\n    BUGCHECK(Set != NULL, false);\n\n    return_code = OS_ObjectIdToArrayIndex(OS_OBJECT_TYPE_OS_STREAM, objid, &local_id);\n    if (return_code != OS_SUCCESS)\n    {\n        return false;\n    }\n\n    /*\n     * Returns boolean for if the bit in the uint8 object_ids array that corresponds\n     * to the local_id is set where local_id >> 3 determines the array element,\n     * and the mask/shift checks the bit within that element.\n     */\n    return ((Set->object_ids[local_id >> 3] >> (local_id & 0x7)) & 0x1);\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nint32        return_code;\n```\nFocus on the above code fragment and judge whether it violates the rule 2.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "The local variable 'return_code' is used: it is assigned by OS_ObjectIdToArrayIndex and then tested in the subsequent if (return_code != OS_SUCCESS) branch. The declaration and use are not dead code \u2014 removing the variable or its use would alter program behavior \u2014 and the declaration itself is not an executed operation. Therefore no violation."
}