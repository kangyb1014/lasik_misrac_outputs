{
  "user_message": "An agent A claimed that the following OS_ObjectIdFindByName code violates the MISRA C 2023 rule 21.17.\n<misra_rule>\nMISRA C 2023 Rule 21.17 is Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<target_code>\nHere is the original code of OS_ObjectIdFindByName.\n```c\nint32 OS_ObjectIdFindByName(osal_objtype_t idtype, const char *name, osal_id_t *object_id)\n{\n    int32             return_code;\n    OS_object_token_t token;\n\n    /*\n     * As this is an internal-only function, calling it with NULL is allowed.\n     * This is required by the file/dir/socket API since these DO allow multiple\n     * instances of the same name.\n     */\n    ARGCHECK(name, OS_ERR_NAME_NOT_FOUND);\n    LENGTHCHECK(name, OS_MAX_API_NAME, OS_ERR_NAME_TOO_LONG);\n\n    return_code = OS_ObjectIdGetByName(OS_LOCK_MODE_GLOBAL, idtype, name, &token);\n    if (return_code == OS_SUCCESS)\n    {\n        *object_id = token.obj_id;\n\n        OS_ObjectIdRelease(&token);\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIf LENGTHCHECK(name, OS_MAX_API_NAME, ...) is implemented using an unbounded string.h routine such as strlen (or strcpy/strncpy/strcat/etc.) it can read past the end of the object referenced by name when name is not a NUL-terminated string or the buffer is shorter than expected. For example, if the caller passes a pointer to a char buffer that is not NUL-terminated (or points near the end of accessible memory), strlen(name) inside LENGTHCHECK will scan beyond the buffer bounds, violating Rule 21.17.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\n1756098677: OS_ObjectIdFindByName - ENTRY\n    idtype=4\n    name_ptr=0x7fffe932fd50\n    note=about to perform ARGCHECK and LENGTHCHECK\n\n1756098677: OS_ObjectIdFindByName - AFTER_ARGCHECK\n    idtype=4\n    name_ptr=0x7fffe932fd50\n\n1756098677: OS_ObjectIdFindByName - BEFORE_LENGTHCHECK\n    idtype=4\n    name_ptr=0x7fffe932fd50\n    note=invoking LENGTHCHECK with OS_MAX_API_NAME\n\n1756098677: OS_ObjectIdFindByName - ENTRY\n    idtype=4\n    name_ptr=0x556257fd26b1\n    note=about to perform ARGCHECK and LENGTHCHECK\n\n1756098677: OS_ObjectIdFindByName - AFTER_ARGCHECK\n    idtype=4\n    name_ptr=0x556257fd26b1\n\n1756098677: OS_ObjectIdFindByName - BEFORE_LENGTHCHECK\n    idtype=4\n    name_ptr=0x556257fd26b1\n    note=invoking LENGTHCHECK with OS_MAX_API_NAME\n\n1756098677: OS_ObjectIdFindByName - AFTER_LENGTHCHECK\n    idtype=4\n    name_ptr=0x556257fd26b1\n\n1756098677: OS_ObjectIdFindByName - LOOKUP_FAILURE\n    return_code=-17\n    obj_id=0\n\n1756098677: OS_ObjectIdFindByName - EXIT\n    idtype=4\n    name_ptr=0x556257fd26b1\n    note=exiting OS_ObjectIdFindByName\n\n1756098677: OS_ObjectIdFindByName - ENTRY\n    idtype=3\n    name_ptr=0x7fffe932fd50\n    note=about to perform ARGCHECK and LENGTHCHECK\n\n1756098677: OS_ObjectIdFindByName - AFTER_ARGCHECK\n    idtype=3\n    name_ptr=0x7fffe932fd50\n\n1756098677: OS_ObjectIdFindByName - BEFORE_LENGTHCHECK\n    idtype=3\n    name_ptr=0x7fffe932fd50\n    note=invoking LENGTHCHECK with OS_MAX_API_NAME\n\n1756098677: OS_ObjectIdFindByName - ENTRY\n    idtype=3\n    name_ptr=0x556257fd4f7d\n    note=about to perform ARGCHECK and LENGTHCHECK\n\n1756098677: OS_ObjectIdFindByName - AFTER_ARGCHECK\n    idtype=3\n    name_ptr=0x556257fd4f7d\n\n1756098677: OS_ObjectIdFindByName - BEFORE_LENGTHCHECK\n    idtype=3\n    name_ptr=0x556257fd4f7d\n    note=invoking LENGTHCHECK with OS_MAX_API_NAME\n\n1756098677: OS_ObjectIdFindByName - AFTER_LENGTHCHECK\n    idtype=3\n    name_ptr=0x556257fd4f7d\n\n1756098677: OS_ObjectIdFindByName - LOOKUP_FAILURE\n    return_code=-17\n    obj_id=0\n\n1756098677: OS_ObjectIdFindByName - EXIT\n    idtype=3\n    name_ptr=0x556257fd4f7d\n    note=exiting OS_ObjectIdFindByName\n\n1756098677: OS_ObjectIdFindByName - ENTRY\n    idtype=5\n    name_ptr=0x7fffe932fd50\n    note=about to perform ARGCHECK and LENGTHCHECK\n\n1756098677: OS_ObjectIdFindByName - AFTER_ARGCHECK\n    idtype=5\n    name_ptr=0x7fffe932fd50\n\n1756098677: OS_ObjectIdFindByName - BEFORE_LENGTHCHECK\n    idtype=5\n    name_ptr=0x7fffe932fd50\n    note=invoking LENGTHCHECK with OS_MAX_API_NAME\n\n1756098677: OS_ObjectIdFindByName - ENTRY\n    idtype=5\n    name_ptr=0x556257fd56d9\n    note=about to perform ARGCHECK and LENGTHCHECK\n\n1756098677: OS_ObjectIdFindByName - AFTER_ARGCHECK\n    idtype=5\n    name_ptr=0x556257fd56d9\n\n1756098677: OS_ObjectIdFindByName - BEFORE_LENGTHCHECK\n    idtype=5\n    name_ptr=0x556257fd56d9\n    note=invoking LENGTHCHECK with OS_MAX_API_NAME\n\n1756098677: OS_ObjectIdFindByName - AFTER_LENGTHCHECK\n    idtype=5\n    name_ptr=0x556257fd56d9\n\n1756098677: OS_ObjectIdFindByName - LOOKUP_FAILURE\n    return_code=-17\n    obj_id=0\n\n1756098677: OS_ObjectIdFindByName - EXIT\n    idtype=5\n    name_ptr=0x556257fd56d9\n    note=exiting OS_ObjectIdFindByName\n\n1756098677: OS_ObjectIdFindByName - ENTRY\n    idtype=2\n    name_ptr=0x7fffe932fd50\n    note=about to perform ARGCHECK and LENGTHCHECK\n\n1756098677: OS_ObjectIdFindByName - AFTER_ARGCHECK\n    idtype=2\n    name_ptr=0x7fffe932fd50\n\n1756098677: OS_ObjectIdFindByName - BEFORE_LENGTHCHECK\n    idtype=2\n    name_ptr=0x7fffe932fd50\n    note=invoking LENGTHCHECK with OS_MAX_API_NAME\n\n1756098677: OS_ObjectIdFindByName - ENTRY\n    idtype=2\n    name_ptr=0x556257fd3f50\n    note=about to perform ARGCHECK and LENGTHCHECK\n\n1756098677: OS_ObjectIdFindByName - AFTER_ARGCHECK\n    idtype=2\n    name_ptr=0x556257fd3f50\n\n1756098677: OS_ObjectIdFindByName - BEFORE_LENGTHCHECK\n    idtype=2\n    name_ptr=0x556257fd3f50\n    note=invoking LENGTHCHECK with OS_MAX_API_NAME\n\n1756098677: OS_ObjectIdFindByName - AFTER_LENGTHCHECK\n    idtype=2\n    name_ptr=0x556257fd3f50\n\n1756098677: OS_ObjectIdFindByName - LOOKUP_FAILURE\n    return_code=-17\n    obj_id=0\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The reported violation is plausible but not proven from the snippet. The function OS_ObjectIdFindByName does not itself call any <string.h> routines \u2014 it calls a macro/function LENGTHCHECK(name, OS_MAX_API_NAME, ...). Rule 21.17 only applies if a string.h function (e.g. strlen, strcpy, etc.) is used in a way that can access beyond the bounds of the object. Whether a violation exists depends entirely on the implementation of LENGTHCHECK. If LENGTHCHECK were implemented using an unbounded routine such as strlen on an input that is not NUL-terminated (or on a buffer smaller than expected), that would indeed violate Rule 21.17. However, there is no evidence in the provided code or logs that LENGTHCHECK uses strlen unsafely. Therefore the claim that this code (as shown) violates MISRA C 2023 Rule 21.17 is not proven/certain.\n\nRecommendation: Inspect/modify LENGTHCHECK to ensure it uses a bounded check (for example strnlen with the provided max length or otherwise ensure the maximum number of bytes examined is capped) so that no out-of-bounds access is possible. If LENGTHCHECK already enforces a bounded scan, the code is compliant with Rule 21.17."
}