{
  "user_message": "An agent A claimed that the following OS_SocketListen_Impl code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of OS_SocketListen_Impl.\n```c\nint32 OS_SocketListen_Impl(const OS_object_token_t *token)\n{\n    int                             os_result;\n    OS_impl_file_internal_record_t *impl;\n\n    impl = OS_OBJECT_TABLE_GET(OS_impl_filehandle_table, *token);\n\n    os_result = listen(impl->fd, 10);\n    if (os_result < 0)\n    {\n        OS_DEBUG(\"listen: %s\\n\", strerror(errno));\n        return OS_ERROR;\n    }\n\n    return OS_SUCCESS;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe macro OS_OBJECT_TABLE_GET yields a pointer to a mutable table element (&tbl[index]) and in OS_SocketListen_Impl that pointer is assigned to a non-const OS_impl_file_internal_record_t * (impl) even though the function only reads the record (accesses impl->fd). According to MISRA C 2023 Rule 8.13, the pointer should point to a const-qualified type when possible \u2014 here impl should be declared as const OS_impl_file_internal_record_t * (or the macro/table provide a const-qualified access) to reflect read-only use.\n</scenario>\n<additional code>Here are the definitions of symbols that are close to the target function OS_SocketListen_Impl:\ntypedef struct\n{\n    int  fd;\n    bool selectable;\n} OS_impl_file_internal_record_t\n...\n#define OS_OBJECT_TABLE_GET(tbl, tok) (&tbl[OS_ObjectIndexFromToken(&(tok))])\n...\nextern OS_impl_file_internal_record_t OS_impl_filehandle_table[OS_MAX_NUM_OPEN_FILES]\n...\ntypedef struct OS_object_token OS_object_token_t\n</additional code>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. Rule 8.13 advises that a pointer should point to a const-qualified type whenever that pointer is only used to read the pointed-to object. In OS_SocketListen_Impl the variable impl is declared as a non-const OS_impl_file_internal_record_t * but is only used for read access (impl->fd). The macro and table are defined as non-const objects, but it is perfectly legal and expected under MISRA to declare a pointer-to-const that refers to a non-const object when the function does not modify it. Declaring impl as const OS_impl_file_internal_record_t *impl (or changing the access macro to yield a pointer-to-const when appropriate) would satisfy the rule. Hence the agent A's judgment of a violation of Rule 8.13 is correct."
}