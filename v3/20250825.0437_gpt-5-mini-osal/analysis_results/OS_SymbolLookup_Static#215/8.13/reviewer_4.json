{
  "user_message": "An agent A claimed that the following OS_SymbolLookup_Static code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of OS_SymbolLookup_Static.\n```c\nint32 OS_SymbolLookup_Static(cpuaddr *SymbolAddress, const char *SymbolName, const char *ModuleName)\n{\n    int32                      return_code = OS_ERR_NOT_IMPLEMENTED;\n    OS_static_symbol_record_t *StaticSym   = OS_STATIC_SYMTABLE_SOURCE;\n\n    while (StaticSym != NULL)\n    {\n        if (StaticSym->Name == NULL)\n        {\n            /* end of list --\n             * Return \"OS_ERROR\" to indicate that an actual search was done\n             * with a not-found result, vs. not searching at all. */\n            return_code = OS_ERROR;\n            break;\n        }\n        if (strcmp(StaticSym->Name, SymbolName) == 0 &&\n            (ModuleName == NULL || strcmp(StaticSym->Module, ModuleName) == 0))\n        {\n            /* found matching symbol */\n            *SymbolAddress = (cpuaddr)StaticSym->Address;\n            return_code    = OS_SUCCESS;\n            break;\n        }\n\n        ++StaticSym;\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThis fragment violates MISRA C 2023 Rule 8.13 if the struct members StaticSym->Name or StaticSym->Module are declared as non-const pointers (e.g. \"char *Name\" / \"char *Module\"). In the code they are only read (passed to strcmp) and should therefore be declared as \"const char *Name\" and \"const char *Module\". If the struct members are already declared as \"const char *\", then there is no violation.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A's assessment is correct in substance. MISRA C 2023 Rule 8.13 requires that pointers point to const-qualified types when possible. In the shown function the code only reads the symbol name and module (they are passed to strcmp), so if the OS_static_symbol_record_t members are declared as non-const (e.g. char *Name; char *Module;) then they are effectively used as read\u2011only and should be declared const char *Name; const char *Module; to conform with 8.13. Conversely, if the struct members are already declared const char *, there is no violation. Note also that the pointer StaticSym itself could be declared to point to a const-qualified record (const OS_static_symbol_record_t *StaticSym) if the static table is not modified here. Finally, if the members are intentionally mutable (must be modified elsewhere), leaving them non-const is acceptable and not a MISRA violation. Because the struct definition is not shown, one cannot decide from this function alone \u2014 but the rule/conditional claimed by Agent A is correct."
}