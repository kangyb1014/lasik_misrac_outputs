{
  "user_message": "Target function code is:\n```c\nint32 OS_MutSemGive(osal_id_t sem_id)\n{\n    OS_mutex_internal_record_t *mutex;\n    OS_object_token_t           token;\n    int32                       return_code;\n    osal_id_t                   self_task;\n\n    /* Check Parameters */\n    return_code = OS_ObjectIdGetById(OS_LOCK_MODE_NONE, LOCAL_OBJID_TYPE, sem_id, &token);\n    if (return_code == OS_SUCCESS)\n    {\n        mutex = OS_OBJECT_TABLE_GET(OS_mutex_table, token);\n\n        self_task = OS_TaskGetId();\n\n        if (!OS_ObjectIdEqual(mutex->last_owner, self_task))\n        {\n            OS_DEBUG(\"WARNING: Task %lu giving mutex %lu while owned by task %lu\\n\", OS_ObjectIdToInteger(self_task),\n                     OS_ObjectIdToInteger(sem_id), OS_ObjectIdToInteger(mutex->last_owner));\n        }\n\n        mutex->last_owner = OS_OBJECT_ID_UNDEFINED;\n\n        return_code = OS_MutSemGive_Impl(&token);\n    }\n\n    return return_code;\n}\n```\n\nStatic call graph of the target function is:\n```json\n{'OS_MutSemGive': {'callees': ['OS_ObjectIdGetById', 'OS_ObjectIndexFromToken', 'OS_TaskGetId', 'OS_ObjectIdEqual', 'OS_MutSemGive_Impl', 'UT_Stub_RegisterReturnType', 'UT_Stub_RegisterContextWithMetaData', 'UT_ExecuteBasicHandler', 'UT_Stub_GetReturnValuePtr'], 'callers': []}, 'OS_ObjectIdGetById': {'callees': ['OS_ObjectIdTransactionInit', 'OS_ObjectIdToArrayIndex', 'OS_ObjectIdConvertToken', 'OS_ObjectIdTransactionCancel'], 'callers': ['OS_ConsoleTask_Entry', 'OS_TimeBase_SigWaitImpl', 'OS_BinSemDelete', 'OS_BinSemGive', 'OS_BinSemFlush', 'OS_BinSemTake', 'OS_BinSemTimedWait', 'OS_BinSemGetInfo', 'OS_CondVarDelete', 'OS_CondVarLock', 'OS_CondVarUnlock', 'OS_CondVarSignal', 'OS_CondVarBroadcast', 'OS_CondVarWait', 'OS_CondVarTimedWait', 'OS_CondVarGetInfo', 'OS_CountSemDelete', 'OS_CountSemGive', 'OS_CountSemTake', 'OS_CountSemTimedWait', 'OS_CountSemGetInfo', 'OS_DirectoryClose', 'OS_DirectoryRead', 'OS_DirectoryRewind', 'OS_close', 'OS_TimedRead', 'OS_TimedWrite', 'OS_lseek', 'OS_FDGetInfo', 'OS_GetResourceName', 'OS_ModuleUnload', 'OS_ModuleInfo', 'OS_ModuleSymbolLookup', 'OS_MutSemDelete', 'OS_MutSemGive', 'OS_MutSemTake', 'OS_MutSemGetInfo', 'OS_ConsoleWrite', 'OS_QueueDelete', 'OS_QueueGet', 'OS_QueuePut', 'OS_QueueGetInfo', 'OS_SelectSingle', 'OS_ShellOutputToFile', 'OS_SocketListen', 'OS_SocketBindAddress', 'OS_SocketAccept', 'OS_SocketConnect', 'OS_SocketShutdown', 'OS_SocketRecvFrom', 'OS_SocketSendTo', 'OS_SocketGetInfo', 'OS_TaskPrepare', 'OS_TaskDelete', 'OS_TaskExit', 'OS_TaskSetPriority', 'OS_TaskGetInfo', 'OS_TaskInstallDeleteHandler', 'OS_TimeBaseSet', 'OS_TimeBaseDelete', 'OS_TimeBaseGetInfo', 'OS_TimeBaseGetFreeRun', 'OS_TimeBase_CallbackThread', 'OS_DoTimerAdd', 'OS_TimerSet', 'OS_TimerDelete', 'OS_TimerGetInfo']}, 'OS_ObjectIndexFromToken': {'callees': [], 'callers': ['OS_BinSemCreate_Impl', 'OS_BinSemDelete_Impl', 'OS_BinSemGive_Impl', 'OS_BinSemFlush_Impl', 'OS_GenericBinSemTake_Impl', 'OS_BinSemGetInfo_Impl', 'OS_ConsoleWakeup_Impl', 'OS_ConsoleTask_Entry', 'OS_ConsoleCreate_Impl', 'OS_CondVarCreate_Impl', 'OS_CondVarDelete_Impl', 'OS_CondVarUnlock_Impl', 'OS_CondVarLock_Impl', 'OS_CondVarSignal_Impl', 'OS_CondVarBroadcast_Impl', 'OS_CondVarWait_Impl', 'OS_CondVarTimedWait_Impl', 'OS_CountSemCreate_Impl', 'OS_CountSemDelete_Impl', 'OS_CountSemGive_Impl', 'OS_CountSemTake_Impl', 'OS_CountSemTimedWait_Impl', 'OS_CountSemGetInfo_Impl', 'OS_FileSysStartVolume_Impl', 'OS_FileSysMountVolume_Impl', 'OS_FileSysStatVolume_Impl', 'OS_MutSemCreate_Impl', 'OS_MutSemDelete_Impl', 'OS_MutSemGive_Impl', 'OS_MutSemTake_Impl', 'OS_QueueCreate_Impl', 'OS_QueueDelete_Impl', 'OS_QueueGet_Impl', 'OS_QueuePut_Impl', 'OS_TaskCreate_Impl', 'OS_TaskDetach_Impl', 'OS_TaskMatch_Impl', 'OS_TaskDelete_Impl', 'OS_TaskSetPriority_Impl', 'OS_TaskIdMatchSystemData_Impl', 'OS_TimeBaseLock_Impl', 'OS_TimeBaseUnlock_Impl', 'OS_TimeBase_SigWaitImpl', 'OS_TimeBaseCreate_Impl', 'OS_TimeBaseSet_Impl', 'OS_TimeBaseDelete_Impl', 'OS_ConsoleOutput_Impl', 'OS_SelectSingle_Impl', 'OS_GenericClose_Impl', 'OS_GenericSeek_Impl', 'OS_GenericRead_Impl', 'OS_GenericWrite_Impl', 'OS_FileOpen_Impl', 'OS_DirOpen_Impl', 'OS_DirClose_Impl', 'OS_DirRead_Impl', 'OS_DirRewind_Impl', 'OS_ModuleLoad_Impl', 'OS_ModuleUnload_Impl', 'OS_ModuleSymbolLookup_Impl', 'OS_SetSocketDefaultFlags_Impl', 'OS_SocketOpen_Impl', 'OS_SocketBindAddress_Impl', 'OS_SocketListen_Impl', 'OS_SocketConnect_Impl', 'OS_SocketShutdown_Impl', 'OS_SocketAccept_Impl', 'OS_SocketRecvFrom_Impl', 'OS_SocketSendTo_Impl', 'OS_BinSemCreate', 'OS_BinSemGetInfo', 'OS_CondVarCreate', 'OS_CondVarGetInfo', 'OS_CountSemCreate', 'OS_CountSemGetInfo', 'OS_DirectoryOpen', 'OS_OpenCreate', 'OS_rename', 'OS_FDGetInfo', 'OS_FileOpenCheck', 'OS_CloseFileByName', 'OS_FileSys_FindVirtMountPoint', 'OS_FileSys_Initialize', 'OS_FileSysAddFixedMap', 'OS_mount', 'OS_unmount', 'OS_FS_GetPhysDriveName', 'OS_TranslatePath', 'OS_ObjectIdFindNextMatch', 'OS_ObjectIdIteratorGetNext', 'OS_ModuleLoad', 'OS_ModuleUnload', 'OS_ModuleInfo', 'OS_ModuleSymbolLookup', 'OS_MutSemCreate', 'OS_MutSemGive', 'OS_MutSemTake', 'OS_MutSemGetInfo', 'OS_ConsoleAPI_Init', 'OS_ConsoleWrite', 'OS_QueueCreate', 'OS_QueueGet', 'OS_QueuePut', 'OS_QueueGetInfo', 'OS_CreateSocketName', 'OS_SocketOpen', 'OS_SocketListen', 'OS_SocketBindAddress', 'OS_SocketAccept', 'OS_SocketConnect', 'OS_SocketShutdown', 'OS_SocketRecvFrom', 'OS_SocketSendTo', 'OS_SocketGetInfo', 'OS_TaskPrepare', 'OS_TaskCreate', 'OS_TaskDelete', 'OS_TaskSetPriority', 'OS_TaskGetInfo', 'OS_TaskInstallDeleteHandler', 'OS_TimeBaseCreate', 'OS_TimeBaseSet', 'OS_TimeBaseGetInfo', 'OS_TimeBaseGetFreeRun', 'OS_TimeBase_CallbackThread', 'OS_DoTimerAdd', 'OS_TimerSet', 'OS_TimerDelete', 'OS_TimerGetInfo']}, 'OS_TaskGetId': {'callees': ['OS_TaskGetId_Impl', 'UT_Stub_RegisterReturnType', 'UT_ExecuteBasicHandler', 'UT_Stub_GetReturnValuePtr'], 'callers': ['OS_ObjectIdFindNextFree', 'OS_MutSemGive', 'OS_MutSemTake']}, 'OS_ObjectIdEqual': {'callees': [], 'callers': ['OS_ForEachFilterCreator', 'OS_ObjectIdConvertToken', 'OS_MutSemGive', 'OS_TimeBase_CallbackThread', 'OS_TimerDelete']}, 'OS_MutSemGive_Impl': {'callees': ['OS_ObjectIndexFromToken'], 'callers': ['OS_MutSemGive']}, 'UT_Stub_RegisterReturnType': {'callees': ['UT_GetStubEntry', 'UT_ClearStubEntry', 'UtAssert_Abort'], 'callers': ['OS_BinSemCreate', 'OS_BinSemDelete', 'OS_BinSemFlush', 'OS_BinSemGetIdByName', 'OS_BinSemGetInfo', 'OS_BinSemGive', 'OS_BinSemTake', 'OS_BinSemTimedWait', 'OS_GetLocalTime', 'OS_SetLocalTime', 'OS_API_Init', 'OS_RegisterEventHandler', 'OS_CondVarBroadcast', 'OS_CondVarCreate', 'OS_CondVarDelete', 'OS_CondVarGetIdByName', 'OS_CondVarGetInfo', 'OS_CondVarLock', 'OS_CondVarSignal', 'OS_CondVarTimedWait', 'OS_CondVarUnlock', 'OS_CondVarWait', 'OS_CountSemCreate', 'OS_CountSemDelete', 'OS_CountSemGetIdByName', 'OS_CountSemGetInfo', 'OS_CountSemGive', 'OS_CountSemTake', 'OS_CountSemTimedWait', 'OS_DirectoryClose', 'OS_DirectoryOpen', 'OS_DirectoryRead', 'OS_DirectoryRewind', 'OS_mkdir', 'OS_rmdir', 'OS_GetErrorName', 'OS_StatusToString', 'OS_CloseAllFiles', 'OS_CloseFileByName', 'OS_FDGetInfo', 'OS_FileOpenCheck', 'OS_OpenCreate', 'OS_TimedRead', 'OS_TimedWrite', 'OS_chmod', 'OS_close', 'OS_cp', 'OS_lseek', 'OS_mv', 'OS_read', 'OS_remove', 'OS_rename', 'OS_stat', 'OS_write', 'OS_FS_GetPhysDriveName', 'OS_FileSysAddFixedMap', 'OS_FileSysStatVolume', 'OS_GetFsInfo', 'OS_TranslatePath', 'OS_chkfs', 'OS_initfs', 'OS_mkfs', 'OS_mount', 'OS_rmfs', 'OS_unmount', 'OS_HeapGetInfo', 'OS_ConvertToArrayIndex', 'OS_GetResourceName', 'OS_IdentifyObject', 'OS_ObjectIdToArrayIndex', 'OS_ModuleInfo', 'OS_ModuleLoad', 'OS_ModuleSymbolLookup', 'OS_ModuleUnload', 'OS_SymbolLookup', 'OS_SymbolTableDump', 'OS_MutSemCreate', 'OS_MutSemDelete', 'OS_MutSemGetIdByName', 'OS_MutSemGetInfo', 'OS_MutSemGive', 'OS_MutSemTake', 'OS_NetworkGetHostName', 'OS_NetworkGetID', 'OS_QueueCreate', 'OS_QueueDelete', 'OS_QueueGet', 'OS_QueueGetIdByName', 'OS_QueueGetInfo', 'OS_QueuePut', 'OS_SelectFdAdd', 'OS_SelectFdClear', 'OS_SelectFdIsSet', 'OS_SelectFdZero', 'OS_SelectMultiple', 'OS_SelectSingle', 'OS_ShellOutputToFile', 'OS_SocketAccept', 'OS_SocketAddrFromString', 'OS_SocketAddrGetPort', 'OS_SocketAddrInit', 'OS_SocketAddrSetPort', 'OS_SocketAddrToString', 'OS_SocketBind', 'OS_SocketBindAddress', 'OS_SocketConnect', 'OS_SocketGetIdByName', 'OS_SocketGetInfo', 'OS_SocketListen', 'OS_SocketOpen', 'OS_SocketRecvFrom', 'OS_SocketSendTo', 'OS_SocketShutdown', 'OS_TaskCreate', 'OS_TaskDelay', 'OS_TaskDelete', 'OS_TaskFindIdBySystemData', 'OS_TaskGetId', 'OS_TaskGetIdByName', 'OS_TaskGetInfo', 'OS_TaskInstallDeleteHandler', 'OS_TaskSetPriority', 'OS_TimerAdd', 'OS_TimerCreate', 'OS_TimerDelete', 'OS_TimerGetIdByName', 'OS_TimerGetInfo', 'OS_TimerSet', 'OS_TimeBaseCreate', 'OS_TimeBaseDelete', 'OS_TimeBaseGetFreeRun', 'OS_TimeBaseGetIdByName', 'OS_TimeBaseGetInfo', 'OS_TimeBaseSet', 'OS_GetBuildNumber', 'OS_GetVersionCodeName', 'OS_GetVersionString']}, 'UT_Stub_RegisterContextWithMetaData': {'callees': ['UT_GetStubEntry', 'UtAssert_Abort'], 'callers': ['OS_BinSemCreate', 'OS_BinSemDelete', 'OS_BinSemFlush', 'OS_BinSemGetIdByName', 'OS_BinSemGetInfo', 'OS_BinSemGive', 'OS_BinSemTake', 'OS_BinSemTimedWait', 'OS_GetLocalTime', 'OS_SetLocalTime', 'OS_ApplicationExit', 'OS_ApplicationShutdown', 'OS_RegisterEventHandler', 'OS_CondVarBroadcast', 'OS_CondVarCreate', 'OS_CondVarDelete', 'OS_CondVarGetIdByName', 'OS_CondVarGetInfo', 'OS_CondVarLock', 'OS_CondVarSignal', 'OS_CondVarTimedWait', 'OS_CondVarUnlock', 'OS_CondVarWait', 'OS_CountSemCreate', 'OS_CountSemDelete', 'OS_CountSemGetIdByName', 'OS_CountSemGetInfo', 'OS_CountSemGive', 'OS_CountSemTake', 'OS_CountSemTimedWait', 'OS_DirectoryClose', 'OS_DirectoryOpen', 'OS_DirectoryRead', 'OS_DirectoryRewind', 'OS_mkdir', 'OS_rmdir', 'OS_GetErrorName', 'OS_StatusToString', 'OS_CloseFileByName', 'OS_FDGetInfo', 'OS_FileOpenCheck', 'OS_OpenCreate', 'OS_TimedRead', 'OS_TimedWrite', 'OS_chmod', 'OS_close', 'OS_cp', 'OS_lseek', 'OS_mv', 'OS_read', 'OS_remove', 'OS_rename', 'OS_stat', 'OS_write', 'OS_FS_GetPhysDriveName', 'OS_FileSysAddFixedMap', 'OS_FileSysStatVolume', 'OS_GetFsInfo', 'OS_TranslatePath', 'OS_chkfs', 'OS_initfs', 'OS_mkfs', 'OS_mount', 'OS_rmfs', 'OS_unmount', 'OS_HeapGetInfo', 'OS_ConvertToArrayIndex', 'OS_ForEachObject', 'OS_ForEachObjectOfType', 'OS_GetResourceName', 'OS_IdentifyObject', 'OS_ObjectIdToArrayIndex', 'OS_ModuleInfo', 'OS_ModuleLoad', 'OS_ModuleSymbolLookup', 'OS_ModuleUnload', 'OS_SymbolLookup', 'OS_SymbolTableDump', 'OS_MutSemCreate', 'OS_MutSemDelete', 'OS_MutSemGetIdByName', 'OS_MutSemGetInfo', 'OS_MutSemGive', 'OS_MutSemTake', 'OS_NetworkGetHostName', 'OS_printf', 'OS_QueueCreate', 'OS_QueueDelete', 'OS_QueueGet', 'OS_QueueGetIdByName', 'OS_QueueGetInfo', 'OS_QueuePut', 'OS_SelectFdAdd', 'OS_SelectFdClear', 'OS_SelectFdIsSet', 'OS_SelectFdZero', 'OS_SelectMultiple', 'OS_SelectSingle', 'OS_ShellOutputToFile', 'OS_SocketAccept', 'OS_SocketAddrFromString', 'OS_SocketAddrGetPort', 'OS_SocketAddrInit', 'OS_SocketAddrSetPort', 'OS_SocketAddrToString', 'OS_SocketBind', 'OS_SocketBindAddress', 'OS_SocketConnect', 'OS_SocketGetIdByName', 'OS_SocketGetInfo', 'OS_SocketListen', 'OS_SocketOpen', 'OS_SocketRecvFrom', 'OS_SocketSendTo', 'OS_SocketShutdown', 'OS_TaskCreate', 'OS_TaskDelay', 'OS_TaskDelete', 'OS_TaskFindIdBySystemData', 'OS_TaskGetIdByName', 'OS_TaskGetInfo', 'OS_TaskInstallDeleteHandler', 'OS_TaskSetPriority', 'OS_TimerAdd', 'OS_TimerCreate', 'OS_TimerDelete', 'OS_TimerGetIdByName', 'OS_TimerGetInfo', 'OS_TimerSet', 'OS_TimeBaseCreate', 'OS_TimeBaseDelete', 'OS_TimeBaseGetFreeRun', 'OS_TimeBaseGetIdByName', 'OS_TimeBaseGetInfo', 'OS_TimeBaseSet']}, 'UT_ExecuteBasicHandler': {'callees': ['UT_GetStubEntry', 'UT_SetHandlerFunction', 'UT_DefaultStubImpl'], 'callers': ['OS_BinSemCreate', 'OS_BinSemDelete', 'OS_BinSemFlush', 'OS_BinSemGetIdByName', 'OS_BinSemGetInfo', 'OS_BinSemGive', 'OS_BinSemTake', 'OS_BinSemTimedWait', 'OS_GetLocalTime', 'OS_SetLocalTime', 'OS_API_Init', 'OS_API_Teardown', 'OS_ApplicationExit', 'OS_ApplicationShutdown', 'OS_DeleteAllObjects', 'OS_IdleLoop', 'OS_RegisterEventHandler', 'OS_CondVarBroadcast', 'OS_CondVarCreate', 'OS_CondVarDelete', 'OS_CondVarGetIdByName', 'OS_CondVarGetInfo', 'OS_CondVarLock', 'OS_CondVarSignal', 'OS_CondVarTimedWait', 'OS_CondVarUnlock', 'OS_CondVarWait', 'OS_CountSemCreate', 'OS_CountSemDelete', 'OS_CountSemGetIdByName', 'OS_CountSemGetInfo', 'OS_CountSemGive', 'OS_CountSemTake', 'OS_CountSemTimedWait', 'OS_DirectoryClose', 'OS_DirectoryOpen', 'OS_DirectoryRead', 'OS_DirectoryRewind', 'OS_mkdir', 'OS_rmdir', 'OS_GetErrorName', 'OS_StatusToString', 'OS_CloseAllFiles', 'OS_CloseFileByName', 'OS_FDGetInfo', 'OS_FileOpenCheck', 'OS_OpenCreate', 'OS_TimedRead', 'OS_TimedWrite', 'OS_chmod', 'OS_close', 'OS_cp', 'OS_lseek', 'OS_mv', 'OS_read', 'OS_remove', 'OS_rename', 'OS_stat', 'OS_write', 'OS_FS_GetPhysDriveName', 'OS_FileSysAddFixedMap', 'OS_FileSysStatVolume', 'OS_GetFsInfo', 'OS_TranslatePath', 'OS_chkfs', 'OS_initfs', 'OS_mkfs', 'OS_mount', 'OS_rmfs', 'OS_unmount', 'OS_HeapGetInfo', 'OS_ConvertToArrayIndex', 'OS_ForEachObject', 'OS_ForEachObjectOfType', 'OS_GetResourceName', 'OS_IdentifyObject', 'OS_ObjectIdToArrayIndex', 'OS_ModuleInfo', 'OS_ModuleLoad', 'OS_ModuleSymbolLookup', 'OS_ModuleUnload', 'OS_SymbolLookup', 'OS_SymbolTableDump', 'OS_MutSemCreate', 'OS_MutSemDelete', 'OS_MutSemGetIdByName', 'OS_MutSemGetInfo', 'OS_MutSemGive', 'OS_MutSemTake', 'OS_NetworkGetHostName', 'OS_NetworkGetID', 'OS_printf_disable', 'OS_printf_enable', 'OS_QueueCreate', 'OS_QueueDelete', 'OS_QueueGet', 'OS_QueueGetIdByName', 'OS_QueueGetInfo', 'OS_QueuePut', 'OS_SelectFdAdd', 'OS_SelectFdClear', 'OS_SelectFdIsSet', 'OS_SelectFdZero', 'OS_SelectMultiple', 'OS_SelectSingle', 'OS_ShellOutputToFile', 'OS_SocketAccept', 'OS_SocketAddrFromString', 'OS_SocketAddrGetPort', 'OS_SocketAddrInit', 'OS_SocketAddrSetPort', 'OS_SocketAddrToString', 'OS_SocketBind', 'OS_SocketBindAddress', 'OS_SocketConnect', 'OS_SocketGetIdByName', 'OS_SocketGetInfo', 'OS_SocketListen', 'OS_SocketOpen', 'OS_SocketRecvFrom', 'OS_SocketSendTo', 'OS_SocketShutdown', 'OS_TaskCreate', 'OS_TaskDelay', 'OS_TaskDelete', 'OS_TaskExit', 'OS_TaskFindIdBySystemData', 'OS_TaskGetId', 'OS_TaskGetIdByName', 'OS_TaskGetInfo', 'OS_TaskInstallDeleteHandler', 'OS_TaskSetPriority', 'OS_TimerAdd', 'OS_TimerCreate', 'OS_TimerDelete', 'OS_TimerGetIdByName', 'OS_TimerGetInfo', 'OS_TimerSet', 'OS_TimeBaseCreate', 'OS_TimeBaseDelete', 'OS_TimeBaseGetFreeRun', 'OS_TimeBaseGetIdByName', 'OS_TimeBaseGetInfo', 'OS_TimeBaseSet', 'OS_GetBuildNumber', 'OS_GetVersionCodeName', 'OS_GetVersionNumber', 'OS_GetVersionString']}, 'UT_Stub_GetReturnValuePtr': {'callees': ['UT_GetStubEntry', 'UtAssert_Abort', 'UtAssert_GetContext'], 'callers': ['OS_BinSemCreate', 'OS_BinSemDelete', 'OS_BinSemFlush', 'OS_BinSemGetIdByName', 'OS_BinSemGetInfo', 'OS_BinSemGive', 'OS_BinSemTake', 'OS_BinSemTimedWait', 'OS_GetLocalTime', 'OS_SetLocalTime', 'OS_API_Init', 'OS_RegisterEventHandler', 'OS_CondVarBroadcast', 'OS_CondVarCreate', 'OS_CondVarDelete', 'OS_CondVarGetIdByName', 'OS_CondVarGetInfo', 'OS_CondVarLock', 'OS_CondVarSignal', 'OS_CondVarTimedWait', 'OS_CondVarUnlock', 'OS_CondVarWait', 'OS_CountSemCreate', 'OS_CountSemDelete', 'OS_CountSemGetIdByName', 'OS_CountSemGetInfo', 'OS_CountSemGive', 'OS_CountSemTake', 'OS_CountSemTimedWait', 'OS_DirectoryClose', 'OS_DirectoryOpen', 'OS_DirectoryRead', 'OS_DirectoryRewind', 'OS_mkdir', 'OS_rmdir', 'OS_GetErrorName', 'OS_StatusToString', 'OS_CloseAllFiles', 'OS_CloseFileByName', 'OS_FDGetInfo', 'OS_FileOpenCheck', 'OS_OpenCreate', 'OS_TimedRead', 'OS_TimedWrite', 'OS_chmod', 'OS_close', 'OS_cp', 'OS_lseek', 'OS_mv', 'OS_read', 'OS_remove', 'OS_rename', 'OS_stat', 'OS_write', 'OS_FS_GetPhysDriveName', 'OS_FileSysAddFixedMap', 'OS_FileSysStatVolume', 'OS_GetFsInfo', 'OS_TranslatePath', 'OS_chkfs', 'OS_initfs', 'OS_mkfs', 'OS_mount', 'OS_rmfs', 'OS_unmount', 'OS_HeapGetInfo', 'OS_ConvertToArrayIndex', 'OS_GetResourceName', 'OS_IdentifyObject', 'OS_ObjectIdToArrayIndex', 'OS_ModuleInfo', 'OS_ModuleLoad', 'OS_ModuleSymbolLookup', 'OS_ModuleUnload', 'OS_SymbolLookup', 'OS_SymbolTableDump', 'OS_MutSemCreate', 'OS_MutSemDelete', 'OS_MutSemGetIdByName', 'OS_MutSemGetInfo', 'OS_MutSemGive', 'OS_MutSemTake', 'OS_NetworkGetHostName', 'OS_NetworkGetID', 'OS_QueueCreate', 'OS_QueueDelete', 'OS_QueueGet', 'OS_QueueGetIdByName', 'OS_QueueGetInfo', 'OS_QueuePut', 'OS_SelectFdAdd', 'OS_SelectFdClear', 'OS_SelectFdIsSet', 'OS_SelectFdZero', 'OS_SelectMultiple', 'OS_SelectSingle', 'OS_ShellOutputToFile', 'OS_SocketAccept', 'OS_SocketAddrFromString', 'OS_SocketAddrGetPort', 'OS_SocketAddrInit', 'OS_SocketAddrSetPort', 'OS_SocketAddrToString', 'OS_SocketBind', 'OS_SocketBindAddress', 'OS_SocketConnect', 'OS_SocketGetIdByName', 'OS_SocketGetInfo', 'OS_SocketListen', 'OS_SocketOpen', 'OS_SocketRecvFrom', 'OS_SocketSendTo', 'OS_SocketShutdown', 'OS_TaskCreate', 'OS_TaskDelay', 'OS_TaskDelete', 'OS_TaskFindIdBySystemData', 'OS_TaskGetId', 'OS_TaskGetIdByName', 'OS_TaskGetInfo', 'OS_TaskInstallDeleteHandler', 'OS_TaskSetPriority', 'OS_TimerAdd', 'OS_TimerCreate', 'OS_TimerDelete', 'OS_TimerGetIdByName', 'OS_TimerGetInfo', 'OS_TimerSet', 'OS_TimeBaseCreate', 'OS_TimeBaseDelete', 'OS_TimeBaseGetFreeRun', 'OS_TimeBaseGetIdByName', 'OS_TimeBaseGetInfo', 'OS_TimeBaseSet', 'OS_GetBuildNumber', 'OS_GetVersionCodeName', 'OS_GetVersionString']}}\n```\n\n\nList additional symbols that are required to analyze the target function to determine if the target function code violates the following MISRA C rule:\nUse of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters. This rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\nThe list will be included in the prompt for the next agent, so be concise and clear.\nExplain why each symbol is required in the analysis of the target function for the MISRA C rule.\n",
  "close_symbols": [
    "OS_ObjectIdGetById",
    "OS_MutSemGive_Impl",
    "OS_OBJECT_TABLE_GET",
    "OS_mutex_table",
    "OS_mutex_internal_record_t",
    "OS_object_token_t",
    "osal_id_t",
    "OS_TaskGetId",
    "OS_ObjectIdEqual",
    "OS_DEBUG",
    "OS_ObjectIdToInteger",
    "OS_ObjectIndexFromToken"
  ],
  "explanation": "To determine whether OS_MutSemGive can cause out-of-bounds accesses via calls to the <string.h> API, the analyzer must know which pointers/objects and their layouts are produced or forwarded by this function and whether any callee could apply string functions to them. The required symbols and why they are needed:\n\n- OS_ObjectIdGetById: This function takes sem_id and a token pointer (passed from OS_MutSemGive). Inspecting its implementation shows whether it writes to or returns pointers that might later be passed into string functions or produce derived pointers that could be misused.\n\n- OS_MutSemGive_Impl: Called with &token; it is the next-step callee that may perform operations (including any string.h calls) on objects identified by token. Must inspect its use of pointers derived from token/sem_id.\n\n- OS_OBJECT_TABLE_GET: Macro/inline used to obtain the mutex pointer from the object table. Needed to know how the mutex pointer is computed (aliasing, casting) and what object is actually referenced.\n\n- OS_mutex_table: The table referenced by OS_OBJECT_TABLE_GET. Required to confirm the storage location and layout of the mutex objects returned to the caller.\n\n- OS_mutex_internal_record_t: The structure type of *mutex. Necessary to see if it contains any character arrays or pointer fields that might be the target of string.h calls elsewhere (e.g., fields that could be passed to memcpy/strcpy).\n\n- OS_object_token_t: The token type returned/filled by OS_ObjectIdGetById and passed to OS_MutSemGive_Impl. Understanding its contents and pointer semantics is required to trace what pointers/value it conveys.\n\n- osal_id_t: The ID type (sem_id, self_task, last_owner). Knowing its representation tells whether any ID is actually/implicitly a pointer or contains addresses that could be misused with string functions.\n\n- OS_TaskGetId: Returns self_task used in comparisons and debug output; inspect to ensure it does not produce or forward pointer values that could be subjected to string APIs.\n\n- OS_ObjectIdEqual: Compares IDs (mutex->last_owner vs self_task). Needed to verify it does not perform hidden string operations on those ID values.\n\n- OS_DEBUG: The debug macro/function invoked with formatted arguments. Although typically formatting uses stdio, its implementation might use string.h helpers; verify it does not apply string functions to pointers from this function in a way that could be out-of-bounds.\n\n- OS_ObjectIdToInteger: Used in the debug call to convert IDs. Check its implementation to ensure no string.h usage that could operate on pointers derived from IDs.\n\n- OS_ObjectIndexFromToken: Called (transitively via implementations) to map tokens to indexes. Included because it may be part of the callee chain that dereferences tokens and accesses object data; inspect for any string.h calls that operate on pointers coming from this function.\n\nOnly by examining these symbols (type definitions, table accessors, and the direct callee implementations) can an analyst determine whether any standard string functions could be invoked on pointers/objects originating in OS_MutSemGive and whether those invocations could access beyond object bounds."
}