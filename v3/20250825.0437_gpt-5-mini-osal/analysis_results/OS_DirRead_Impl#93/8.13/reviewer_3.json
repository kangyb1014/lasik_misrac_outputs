{
  "user_message": "An agent A claimed that the following OS_DirRead_Impl code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of OS_DirRead_Impl.\n```c\nint32 OS_DirRead_Impl(const OS_object_token_t *token, os_dirent_t *dirent)\n{\n    struct dirent *                de;\n    OS_impl_dir_internal_record_t *impl;\n    impl = OS_OBJECT_TABLE_GET(OS_impl_dir_table, *token);\n\n    /* NOTE - the readdir() call is non-reentrant ....\n     * However, this is performed while the global dir table lock is taken.\n     * Therefore this ensures that only one such call can occur at any given time.\n     *\n     * Static analysis tools may warn about this because they do not know\n     * this function is externally serialized via the global lock.\n     */\n    /* cppcheck-suppress readdirCalled */\n    /* cppcheck-suppress nonreentrantFunctionsreaddir */\n    de = readdir(impl->dp);\n    if (de == NULL)\n    {\n        return OS_ERROR;\n    }\n\n    strncpy(dirent->FileName, de->d_name, sizeof(dirent->FileName) - 1);\n    dirent->FileName[sizeof(dirent->FileName) - 1] = 0;\n\n    return OS_SUCCESS;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe pointer 'de' is declared as 'struct dirent *de' but is only used for read-only access (de->d_name is read). According to MISRA C 2023 Rule 8.13, it should be declared as a pointer to a const-qualified type (e.g. 'const struct dirent *de'). Assigning the non-const return of readdir() to a 'const struct dirent *' is allowed, so the current non-const declaration violates the rule.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. The local pointer 'de' is only used for read access (de->d_name) and therefore can and should be declared as pointing to a const-qualified type (e.g. const struct dirent *de) to satisfy MISRA C 2023 Rule 8.13. Assigning the non-const result of readdir() to a pointer-to-const is permitted by C (adding const is allowed), and there is no evidence in the shown code that the object is modified or needs to be passed to an API that requires a non-const pointer. If there were a subsequent need to modify the structure or call an API that requires a mutable pointer, a deviation would be justified, but that is not the case here."
}