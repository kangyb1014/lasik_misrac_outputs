{
  "user_message": "An agent A claimed that the following UT_SetDeferredRetcode code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of UT_SetDeferredRetcode.\n```c\nvoid UT_SetDeferredRetcode(UT_EntryKey_t FuncKey, int32 Count, UT_IntReturn_t Retcode)\n{\n    /* The count should always be a positive integer, if not there is a bug in the test */\n    if (Count <= 0)\n    {\n        UtAssert_Failed(\"BUG: Invalid Count (%ld) passed to UT_SetDeferredRetcode()\", (long)Count);\n    }\n    else\n    {\n        UT_ConfigureGenericStubReturnValue(FuncKey, &Retcode, sizeof(Retcode), UT_ValueGenre_INTEGER, Count, NULL);\n    }\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe address of the parameter Retcode is passed to UT_ConfigureGenericStubReturnValue. If that callee has a non-const pointer parameter and writes to the pointed object (e.g. copies into or modifies it), it will modify the function parameter Retcode inside UT_SetDeferredRetcode, which violates MISRA C 2023 Rule 17.8. To avoid the violation the code must ensure the callee does not modify the pointed object (use a const pointer) or pass a separate local copy instead of &Retcode.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\nENTER: UT_SetDeferredRetcode: FuncKey=93945732809262, Count=2, Retcode(before)=-1, &Retcode=0x7fff7597bb98, sizeof(Retcode)=8\nBEFORE_CALL: UT_ConfigureGenericStubReturnValue(FuncKey=93945732809262, &Retcode=0x7fff7597bb98, sizeof=8, Count=2) - Retcode=-1\nAFTER_CALL: UT_ConfigureGenericStubReturnValue returned. Retcode(after)=-1, &Retcode=0x7fff7597bb98\nENTER: UT_SetDeferredRetcode: FuncKey=93945732797759, Count=1, Retcode(before)=-1, &Retcode=0x7fff7597bb98, sizeof(Retcode)=8\nBEFORE_CALL: UT_ConfigureGenericStubReturnValue(FuncKey=93945732797759, &Retcode=0x7fff7597bb98, sizeof=8, Count=1) - Retcode=-1\nAFTER_CALL: UT_ConfigureGenericStubReturnValue returned. Retcode(after)=-1, &Retcode=0x7fff7597bb98\nENTER: UT_SetDeferredRetcode: FuncKey=94073021027788, Count=1, Retcode(before)=-1, &Retcode=0x7fff3de07628, sizeof(Retcode)=8\nBEFORE_CALL: UT_ConfigureGenericStubReturnValue(FuncKey=94073021027788, &Retcode=0x7fff3de07628, sizeof=8, Count=1) - Retcode=-1\nAFTER_CALL: UT_ConfigureGenericStubReturnValue returned. Retcode(after)=-1, &Retcode=0x7fff3de07628\nENTER: UT_SetDeferredRetcode: FuncKey=94053596278639, Count=2, Retcode(before)=-1, &Retcode=0x7ffc9fc86ba8, sizeof(Retcode)=8\nBEFORE_CALL: UT_ConfigureGenericStubReturnValue(FuncKey=94053596278639, &Retcode=0x7ffc9fc86ba8, sizeof=8, Count=2) - Retcode=-1\nAFTER_CALL: UT_ConfigureGenericStubReturnValue returned. Retcode(after)=-1, &Retcode=0x7ffc9fc86ba8\nENTER: UT_SetDeferredRetcode: FuncKey=94053596261059, Count=1, Retcode(before)=-1, &Retcode=0x7ffc9fc86ba8, sizeof(Retcode)=8\nBEFORE_CALL: UT_ConfigureGenericStubReturnValue(FuncKey=94053596261059, &Retcode=0x7ffc9fc86ba8, sizeof=8, Count=1) - Retcode=-1\nAFTER_CALL: UT_ConfigureGenericStubReturnValue returned. Retcode(after)=-1, &Retcode=0x7ffc9fc86ba8\nENTER: UT_SetDeferredRetcode: FuncKey=94804438333878, Count=1, Retcode(before)=-1, &Retcode=0x7ffc96cbed08, sizeof(Retcode)=8\nBEFORE_CALL: UT_ConfigureGenericStubReturnValue(FuncKey=94804438333878, &Retcode=0x7ffc96cbed08, sizeof=8, Count=1) - Retcode=-1\nAFTER_CALL: UT_ConfigureGenericStubReturnValue returned. Retcode(after)=-1, &Retcode=0x7ffc96cbed08\nENTER: UT_SetDeferredRetcode: FuncKey=94804438354966, Count=1, Retcode(before)=-1, &Retcode=0x7ffc96cbed08, sizeof(Retcode)=8\nBEFORE_CALL: UT_ConfigureGenericStubReturnValue(FuncKey=94804438354966, &Retcode=0x7ffc96cbed08, sizeof=8, Count=1) - Retcode=-1\nAFTER_CALL: UT_ConfigureGenericStubReturnValue returned. Retcode(after)=-1, &Retcode=0x7ffc96cbed08\nENTER: UT_SetDeferredRetcode: FuncKey=94804438353848, Count=1, Retcode(before)=-1, &Retcode=0x7ffc96cbed08, sizeof(Retcode)=8\nBEFORE_CALL: UT_ConfigureGenericStubReturnValue(FuncKey=94804438353848, &Retcode=0x7ffc96cbed08, sizeof=8, Count=1) - Retcode=-1\nAFTER_CALL: UT_ConfigureGenericStubReturnValue returned. Retcode(after)=-1, &Retcode=0x7ffc96cbed08\nENTER: UT_SetDeferredRetcode: FuncKey=94292092876788, Count=1, Retcode(before)=-4, &Retcode=0x7fff950d6ae8, sizeof(Retcode)=8\nBEFORE_CALL: UT_ConfigureGenericStubReturnValue(FuncKey=94292092876788, &Retcode=0x7fff950d6ae8, sizeof=8, Count=1) - Retcode=-4\nAFTER_CALL: UT_ConfigureGenericStubReturnValue returned. Retcode(after)=-4, &Retcode=0x7fff950d6ae8\nENTER: UT_SetDeferredRetcode: FuncKey=94292092876788, Count=1, Retcode(before)=-4, &Retcode=0x7fff950d6ae8, sizeof(Retcode)=8\nBEFORE_CALL: UT_ConfigureGenericStubReturnValue(FuncKey=94292092876788, &Retcode=0x7fff950d6ae8, sizeof=8, Count=1) - Retcode=-4\nAFTER_CALL: UT_ConfigureGenericStubReturnValue returned. Retcode(after)=-4, &Retcode=0x7fff950d6ae8\nENTER: UT_SetDeferredRetcode: FuncKey=94746997183609, Count=1, Retcode(before)=-1, &Retcode=0x7ffe551c7dc8, sizeof(Retcode)=8\nBEFORE_CALL: UT_ConfigureGenericStubReturnValue(FuncKey=94746997183609, &Retcode=0x7ffe551c7dc8, sizeof=8, Count=1) - Retcode=-1\nAFTER_CALL: UT_ConfigureGenericStubReturnValue returned. Retcode(after)=-1, &Retcode=0x7ffe551c7dc8\nENTER: UT_SetDeferredRetcode: FuncKey=94746997183609, Count=1, Retcode(before)=-1, &Retcode=0x7ffe551c7dc8, sizeof(Retcode)=8\nBEFORE_CALL: UT_ConfigureGenericStubReturnValue(FuncKey=947469971\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "MISRA C 2023 Rule 17.8 prohibits modification of a function parameter object. In this function Retcode is a value parameter (an object local to UT_SetDeferredRetcode). Taking its address and passing &Retcode to another routine hands that parameter object to the callee. If UT_ConfigureGenericStubReturnValue accepts a non-const pointer and writes into the pointed-to memory, the callee would modify the parameter object Retcode and thus violate Rule 17.8. The runtime trace showing Retcode unchanged only demonstrates that the current implementation did not write to it at runtime; it does not remove the static potential violation.\n\nTherefore the agent A report is correct in principle: the code can violate Rule 17.8 unless the callee's prototype guarantees it will not modify the pointed object (e.g. takes a const void *), or the caller passes a separate local copy instead of the address of the parameter.\n\nRecommended fixes: pass the address of a local copy of Retcode, or change the callee to accept a const-qualified pointer so the intent is explicit and the parameter object cannot be modified by the callee."
}