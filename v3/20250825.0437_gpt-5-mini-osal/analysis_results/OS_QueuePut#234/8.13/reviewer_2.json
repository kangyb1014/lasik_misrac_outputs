{
  "user_message": "An agent A claimed that the following OS_QueuePut code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of OS_QueuePut.\n```c\nint32 OS_QueuePut(osal_id_t queue_id, const void *data, size_t size, uint32 flags)\n{\n    OS_object_token_t           token;\n    int32                       return_code;\n    OS_queue_internal_record_t *queue;\n\n    /* Check Parameters */\n    OS_CHECK_POINTER(data);\n    OS_CHECK_SIZE(size);\n\n    return_code = OS_ObjectIdGetById(OS_LOCK_MODE_NONE, LOCAL_OBJID_TYPE, queue_id, &token);\n    if (return_code == OS_SUCCESS)\n    {\n        queue = OS_OBJECT_TABLE_GET(OS_queue_table, token);\n\n        if (size > queue->max_size)\n        {\n            /*\n            ** The buffer that the user is passing in is too large\n            */\n            return_code = OS_QUEUE_INVALID_SIZE;\n        }\n        else\n        {\n            return_code = OS_QueuePut_Impl(&token, data, size, flags);\n        }\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe local pointer 'queue' is declared as a pointer to a non-const type (OS_queue_internal_record_t *queue;) but in this function it is only used for read-only access (e.g. checking queue->max_size). According to MISRA C 2023 Rule 8.13 it should be declared as a pointer to a const-qualified type (const OS_queue_internal_record_t *queue) when possible.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\nOS_QueuePut ENTRY: queue_id=3735928559, data=0x7fff4ed82580, size=4, flags=0\nOS_QueuePut: OS_ObjectIdGetById returned -35\nOS_QueuePut EXIT: return_code=-35\n\nOS_QueuePut ENTRY: queue_id=0, data=0x7fff4ed82580, size=4, flags=0\nOS_QueuePut: OS_ObjectIdGetById returned -35\nOS_QueuePut EXIT: return_code=-35\n\n\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The agent's observation is correct. In OS_QueuePut the local variable 'queue' is only read (used to compare size to queue->max_size) and is not used to modify the object. MISRA C 2023 Rule 8.13 recommends that pointers should point to const-qualified types whenever possible \u2014 so the local declaration could and should be made const (e.g. const OS_queue_internal_record_t *queue). Assigning the pointer returned by OS_OBJECT_TABLE_GET (a non-const pointer) to a pointer-to-const is safe (adding const). There is no evidence in the provided code that 'queue' needs to be a modifiable pointer, so the reported violation is valid. Note: if OS_OBJECT_TABLE_GET or other code semantics require a modifiable pointer for side effects (not visible here), that could justify the non-const, but based on the shown function the report is correct."
}