{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.1 is: A project shall not contain unreachable code.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of OS_Milli2Ticks:\n```c\nint32 OS_Milli2Ticks(uint32 milli_seconds, int *ticks)\n{\n    uint64 num_of_ticks;\n    int32  return_code = OS_SUCCESS;\n\n    num_of_ticks = (((uint64)milli_seconds * OS_SharedGlobalVars.TicksPerSecond) + 999) / 1000;\n\n    /* Check against maximum int32 (limit from some OS's) */\n    if (num_of_ticks <= INT_MAX)\n    {\n        *ticks = (int)num_of_ticks;\n    }\n    else\n    {\n        return_code = OS_ERROR;\n        *ticks      = 0;\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function OS_Milli2Ticks:\nextern OS_SharedGlobalVars_t OS_SharedGlobalVars\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nif (num_of_ticks <= INT_MAX)\n    {\n        *ticks = (int)num_of_ticks;\n    }\n    else\n    {\n        return_code = OS_ERROR;\n        *ticks      = 0;\n    }\n```\nFocus on the above code fragment and judge whether it violates the rule 2.1 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation. Both the then and else branches are reachable depending on inputs. For example, with milli_seconds=1000 and OS_SharedGlobalVars.TicksPerSecond=1 the computed num_of_ticks is 1 (<= INT_MAX) so the then-branch executes; with milli_seconds=4294967295 (0xFFFFFFFF) and TicksPerSecond=1000 the computed num_of_ticks \u2248 4.294e12 (> INT_MAX) so the else-branch executes. There is no constant condition or other logic making either branch unreachable (the comparison is between uint64 and INT_MAX which is converted to an unsigned 64-bit value), so MISRA C 2023 Rule 2.1 is not violated."
}