{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of lfs_tortoise_detectcycles:\n```c\nstatic int lfs_tortoise_detectcycles(\n    const lfs_mdir_t *dir, struct lfs_tortoise_t *tortoise) {\n    // detect cycles with Brent's algorithm\n    if (lfs_pair_issync(dir->tail, tortoise->pair)) {\n        LFS_WARN(\"Cycle detected in tail list\");\n        return LFS_ERR_CORRUPT;\n    }\n    if (tortoise->i == tortoise->period) {\n        tortoise->pair[0] = dir->tail[0];\n        tortoise->pair[1] = dir->tail[1];\n        tortoise->i = 0;\n        tortoise->period *= 2;\n    }\n    tortoise->i += 1;\n\n    return LFS_ERR_OK;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function lfs_tortoise_detectcycles:\nstatic inline bool lfs_pair_issync(\n        const lfs_block_t paira[2],\n        const lfs_block_t pairb[2]) {\n    return (paira[0] == pairb[0] && paira[1] == pairb[1]) ||\n           (paira[0] == pairb[1] && paira[1] == pairb[0]);\n}\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\ntortoise->pair[1] = dir->tail[1];\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation. dir is a pointer to const lfs_mdir_t so dir->tail is read-only; tortoise is non-const because its pair[] is explicitly modified (tortoise->pair[0] and [1]). The assignment tortoise->pair[1] = dir->tail[1] writes into a mutable destination and reads from a const source; lfs_pair_issync takes its parameters as const arrays, and passing a non-const array to a const-parameter is allowed. There is no pointer that should be const but is not, so MISRA C 2023 Rule 8.13 is not violated."
}