{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of lfs_commitattr:\n```c\nstatic int lfs_commitattr(lfs_t *lfs, const char *path,\n        uint8_t type, const void *buffer, lfs_size_t size) {\n    lfs_mdir_t cwd;\n    lfs_stag_t tag = lfs_dir_find(lfs, &cwd, &path, NULL);\n    if (tag < 0) {\n        return tag;\n    }\n\n    uint16_t id = lfs_tag_id(tag);\n    if (id == 0x3ff) {\n        // special case for root\n        id = 0;\n        int err = lfs_dir_fetch(lfs, &cwd, lfs->root);\n        if (err) {\n            return err;\n        }\n    }\n\n    return lfs_dir_commit(lfs, &cwd, LFS_MKATTRS(\n            {LFS_MKTAG(LFS_TYPE_USERATTR + type, id, size), buffer}));\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function lfs_commitattr:\ntypedef struct lfs_mdir {\n    lfs_block_t pair[2];\n    uint32_t rev;\n    lfs_off_t off;\n    uint32_t etag;\n    uint16_t count;\n    bool erased;\n    bool split;\n    lfs_block_t tail[2];\n} lfs_mdir_t\n...\ntypedef int32_t lfs_stag_t\n...\ntypedef uint32_t lfs_size_t\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nint err = lfs_dir_fetch(lfs, &cwd, lfs->root);\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation can be determined from this fragment alone. The statement int err = lfs_dir_fetch(lfs, &cwd, lfs->root); merely passes a member; it does not declare a pointer type. MISRA 8.13 concerns pointer declarations that should be const-qualified when the pointed-to object is not modified. A violation would occur if lfs->root were declared as a non-const pointer (for example, lfs_block_t *root or char *root) even though the code never modifies the pointed-to data and it should instead be declared const (const lfs_block_t *root or const char *root). In the absence of the declaration/signature of lfs->root and lfs_dir_fetch, do not assume a violation from this call-site alone."
}