{
  "user_message": "An agent A claimed that the following lfs_stat code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of lfs_stat.\n```c\nint lfs_stat(lfs_t *lfs, const char *path, struct lfs_info *info) {\n    int err = LFS_LOCK(lfs->cfg);\n    if (err) {\n        return err;\n    }\n    LFS_TRACE(\"lfs_stat(%p, \\\"%s\\\", %p)\", (void*)lfs, path, (void*)info);\n\n    err = lfs_stat_(lfs, path, info);\n\n    LFS_TRACE(\"lfs_stat -> %d\", err);\n    LFS_UNLOCK(lfs->cfg);\n    return err;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe call lfs_dir_find(lfs, &cwd, &path, NULL) passes the address of the parameter 'path' (&path) so the called function can assign to *(&path) (i.e. update the local parameter variable 'path'). This modifies the function parameter itself (e.g. advancing the pointer to the next path component), which violates MISRA C 2023 Rule 17.8.\n</scenario>\n<additional code>Here are the definitions of symbols that are close to the target function lfs_stat:\n#define LFS_LOCK(cfg) ((void)cfg,0)\n...\n#define LFS_UNLOCK(cfg) ((void)cfg)\n...\n#define LFS_TRACE(__VA_ARGS__) \n...\nstatic int lfs_stat_(lfs_t *lfs, const char *path, struct lfs_info *info) {\n    lfs_mdir_t cwd;\n    lfs_stag_t tag = lfs_dir_find(lfs, &cwd, &path, NULL);\n    if (tag < 0) {\n        return (int)tag;\n    }\n\n    // only allow trailing slashes on dirs\n    if (strchr(path, '/') != NULL\n            && lfs_tag_type3(tag) != LFS_TYPE_DIR) {\n        return LFS_ERR_NOTDIR;\n    }\n\n    return lfs_dir_getinfo(lfs, &cwd, lfs_tag_id(tag), info);\n}\n</additional code>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. MISRA C 2023 Rule 17.8 forbids modifying a function parameter itself (you may modify the object pointed to by a pointer parameter, but not the pointer parameter). In lfs_stat_ the parameter is declared as const char *path; calling lfs_dir_find(lfs, &cwd, &path, NULL) passes the address of that parameter so the called function can assign to *(&path) (i.e. change the local parameter variable path). That is a modification of the function parameter and therefore contravenes Rule 17.8. (Note: the top-level lfs_stat shown does not modify its parameters, but the violation occurs in lfs_stat_ as shown in the additional code.)"
}