{
  "result": "success",
  "message": "lfs_bd_cmp START: size=8 hint=8 block=1 off=8 buffer=0x555b50b16bd9\ninit: diff=0\nLOOP ENTRY: i=0 diff(before)=0\ndiff assigned: diff=8 size-i=8 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=8 block=1 off+i=8 diff=8)\nmemcmp res=0 (i=0 diff=8)\nLOOP EXIT: will increment i by diff -> next i=8\nRETURN LFS_CMP_EQ\nlfs_bd_cmp START: size=8 hint=8 block=1 off=8 buffer=0x555b50b16bd9\ninit: diff=0\nLOOP ENTRY: i=0 diff(before)=0\ndiff assigned: diff=8 size-i=8 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=8 block=1 off+i=8 diff=8)\nmemcmp res=0 (i=0 diff=8)\nLOOP EXIT: will increment i by diff -> next i=8\nRETURN LFS_CMP_EQ\nlfs_bd_cmp START: size=9 hint=9 block=1 off=72 buffer=0x7ffc88218fa8\ninit: diff=0\nLOOP ENTRY: i=0 diff(before)=0\ndiff assigned: diff=8 size-i=9 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=9 block=1 off+i=72 diff=8)\nmemcmp res=0 (i=0 diff=8)\nLOOP EXIT: will increment i by diff -> next i=8\nLOOP ENTRY: i=8 diff(before)=8\ndiff assigned: diff=1 size-i=1 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=1 block=1 off+i=80 diff=1)\nmemcmp res=0 (i=8 diff=1)\nLOOP EXIT: will increment i by diff -> next i=9\nRETURN LFS_CMP_EQ\nlfs_bd_cmp START: size=9 hint=9 block=1 off=72 buffer=0x7ffc88218fa8\ninit: diff=0\nLOOP ENTRY: i=0 diff(before)=0\ndiff assigned: diff=8 size-i=9 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=9 block=1 off+i=72 diff=8)\nmemcmp res=0 (i=0 diff=8)\nLOOP EXIT: will increment i by diff -> next i=8\nLOOP ENTRY: i=8 diff(before)=8\ndiff assigned: diff=1 size-i=1 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=1 block=1 off+i=80 diff=1)\nmemcmp res=0 (i=8 diff=1)\nLOOP EXIT: will increment i by diff -> next i=9\nRETURN LFS_CMP_EQ\nlfs_bd_cmp START: size=4 hint=4 block=1672 off=40 buffer=0x7ffc88218fb2\ninit: diff=0\nLOOP ENTRY: i=0 diff(before)=0\ndiff assigned: diff=4 size-i=4 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=4 block=1672 off+i=40 diff=4)\nmemcmp res=-3 (i=0 diff=4)\nRETURN cmp ret=1\nlfs_bd_cmp START: size=9 hint=9 block=1 off=72 buffer=0x7ffc88218fa8\ninit: diff=0\nLOOP ENTRY: i=0 diff(before)=0\ndiff assigned: diff=8 size-i=9 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=9 block=1 off+i=72 diff=8)\nmemcmp res=0 (i=0 diff=8)\nLOOP EXIT: will increment i by diff -> next i=8\nLOOP ENTRY: i=8 diff(before)=8\ndiff assigned: diff=1 size-i=1 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=1 block=1 off+i=80 diff=1)\nmemcmp res=0 (i=8 diff=1)\nLOOP EXIT: will increment i by diff -> next i=9\nRETURN LFS_CMP_EQ\nlfs_bd_cmp START: size=5 hint=5 block=1672 off=40 buffer=0x7ffc88218fb2\ninit: diff=0\nLOOP ENTRY: i=0 diff(before)=0\ndiff assigned: diff=5 size-i=5 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=5 block=1672 off+i=40 diff=5)\nmemcmp res=-14 (i=0 diff=5)\nRETURN cmp ret=1\nlfs_bd_cmp START: size=4 hint=4 block=1672 off=88 buffer=0x7ffc88218fb2\ninit: diff=0\nLOOP ENTRY: i=0 diff(before)=0\ndiff assigned: diff=4 size-i=4 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=4 block=1672 off+i=88 diff=4)\nmemcmp res=-11 (i=0 diff=4)\nRETURN cmp ret=1\nlfs_bd_cmp START: size=64 hint=64 block=1283 off=0 buffer=0x555b65009010\ninit: diff=0\nLOOP ENTRY: i=0 diff(before)=0\ndiff assigned: diff=8 size-i=64 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=64 block=1283 off+i=0 diff=8)\nmemcmp res=0 (i=0 diff=8)\nLOOP EXIT: will increment i by diff -> next i=8\nLOOP ENTRY: i=8 diff(before)=8\ndiff assigned: diff=8 size-i=56 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=56 block=1283 off+i=8 diff=8)\nmemcmp res=0 (i=8 diff=8)\nLOOP EXIT: will increment i by diff -> next i=16\nLOOP ENTRY: i=16 diff(before)=8\ndiff assigned: diff=8 size-i=48 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=48 block=1283 off+i=16 diff=8)\nmemcmp res=0 (i=16 diff=8)\nLOOP EXIT: will increment i by diff -> next i=24\nLOOP ENTRY: i=24 diff(before)=8\ndiff assigned: diff=8 size-i=40 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=40 block=1283 off+i=24 diff=8)\nmemcmp res=0 (i=24 diff=8)\nLOOP EXIT: will increment i by diff -> next i=32\nLOOP ENTRY: i=32 diff(before)=8\ndiff assigned: diff=8 size-i=32 sizeof(dat)=8\nlfs_bd_read returned err=0 (hint-i=32 block=1283 off+i="
}