{
  "result": "success",
  "message": "ENTER lfs_ctz_extend: head=0x503, size=512\nlfs_alloc -> err=0, nblock=0x504\nAbout to erase nblock=0x504\nlfs_bd_erase -> err=0 for nblock=0x504\nComputed noff=512 index=0\nProbe pcache->size=64, cfg.cache_size=64, cfg.prog_size=16, computed_diff=64\nAppending block: index=1 skips=1 head=0x503\nProg header: nblock=0x504 off=0 nhead=0x503\nlfs_bd_prog(header) -> err=0 (i=0)\nEXIT lfs_ctz_extend: success (appended) block=0x504 off=4\nENTER lfs_ctz_extend: head=0x504, size=1020\nlfs_alloc -> err=0, nblock=0x505\nAbout to erase nblock=0x505\nlfs_bd_erase -> err=0 for nblock=0x505\nComputed noff=512 index=1\nProbe pcache->size=64, cfg.cache_size=64, cfg.prog_size=16, computed_diff=64\nAppending block: index=2 skips=2 head=0x504\nProg header: nblock=0x505 off=0 nhead=0x504\nlfs_bd_prog(header) -> err=0 (i=0)\nReading next header from nhead=0x504 at off=0\nlfs_bd_read(header) -> err=0 next_nhead=0x503\nProg header: nblock=0x505 off=4 nhead=0x503\nlfs_bd_prog(header) -> err=0 (i=1)\nEXIT lfs_ctz_extend: success (appended) block=0x505 off=8\nENTER lfs_ctz_extend: head=0x505, size=1524\nlfs_alloc -> err=0, nblock=0x506\nAbout to erase nblock=0x506\nlfs_bd_erase -> err=0 for nblock=0x506\nComputed noff=512 index=2\nProbe pcache->size=64, cfg.cache_size=64, cfg.prog_size=16, computed_diff=64\nAppending block: index=3 skips=1 head=0x505\nProg header: nblock=0x506 off=0 nhead=0x505\nlfs_bd_prog(header) -> err=0 (i=0)\nEXIT lfs_ctz_extend: success (appended) block=0x506 off=4\nENTER lfs_ctz_extend: head=0x506, size=2032\nlfs_alloc -> err=0, nblock=0x507\nAbout to erase nblock=0x507\nlfs_bd_erase -> err=0 for nblock=0x507\nComputed noff=512 index=3\nProbe pcache->size=64, cfg.cache_size=64, cfg.prog_size=16, computed_diff=64\nAppending block: index=4 skips=3 head=0x506\nProg header: nblock=0x507 off=0 nhead=0x506\nlfs_bd_prog(header) -> err=0 (i=0)\nReading next header from nhead=0x506 at off=0\nlfs_bd_read(header) -> err=0 next_nhead=0x505\nProg header: nblock=0x507 off=4 nhead=0x505\nlfs_bd_prog(header) -> err=0 (i=1)\nReading next header from nhead=0x505 at off=4\nlfs_bd_read(header) -> err=0 next_nhead=0x503\nProg header: nblock=0x507 off=8 nhead=0x503\nlfs_bd_prog(header) -> err=0 (i=2)\nEXIT lfs_ctz_extend: success (appended) block=0x507 off=12\nENTER lfs_ctz_extend: head=0x507, size=2532\nlfs_alloc -> err=0, nblock=0x508\nAbout to erase nblock=0x508\nlfs_bd_erase -> err=0 for nblock=0x508\nComputed noff=512 index=4\nProbe pcache->size=64, cfg.cache_size=64, cfg.prog_size=16, computed_diff=64\nAppending block: index=5 skips=1 head=0x507\nProg header: nblock=0x508 off=0 nhead=0x507\nlfs_bd_prog(header) -> err=0 (i=0)\nEXIT lfs_ctz_extend: success (appended) block=0x508 off=4\nENTER lfs_ctz_extend: head=0x508, size=3040\nlfs_alloc -> err=0, nblock=0x509\nAbout to erase nblock=0x509\nlfs_bd_erase -> err=0 for nblock=0x509\nComputed noff=512 index=5\nProbe pcache->size=64, cfg.cache_size=64, cfg.prog_size=16, computed_diff=64\nAppending block: index=6 skips=2 head=0x508\nProg header: nblock=0x509 off=0 nhead=0x508\nlfs_bd_prog(header) -> err=0 (i=0)\nReading next header from nhead=0x508 at off=0\nlfs_bd_read(header) -> err=0 next_nhead=0x507\nProg header: nblock=0x509 off=4 nhead=0x507\nlfs_bd_prog(header) -> err=0 (i=1)\nEXIT lfs_ctz_extend: success (appended) block=0x509 off=8\nENTER lfs_ctz_extend: head=0x509, size=3544\nlfs_alloc -> err=0, nblock=0x50a\nAbout to erase nblock=0x50a\nlfs_bd_erase -> err=0 for nblock=0x50a\nComputed noff=512 index=6\nProbe pcache->size=64, cfg.cache_size=64, cfg.prog_size=16, computed_diff=64\nAppending block: index=7 skips=1 head=0x509\nProg header: nblock=0x50a off=0 nhead=0x509\nlfs_bd_prog(header) -> err=0 (i=0)\nEXIT lfs_ctz_extend: success (appended) block=0x50a off=4\nENTER lfs_ctz_extend: head=0x50a, size=4052\nlfs_alloc -> err=0, nblock=0x50b\nAbout to erase nblock=0x50b\nlfs_bd_erase -> err=0 for nblock=0x50b\nComputed noff=512 index=7\nProbe pcache->size=64, cfg.cache_size=64, cfg.prog_size=16, computed_diff=64\nAppending block: index=8 skips=4 head=0x50a\nProg header: nblock=0x50b off=0 nhead=0x50a\nlfs_bd_prog(header) -> err=0 (i=0)\nReading next header from nhead=0x50a at off=0\n"
}