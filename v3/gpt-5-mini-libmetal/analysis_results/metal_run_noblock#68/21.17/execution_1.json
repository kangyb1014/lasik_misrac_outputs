{
  "result": "success",
  "message": "metal_run_noblock ENTRY: threads=10, child=0x564c4636e823, arg=0x7ffeb0a7ad4c, tids=0x7ffeb0a7ac90, threads_out=0x7ffeb0a7ad00\ncreating thread: index=0\npthread_create returned rc=0 for index=0\nafter negation: error=0 (rc=0)\ncreating thread: index=1\npthread_create returned rc=0 for index=1\nafter negation: error=0 (rc=0)\ncreating thread: index=2\npthread_create returned rc=0 for index=2\nafter negation: error=0 (rc=0)\ncreating thread: index=3\npthread_create returned rc=0 for index=3\nafter negation: error=0 (rc=0)\ncreating thread: index=4\npthread_create returned rc=0 for index=4\nafter negation: error=0 (rc=0)\ncreating thread: index=5\npthread_create returned rc=0 for index=5\nafter negation: error=0 (rc=0)\ncreating thread: index=6\npthread_create returned rc=0 for index=6\nafter negation: error=0 (rc=0)\ncreating thread: index=7\npthread_create returned rc=0 for index=7\nafter negation: error=0 (rc=0)\ncreating thread: index=8\npthread_create returned rc=0 for index=8\nafter negation: error=0 (rc=0)\ncreating thread: index=9\npthread_create returned rc=0 for index=9\nafter negation: error=0 (rc=0)\nthreads_out set to 10\nmetal_run_noblock EXIT: returning error=0\nmetal_run_noblock ENTRY: threads=10, child=0x564c4636eddc, arg=0x7ffeb0a7ad5c, tids=0x7ffeb0a7aca0, threads_out=0x7ffeb0a7ad10\ncreating thread: index=0\npthread_create returned rc=0 for index=0\nafter negation: error=0 (rc=0)\ncreating thread: index=1\npthread_create returned rc=0 for index=1\nafter negation: error=0 (rc=0)\ncreating thread: index=2\npthread_create returned rc=0 for index=2\nafter negation: error=0 (rc=0)\ncreating thread: index=3\npthread_create returned rc=0 for index=3\nafter negation: error=0 (rc=0)\ncreating thread: index=4\npthread_create returned rc=0 for index=4\nafter negation: error=0 (rc=0)\ncreating thread: index=5\npthread_create returned rc=0 for index=5\nafter negation: error=0 (rc=0)\ncreating thread: index=6\npthread_create returned rc=0 for index=6\nafter negation: error=0 (rc=0)\ncreating thread: index=7\npthread_create returned rc=0 for index=7\nafter negation: error=0 (rc=0)\ncreating thread: index=8\npthread_create returned rc=0 for index=8\nafter negation: error=0 (rc=0)\ncreating thread: index=9\npthread_create returned rc=0 for index=9\nafter negation: error=0 (rc=0)\nthreads_out set to 10\nmetal_run_noblock EXIT: returning error=0\nmetal_run_noblock ENTRY: threads=10, child=0x564c4636f42e, arg=0x564c46374198, tids=0x7ffeb0a7aca0, threads_out=0x7ffeb0a7ad10\ncreating thread: index=0\npthread_create returned rc=0 for index=0\nafter negation: error=0 (rc=0)\ncreating thread: index=1\npthread_create returned rc=0 for index=1\nafter negation: error=0 (rc=0)\ncreating thread: index=2\npthread_create returned rc=0 for index=2\nafter negation: error=0 (rc=0)\ncreating thread: index=3\npthread_create returned rc=0 for index=3\nafter negation: error=0 (rc=0)\ncreating thread: index=4\npthread_create returned rc=0 for index=4\nafter negation: error=0 (rc=0)\ncreating thread: index=5\npthread_create returned rc=0 for index=5\nafter negation: error=0 (rc=0)\ncreating thread: index=6\npthread_create returned rc=0 for index=6\nafter negation: error=0 (rc=0)\ncreating thread: index=7\npthread_create returned rc=0 for index=7\nafter negation: error=0 (rc=0)\ncreating thread: index=8\npthread_create returned rc=0 for index=8\nafter negation: error=0 (rc=0)\ncreating thread: index=9\npthread_create returned rc=0 for index=9\nafter negation: error=0 (rc=0)\nthreads_out set to 10\nmetal_run_noblock EXIT: returning error=0\nmetal_run_noblock ENTRY: threads=10, child=0x564c4636fc0e, arg=(nil), tids=0x7ffeb0a7ad10, threads_out=0x7ffeb0a7ad08\ncreating thread: index=0\npthread_create returned rc=0 for index=0\nafter negation: error=0 (rc=0)\ncreating thread: index=1\npthread_create returned rc=0 for index=1\nafter negation: error=0 (rc=0)\ncreating thread: index=2\npthread_create returned rc=0 for index=2\nafter negation: error=0 (rc=0)\ncreating thread: index=3\npthread_create returned rc=0 for index=3\nafter negation: error=0 (rc=0)\ncreating thread: index=4\npthread_create returned rc=0 for index=4\nafter negation: error=0 (rc=0)\ncreating t"
}