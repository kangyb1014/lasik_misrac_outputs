{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 14.2 is: A for loop shall be well-formed.\nThe three clauses of a for statement are the:\n1. First clause shall be empty or an expression whose set the value of the loop counter or define and intialize the loop counter.\n2. Second clause shall be an expression that has no persistent side effects, and shall use the loop counter and optionally loop control flags, and shall not use any other object that is modified in the for loop body.\n3.Third clause shall be an expression whose modify only the value of the loop counter, and shall not use objects that are modified in the for loop body.\n4. There shall only be one loop counter in a for loop, which shall not be modified in for loop body. A loop control flag is defined as single identifier denoting an object with Boolean type that is used in the second clause. The behaviour of a for loop body includes the behaviour of any functions called within that statement. \n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of metal_linux_bus_close:\n```c\nstatic void metal_linux_bus_close(struct metal_bus *bus)\n{\n\tstruct linux_bus *lbus = to_linux_bus(bus);\n\tstruct linux_driver *ldrv;\n\n\tfor_each_linux_driver(lbus, ldrv) {\n\t\tif (ldrv->sdrv)\n\t\t\tsysfs_close_driver(ldrv->sdrv);\n\t\tldrv->sdrv = NULL;\n\t}\n\n\tsysfs_close_bus(lbus->sbus);\n\tlbus->sbus = NULL;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function metal_linux_bus_close:\n#define for_each_linux_driver(lbus, ldrv) for((ldrv)=lbus->drivers;(ldrv)->drv_name;(ldrv)++)\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nfor_each_linux_driver(lbus, ldrv) {\n```\nFocus on the above code fragment and judge whether it violates the rule 14.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "The for macro expands to: for ((ldrv) = lbus->drivers; (ldrv)->drv_name; (ldrv)++). The first clause initializes the single loop counter (ldrv). The second clause only reads a member of the loop counter and has no persistent side effects in the shown code. The third clause only increments the loop counter. The loop body does not modify ldrv itself (only ldrv->sdrv), so the loop is well-formed per Rule 14.2. (A violating scenario would be if any function called in the body \u2014 e.g. sysfs_close_driver \u2014 or the loop body itself modified the drv_name member or the loop counter object; then the second/third clause would be using an object that is modified in the body and Rule 14.2 would be violated.)"
}