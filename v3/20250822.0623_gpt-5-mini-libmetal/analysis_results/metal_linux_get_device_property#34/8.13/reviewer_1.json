{
  "user_message": "An agent A claimed that the following metal_linux_get_device_property code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of metal_linux_get_device_property.\n```c\nint metal_linux_get_device_property(struct metal_device *device,\n\t\t\t\t    const char *property_name,\n\t\t\t\t    void *output, int len)\n{\n\tint fd = 0;\n\tint status = 0;\n\tconst int flags = O_RDONLY;\n\tconst int mode = S_IRUSR | S_IRGRP | S_IROTH;\n\tstruct linux_device *ldev = to_linux_device(device);\n\tchar path[PATH_MAX];\n\n\tsnprintf(path, sizeof(path), \"%s/of_node/%s\",\n\t\t\t ldev->sdev->path, property_name);\n\tfd = open(path, flags, mode);\n\tif (fd < 0)\n\t\treturn -errno;\n\tif (read(fd, output, len) < 0) {\n\t\tstatus = -errno;\n\t\tclose(fd);\n\t\treturn status;\n\t}\n\n\tstatus = close(fd);\n\treturn status < 0 ? -errno : 0;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe local pointer ldev is declared as struct linux_device * but in this function it is only used for read-only access (ldev->sdev->path is read). Therefore it could and should be declared as const struct linux_device *ldev = to_linux_device(device); to prevent accidental modification. If ldev is not modified elsewhere in the function or passed to APIs that require a non-const pointer, the non-const declaration violates MISRA C 2023 Rule 8.13.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. In the function ldev is only used for read-only access (ldev->sdev->path) and is never used to modify the linux_device object or passed to APIs that require a mutable pointer. MISRA C 2023 Rule 8.13 recommends that pointers should point to const-qualified types whenever possible. Declaring ldev as const struct linux_device *ldev = to_linux_device(device); is safe (assigning a non-const pointer to a pointer-to-const is permitted) and prevents accidental modification, so the current non-const declaration violates the intent of Rule 8.13."
}