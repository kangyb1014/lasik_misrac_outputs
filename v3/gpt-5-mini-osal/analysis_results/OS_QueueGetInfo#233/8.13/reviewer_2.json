{
  "user_message": "An agent A claimed that the following OS_QueueGetInfo code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of OS_QueueGetInfo.\n```c\nint32 OS_QueueGetInfo(osal_id_t queue_id, OS_queue_prop_t *queue_prop)\n{\n    OS_common_record_t *record;\n    int32               return_code;\n    OS_object_token_t   token;\n\n    /* Check parameters */\n    OS_CHECK_POINTER(queue_prop);\n\n    memset(queue_prop, 0, sizeof(OS_queue_prop_t));\n\n    return_code = OS_ObjectIdGetById(OS_LOCK_MODE_GLOBAL, LOCAL_OBJID_TYPE, queue_id, &token);\n    if (return_code == OS_SUCCESS)\n    {\n        record = OS_OBJECT_TABLE_GET(OS_global_queue_table, token);\n\n        strncpy(queue_prop->name, record->name_entry, sizeof(queue_prop->name) - 1);\n        queue_prop->creator = record->creator;\n\n        /*\n         * Currently there are no additional queue details provided by the impl layer -\n         * But this could be added in the future (i.e. current/max depth, msg size, etc)\n         */\n\n        OS_ObjectIdRelease(&token);\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe local variable 'record' is declared as 'OS_common_record_t *record' but is only used to read fields (record->name_entry, record->creator) after being obtained via OS_OBJECT_TABLE_GET. According to MISRA C 2023 Rule 8.13, the pointer should be const-qualified whenever possible (e.g. 'const OS_common_record_t *record'), so the non-const declaration constitutes a violation.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\n[OS_QueueGetInfo] queue_id=3735928559 return_code=-35 token_addr=0x7ffd50cdc3b0 record_addr=(nil)\n[OS_QueueGetInfo] queue_id=0 return_code=-35 token_addr=0x7ffd50cdc3b0 record_addr=(nil)\n\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. In OS_QueueGetInfo the local variable record is only used to read fields (record->name_entry and record->creator) and is never used to modify the underlying object. MISRA C 2023 Rule 8.13 requires that a pointer should point to a const-qualified type whenever possible, so the pointer should be declared as 'const OS_common_record_t *record' here. Assigning the non-const result of OS_OBJECT_TABLE_GET to a const-qualified pointer is allowed and would resolve the violation. The execution log entries showing record_addr=(nil) are unrelated to the const-qualification issue."
}