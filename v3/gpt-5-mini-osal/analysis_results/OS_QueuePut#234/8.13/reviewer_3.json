{
  "user_message": "An agent A claimed that the following OS_QueuePut code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of OS_QueuePut.\n```c\nint32 OS_QueuePut(osal_id_t queue_id, const void *data, size_t size, uint32 flags)\n{\n    OS_object_token_t           token;\n    int32                       return_code;\n    OS_queue_internal_record_t *queue;\n\n    /* Check Parameters */\n    OS_CHECK_POINTER(data);\n    OS_CHECK_SIZE(size);\n\n    return_code = OS_ObjectIdGetById(OS_LOCK_MODE_NONE, LOCAL_OBJID_TYPE, queue_id, &token);\n    if (return_code == OS_SUCCESS)\n    {\n        queue = OS_OBJECT_TABLE_GET(OS_queue_table, token);\n\n        if (size > queue->max_size)\n        {\n            /*\n            ** The buffer that the user is passing in is too large\n            */\n            return_code = OS_QUEUE_INVALID_SIZE;\n        }\n        else\n        {\n            return_code = OS_QueuePut_Impl(&token, data, size, flags);\n        }\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe local variable 'queue' is declared as a non-const pointer (OS_queue_internal_record_t *queue) and is assigned from OS_OBJECT_TABLE_GET. In the shown code it is only used for read-only access (queue->max_size) and is never modified, so the pointer could and should be declared to point to a const-qualified type (const OS_queue_internal_record_t *). Because a non-const pointer is used where a const-qualified pointer would suffice, this violates MISRA C 2023 Rule 8.13.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. In the shown function the local variable 'queue' is only used for read-only access (queue->max_size) and there is no indication in the snippet that the function modifies the object via that pointer. MISRA C 2023 Rule 8.13 recommends that pointers point to const-qualified types whenever possible; here it is possible to declare\n\n    const OS_queue_internal_record_t *queue;\n\nand assign the result of OS_OBJECT_TABLE_GET to it (adding const is permitted). The only caveats that could prevent making it const are: (a) other uses in the same translation unit that modify *queue via this variable (not shown), or (b) macros/APIs that require a non-const pointer. Given the code shown, neither applies, so the non-const pointer is a violation of Rule 8.13."
}