{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of OS_ObjectIdIteratorGetNext:\n```c\nbool OS_ObjectIdIteratorGetNext(OS_object_iter_t *iter)\n{\n    OS_common_record_t *record;\n    bool                got_next;\n\n    got_next           = false;\n    iter->token.obj_id = OS_OBJECT_ID_UNDEFINED;\n\n    do\n    {\n        ++iter->token.obj_idx;\n        if (iter->token.obj_idx >= iter->limit)\n        {\n            break;\n        }\n\n        record = OS_OBJECT_TABLE_GET(iter->base, iter->token);\n        if (iter->match == NULL || iter->match(iter->arg, &iter->token, record))\n        {\n            iter->token.obj_id = record->active_id;\n            got_next           = true;\n        }\n    } while (!got_next);\n\n    return got_next;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "record = OS_OBJECT_TABLE_GET(iter->base, iter->token);",
    "OS_common_record_t *record;",
    "iter->token.obj_id = record->active_id;",
    "if (iter->match == NULL || iter->match(iter->arg, &iter->token, record))"
  ],
  "explanation": "Fragments not listed do not need investigation for Rule 8.13 because they do not present pointers that could reasonably be const-qualified: the function parameter OS_object_iter_t *iter and its members are modified in this routine (e.g. ++iter->token.obj_idx and assigning iter->token.obj_id), so the pointer target must be mutable here. Simple scalar variables (bool got_next), control-flow statements (do/while, break), comparisons against iter->limit, and the NULL check of iter->match are not pointer targets that can be made const. The macro invocation OS_OBJECT_TABLE_GET(...) is included via the assignment to 'record' above; other uses of iter->token and iter->arg within the function are either modified by this function or are part of the match call already listed. Therefore only the listed fragments (declaration and uses of 'record', the match call passing 'record' and '&iter->token', and the read of record->active_id) warrant investigation to determine whether those pointer targets should be const-qualified."
}