{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of UT_GetStubRetcodeAndCount:\n```c\nbool UT_GetStubRetcodeAndCount(UT_EntryKey_t FuncKey, int32 *Retcode, int32 *Count)\n{\n    UT_StubTableEntry_t *StubPtr;\n    bool                 Result;\n\n    StubPtr = UT_GetStubEntry(FuncKey, UT_ENTRYTYPE_COUNTER);\n    if (StubPtr != NULL)\n    {\n        *Count   = StubPtr->Data.Rc.Count;\n        *Retcode = StubPtr->Data.Rc.Value;\n        Result   = true;\n    }\n    else\n    {\n        Result = false;\n    }\n\n    return Result;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "StubPtr = UT_GetStubEntry(FuncKey, UT_ENTRYTYPE_COUNTER);",
    "*Count   = StubPtr->Data.Rc.Count;",
    "UT_StubTableEntry_t *StubPtr;",
    "*Retcode = StubPtr->Data.Rc.Value;"
  ],
  "explanation": "Other fragments need not be investigated for MISRA C 2023 Rule 8.13 because they do not involve pointers that could reasonably have a const-qualified pointee: the parameters int32 *Retcode and int32 *Count are used as output locations (the function stores into *Retcode and *Count), so their pointee types cannot be const. The local scalar (Result) and the function return type are not relevant to pointer const-qualification. The only pointer in this function that is only read (not used to modify the pointee) is the stub-entry pointer, which is why its declaration and uses are flagged above; assigning the non-const result of UT_GetStubEntry to a pointer-to-const would be permissible if the implementation intends not to modify the referenced data."
}