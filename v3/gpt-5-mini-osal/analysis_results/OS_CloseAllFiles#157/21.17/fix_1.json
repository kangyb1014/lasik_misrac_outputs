{
  "user_message": "<target code>Here is the code that failed to compile:\n```c\nstatic FILE *open_log(void)\n{\n    FILE *fp = fopen(\"/tmp/logs/1579.txt\", \"a\");\n    if (fp)\n    {\n        /* Prefix to make entries easier to correlate. */\n        fprintf(fp, \"---- OS_CloseAllFiles probe entry ----\\n\");\n        fflush(fp);\n    }\n    return fp;\n}\nstatic void close_log(FILE *fp)\n{\n    if (fp)\n    {\n        fprintf(fp, \"---- end probe entry ----\\n\\n\");\n        fclose(fp);\n    }\n}\n\nint32 OS_CloseAllFiles(void)\n{\n    int32            return_code;\n    int32            close_code;\n    OS_object_iter_t iter;\n    FILE *log_fp = open_log();\n\n    return_code = OS_SUCCESS;\n\n    if (log_fp)\n    {\n        fprintf(log_fp, \"OS_CloseAllFiles: called. return_code initial=%\" PRId32 \"\\n\", return_code);\n        fprintf(log_fp, \"OS_object_iter_t address=%p\\n\", (void *)&iter);\n        fflush(log_fp);\n    }\n\n    OS_ObjectIdIterateActive(LOCAL_OBJID_TYPE, &iter);\n\n    if (log_fp)\n    {\n        fprintf(log_fp, \"OS_ObjectIdIterateActive returned; ready to iterate.\\n\");\n        fflush(log_fp);\n    }\n\n    while (OS_ObjectIdIteratorGetNext(&iter))\n    {\n        /* call OS_close() on the entry referred to by the iterator */\n        if (log_fp)\n        {\n            fprintf(log_fp, \"Iterator advanced: iter address=%p\\n\", (void *)&iter);\n            fflush(log_fp);\n        }\n\n        close_code = OS_ObjectIdIteratorProcessEntry(&iter, OS_FileIteratorClose);\n\n        if (log_fp)\n        {\n            fprintf(log_fp, \"OS_ObjectIdIteratorProcessEntry returned close_code=%\" PRId32 \"\\n\", close_code);\n            fflush(log_fp);\n        }\n\n        if (close_code != OS_SUCCESS)\n        {\n            if (log_fp)\n            {\n                fprintf(log_fp, \"Non-success close_code encountered: %\" PRId32 \" - recording as return_code\\n\", close_code);\n                fflush(log_fp);\n            }\n            return_code = close_code;\n        }\n    }\n\n    OS_ObjectIdIteratorDestroy(&iter);\n\n    if (log_fp)\n    {\n        fprintf(log_fp, \"OS_ObjectIdIteratorDestroy called. final return_code=%\" PRId32 \"\\n\", return_code);\n        fflush(log_fp);\n    }\n\n    close_log(log_fp);\n\n    return return_code;\n}\n\n```\n</target code>\n<build error>\nThe build failed with the following error:\n```\nIn file included from /tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:1:\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c: In function 'OS_CloseAllFiles':\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:630:75: error: expected ')' before 'PRId32'\n  630 |         fprintf(log_fp, \"OS_CloseAllFiles: called. return_code initial=%\" PRId32 \"\\n\", return_code);\n      |                                                                           ^~~~~~\n/tmp/tmppjiv94bo/src/src/unit-test-coverage/ut-stubs/override_inc/stdio.h:45:34: note: in definition of macro 'fprintf'\n   45 | #define fprintf(...) OCS_fprintf(__VA_ARGS__)\n      |                                  ^~~~~~~~~~~\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:55:1: note: 'PRId32' is defined in header '<inttypes.h>'; did you forget to '#include <inttypes.h>'?\n   54 | #include \"osapi-sockets.h\"\n  +++ |+#include <inttypes.h>\n   55 | \nIn file included from /tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:1:\n/tmp/tmppjiv94bo/src/src/unit-test-coverage/ut-stubs/override_inc/stdio.h:45:33: note: to match this '('\n   45 | #define fprintf(...) OCS_fprintf(__VA_ARGS__)\n      |                                 ^\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:630:9: note: in expansion of macro 'fprintf'\n  630 |         fprintf(log_fp, \"OS_CloseAllFiles: called. return_code initial=%\" PRId32 \"\\n\", return_code);\n      |         ^~~~~~~\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:656:85: error: expected ')' before 'PRId32'\n  656 |             fprintf(log_fp, \"OS_ObjectIdIteratorProcessEntry returned close_code=%\" PRId32 \"\\n\", close_code);\n      |                                                                                     ^~~~~~\n/tmp/tmppjiv94bo/src/src/unit-test-coverage/ut-stubs/override_inc/stdio.h:45:34: note: in definition of macro 'fprintf'\n   45 | #define fprintf(...) OCS_fprintf(__VA_ARGS__)\n      |                                  ^~~~~~~~~~~\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:656:85: note: 'PRId32' is defined in header '<inttypes.h>'; did you forget to '#include <inttypes.h>'?\n  656 |             fprintf(log_fp, \"OS_ObjectIdIteratorProcessEntry returned close_code=%\" PRId32 \"\\n\", close_code);\n      |                                                                                     ^~~~~~\n/tmp/tmppjiv94bo/src/src/unit-test-coverage/ut-stubs/override_inc/stdio.h:45:34: note: in definition of macro 'fprintf'\n   45 | #define fprintf(...) OCS_fprintf(__VA_ARGS__)\n      |                                  ^~~~~~~~~~~\n/tmp/tmppjiv94bo/src/src/unit-test-coverage/ut-stubs/override_inc/stdio.h:45:33: note: to match this '('\n   45 | #define fprintf(...) OCS_fprintf(__VA_ARGS__)\n      |                                 ^\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:656:13: note: in expansion of macro 'fprintf'\n  656 |             fprintf(log_fp, \"OS_ObjectIdIteratorProcessEntry returned close_code=%\" PRId32 \"\\n\", close_code);\n      |             ^~~~~~~\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:664:73: error: expected ')' before 'PRId32'\n  664 |                 fprintf(log_fp, \"Non-success close_code encountered: %\" PRId32 \" - recording as return_code\\n\", close_code);\n      |                                                                         ^~~~~~\n/tmp/tmppjiv94bo/src/src/unit-test-coverage/ut-stubs/override_inc/stdio.h:45:34: note: in definition of macro 'fprintf'\n   45 | #define fprintf(...) OCS_fprintf(__VA_ARGS__)\n      |                                  ^~~~~~~~~~~\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:664:73: note: 'PRId32' is defined in header '<inttypes.h>'; did you forget to '#include <inttypes.h>'?\n  664 |                 fprintf(log_fp, \"Non-success close_code encountered: %\" PRId32 \" - recording as return_code\\n\", close_code);\n      |                                                                         ^~~~~~\n/tmp/tmppjiv94bo/src/src/unit-test-coverage/ut-stubs/override_inc/stdio.h:45:34: note: in definition of macro 'fprintf'\n   45 | #define fprintf(...) OCS_fprintf(__VA_ARGS__)\n      |                                  ^~~~~~~~~~~\n/tmp/tmppjiv94bo/src/src/unit-test-coverage/ut-stubs/override_inc/stdio.h:45:33: note: to match this '('\n   45 | #define fprintf(...) OCS_fprintf(__VA_ARGS__)\n      |                                 ^\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:664:17: note: in expansion of macro 'fprintf'\n  664 |                 fprintf(log_fp, \"Non-success close_code encountered: %\" PRId32 \" - recording as return_code\\n\", close_code);\n      |                 ^~~~~~~\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:675:82: error: expected ')' before 'PRId32'\n  675 |         fprintf(log_fp, \"OS_ObjectIdIteratorDestroy called. final return_code=%\" PRId32 \"\\n\", return_code);\n      |                                                                                  ^~~~~~\n/tmp/tmppjiv94bo/src/src/unit-test-coverage/ut-stubs/override_inc/stdio.h:45:34: note: in definition of macro 'fprintf'\n   45 | #define fprintf(...) OCS_fprintf(__VA_ARGS__)\n      |                                  ^~~~~~~~~~~\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:675:82: note: 'PRId32' is defined in header '<inttypes.h>'; did you forget to '#include <inttypes.h>'?\n  675 |         fprintf(log_fp, \"OS_ObjectIdIteratorDestroy called. final return_code=%\" PRId32 \"\\n\", return_code);\n      |                                                                                  ^~~~~~\n/tmp/tmppjiv94bo/src/src/unit-test-coverage/ut-stubs/override_inc/stdio.h:45:34: note: in definition of macro 'fprintf'\n   45 | #define fprintf(...) OCS_fprintf(__VA_ARGS__)\n      |                                  ^~~~~~~~~~~\n/tmp/tmppjiv94bo/src/src/unit-test-coverage/ut-stubs/override_inc/stdio.h:45:33: note: to match this '('\n   45 | #define fprintf(...) OCS_fprintf(__VA_ARGS__)\n      |                                 ^\n/tmp/tmppjiv94bo/src/src/os/shared/src/osapi-file.c:675:9: note: in expansion of macro 'fprintf'\n  675 |         fprintf(log_fp, \"OS_ObjectIdIteratorDestroy called. final return_code=%\" PRId32 \"\\n\", return_code);\n      |         ^~~~~~~\ngmake[2]: *** [unit-test-coverage/shared/CMakeFiles/utobj_coverage-shared-file.dir/build.make:76: unit-test-coverage/shared/CMakeFiles/utobj_coverage-shared-file.dir/__/__/os/shared/src/osapi-file.c.o] Error 1\ngmake[1]: *** [CMakeFiles/Makefile2:3601: unit-test-coverage/shared/CMakeFiles/utobj_coverage-shared-file.dir/all] Error 2\ngmake: *** [Makefile:146: all] Error 2\n```\n</build error>\n<response format>\nProvide your answer with these answers.\n- fixed_test_code: the fixed test code that compiles successfully.\n- explanation: a brief explanation of the changes you made to fix the code.\nHere are the constraints for the test code:\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- The test code MUST preserve the original logic of OS_CloseAllFiles as much as possible.\n- You MUST not define the main function.\n- You MUST not define macros.\n- The test code MUST not contain any mock functions.\n</response format>\n<instruction>\nPlease fix the code so that it compiles successfully.\n</instruction>\n",
  "fixed_test_code": "#include <stdio.h>\n#include <inttypes.h>\n#include <stdint.h>\n\n/* Minimal type definitions so this translation unit compiles on its own.\n   These are not mock implementations; they are just declarations/typedefs\n   to allow compilation. The real implementations exist elsewhere in the\n   project and will be linked at link time. */\n\ntypedef int32_t int32;\n\ntypedef struct {\n    void *opaque;\n} OS_object_iter_t;\n\n/* Use constants rather than macros to avoid defining macros as requested. */\nstatic const int32 OS_SUCCESS = 0;\nstatic const int LOCAL_OBJID_TYPE = 0;\n\n/* External functions (declared only) - real implementations provided elsewhere. */\nvoid OS_ObjectIdIterateActive(int type, OS_object_iter_t *iter);\nint OS_ObjectIdIteratorGetNext(OS_object_iter_t *iter);\nint32 OS_ObjectIdIteratorProcessEntry(OS_object_iter_t *iter, int32 (*func)(int32));\nint32 OS_FileIteratorClose(int32 id);\nvoid OS_ObjectIdIteratorDestroy(OS_object_iter_t *iter);\n\nstatic FILE *open_log(void)\n{\n    FILE *fp = fopen(\"/tmp/logs/1579.txt\", \"a\");\n    if (fp)\n    {\n        /* Prefix to make entries easier to correlate. */\n        fprintf(fp, \"---- OS_CloseAllFiles probe entry ----\\n\");\n        fflush(fp);\n    }\n    return fp;\n}\nstatic void close_log(FILE *fp)\n{\n    if (fp)\n    {\n        fprintf(fp, \"---- end probe entry ----\\n\\n\");\n        fclose(fp);\n    }\n}\n\nint32 OS_CloseAllFiles(void)\n{\n    int32            return_code;\n    int32            close_code;\n    OS_object_iter_t iter;\n    FILE *log_fp = open_log();\n\n    return_code = OS_SUCCESS;\n\n    if (log_fp)\n    {\n        fprintf(log_fp, \"OS_CloseAllFiles: called. return_code initial=%\" PRId32 \"\\n\", return_code);\n        fprintf(log_fp, \"OS_object_iter_t address=%p\\n\", (void *)&iter);\n        fflush(log_fp);\n    }\n\n    OS_ObjectIdIterateActive(LOCAL_OBJID_TYPE, &iter);\n\n    if (log_fp)\n    {\n        fprintf(log_fp, \"OS_ObjectIdIterateActive returned; ready to iterate.\\n\");\n        fflush(log_fp);\n    }\n\n    while (OS_ObjectIdIteratorGetNext(&iter))\n    {\n        /* call OS_close() on the entry referred to by the iterator */\n        if (log_fp)\n        {\n            fprintf(log_fp, \"Iterator advanced: iter address=%p\\n\", (void *)&iter);\n            fflush(log_fp);\n        }\n\n        close_code = OS_ObjectIdIteratorProcessEntry(&iter, OS_FileIteratorClose);\n\n        if (log_fp)\n        {\n            fprintf(log_fp, \"OS_ObjectIdIteratorProcessEntry returned close_code=%\" PRId32 \"\\n\", close_code);\n            fflush(log_fp);\n        }\n\n        if (close_code != OS_SUCCESS)\n        {\n            if (log_fp)\n            {\n                fprintf(log_fp, \"Non-success close_code encountered: %\" PRId32 \" - recording as return_code\\n\", close_code);\n                fflush(log_fp);\n            }\n            return_code = close_code;\n        }\n    }\n\n    OS_ObjectIdIteratorDestroy(&iter);\n\n    if (log_fp)\n    {\n        fprintf(log_fp, \"OS_ObjectIdIteratorDestroy called. final return_code=%\" PRId32 \"\\n\", return_code);\n        fflush(log_fp);\n    }\n\n    close_log(log_fp);\n\n    return return_code;\n}\n",
  "explanation": "The compile errors were caused by use of the PRId32 format macro without including <inttypes.h>. I added #include <inttypes.h> (and <stdint.h> and <stdio.h>) so PRId32 and int32_t are available. To make this unit compile standalone for testing, I added a typedef for int32 and a minimal OS_object_iter_t type and declared the external iterator-related functions and constants (OS_SUCCESS, LOCAL_OBJID_TYPE) as const values or function prototypes. No behavior/logic of OS_CloseAllFiles was changed."
}