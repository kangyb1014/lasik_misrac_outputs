{
  "user_message": "An agent A claimed that the following OS_NotifyEvent code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of OS_NotifyEvent.\n```c\nint32 OS_NotifyEvent(OS_Event_t event, osal_id_t object_id, void *data)\n{\n    int32 status;\n\n    if (OS_SharedGlobalVars.EventHandler != NULL)\n    {\n        status = OS_SharedGlobalVars.EventHandler(event, object_id, data);\n    }\n    else\n    {\n        status = OS_SUCCESS;\n    }\n\n    return status;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'void *data' is not const-qualified even though OS_NotifyEvent merely forwards it to EventHandler and does not modify the pointed-to object. Per MISRA C 2023 Rule 8.13 the pointer should be declared as 'const void *data' (and the EventHandler prototype adjusted accordingly) unless mutation of the pointed-to object is required.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "Not correct. MISRA 8.13 recommends that pointers be to const-qualified types when the pointed-to object will not be modified, but qualification must be consistent across the API. In this code OS_NotifyEvent simply forwards the data pointer to OS_SharedGlobalVars.EventHandler(event, object_id, data). Because the function forwards the pointer to a function-pointer member whose parameter type (in the visible code) is non-const, OS_NotifyEvent cannot unilaterally change its parameter to const void * without creating a prototype/signature mismatch. Without evidence that EventHandler (and all other call sites) will not modify the pointed-to object, you cannot conclude the pointer should be const. If in the wider codebase EventHandler is guaranteed not to modify the data, then both the EventHandler prototype and this wrapper should be changed to use const void *; otherwise no MISRA violation is demonstrated here."
}