{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of OS_StatusToString:\n```c\nchar *OS_StatusToString(osal_status_t status, os_status_string_t *status_string)\n{\n    char *string = NULL;\n\n    if (status_string != NULL)\n    {\n        snprintf(*status_string, sizeof(*status_string), \"%ld\", OS_StatusToInteger(status));\n        string = *status_string;\n    }\n    return string;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function OS_StatusToString:\ntypedef char os_status_string_t[OS_STATUS_STRING_LENGTH]\n...\ntypedef int32 osal_status_t\n...\nstatic inline long OS_StatusToInteger(osal_status_t Status)\n{\n    return (long)Status;\n}\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "char *string = NULL;",
    "string = *status_string;",
    "typedef char os_status_string_t[OS_STATUS_STRING_LENGTH]",
    "char *OS_StatusToString(osal_status_t status, os_status_string_t *status_string)",
    "snprintf(*status_string, sizeof(*status_string), \"%ld\", OS_StatusToInteger(status));"
  ],
  "explanation": "Only the listed fragments involve pointer types or pointer usage and therefore merit investigation under MISRA C 2023 Rule 8.13. The remaining code in the provided snippets does not introduce pointer types (e.g. osal_status_t is an integer typedef, OS_StatusToInteger takes/returns non-pointer scalar types and uses no pointer parameters), so there are no other pointer targets that could/should be const-qualified. The snprintf usage and the buffer typedef/usage are included because they involve a pointer to character storage and the function return/temporary pointer are the only other pointer-carrying constructs; these are the only places where a const qualification might be relevant and so should be reviewed."
}