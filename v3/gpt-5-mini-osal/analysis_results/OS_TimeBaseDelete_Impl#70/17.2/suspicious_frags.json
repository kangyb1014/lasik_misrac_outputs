{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 17.2 is: Functions shall not call themselves, either directly or indirectly.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of OS_TimeBaseDelete_Impl:\n```c\nint32 OS_TimeBaseDelete_Impl(const OS_object_token_t *token)\n{\n    OS_impl_timebase_internal_record_t *local;\n    int                                 status;\n\n    local = OS_OBJECT_TABLE_GET(OS_impl_timebase_table, *token);\n\n    pthread_cancel(local->handler_thread);\n\n    /*\n    ** Delete the timer\n    */\n    if (local->assigned_signal != 0)\n    {\n        status = timer_delete(local->host_timerid);\n        if (status < 0)\n        {\n            OS_DEBUG(\"Error deleting timer: %s\\n\", strerror(errno));\n            return OS_TIMER_ERR_INTERNAL;\n        }\n\n        local->assigned_signal = 0;\n    }\n\n    return OS_SUCCESS;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function OS_TimeBaseDelete_Impl:\nstatic inline osal_index_t OS_ObjectIndexFromToken(const OS_object_token_t *token)\n{\n    return token->obj_idx;\n}\n...\n#define OS_OBJECT_TABLE_GET(tbl, tok) (&tbl[OS_ObjectIndexFromToken(&(tok))])\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "status = timer_delete(local->host_timerid);",
    "#define OS_OBJECT_TABLE_GET(tbl, tok) (&tbl[OS_ObjectIndexFromToken(&(tok))])",
    "static inline osal_index_t OS_ObjectIndexFromToken(const OS_object_token_t *token)\n{\n    return token->obj_idx;\n}",
    "local = OS_OBJECT_TABLE_GET(OS_impl_timebase_table, *token);",
    "strerror(errno)",
    "OS_DEBUG(\"Error deleting timer: %s\\n\", strerror(errno));",
    "pthread_cancel(local->handler_thread);"
  ],
  "explanation": "MISRA Rule 17.2 concerns direct or indirect function recursion. The fragments selected above cover all function calls and the macro/inline used to obtain the object table entry; each of these could participate in an indirect call chain that leads back to OS_TimeBaseDelete_Impl and therefore should be investigated. Other code in the function does not perform function calls and thus cannot itself create recursion: the local variable declarations, the conditional test (if (local->assigned_signal != 0)), the assignment local->assigned_signal = 0, the return statements (return OS_TIMER_ERR_INTERNAL; return OS_SUCCESS;), comments, and simple expressions (e.g. using the token value) are not potential recursion sources and so were not included."
}