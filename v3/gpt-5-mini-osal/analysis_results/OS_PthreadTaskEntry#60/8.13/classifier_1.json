{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of OS_PthreadTaskEntry:\n```c\nstatic void *OS_PthreadTaskEntry(void *arg)\n{\n    OS_VoidPtrValueWrapper_t local_arg;\n\n    /* cppcheck-suppress unreadVariable // intentional use of other union member */\n    local_arg.opaque_arg = arg;\n    OS_TaskEntryPoint(local_arg.id); /* Never returns */\n\n    return NULL;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nstatic void *OS_PthreadTaskEntry(void *arg)\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "OS_PthreadTaskEntry is a POSIX thread start routine; its signature must be void *(*)(void *) to match pthread_create. Because the function is required to accept a non-const void * by the external API, it cannot be changed to take a const-qualified pointer. Therefore Rule 8.13 is not violated in this context."
}