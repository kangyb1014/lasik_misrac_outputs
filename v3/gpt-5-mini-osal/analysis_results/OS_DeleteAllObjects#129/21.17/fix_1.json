{
  "user_message": "<target code>Here is the code that failed to compile:\n```c\nstatic void OS_LogProbe(const char *fmt, ...)\n{\n    FILE *fp = fopen(\"/tmp/logs/1299.txt\", \"a\");\n    if (fp == NULL)\n    {\n        return;\n    }\n\n    /* Prepend a timestamp for better traceability */\n    time_t t = time(NULL);\n    if (t != (time_t)-1)\n    {\n        struct tm tm_buf;\n        if (localtime_r(&t, &tm_buf) != NULL)\n        {\n            char timestr[32];\n            if (strftime(timestr, sizeof(timestr), \"%Y-%m-%d %H:%M:%S\", &tm_buf) > 0)\n            {\n                fprintf(fp, \"%s - \", timestr);\n            }\n        }\n    }\n\n    va_list ap;\n    va_start(ap, fmt);\n    vfprintf(fp, fmt, ap);\n    va_end(ap);\n    fprintf(fp, \"\\n\");\n    fclose(fp);\n}\n\nvoid OS_DeleteAllObjects(void)\n{\n    uint32 ObjectCount;\n    uint32 TryCount;\n\n    OS_LogProbe(\"OS_DeleteAllObjects: entry\");\n\n    /*\n     * Note - this is done in a loop because some objects depend on other objects\n     * and you will not be able to delete the object until the ref count becomes zero.\n     */\n    TryCount = 0;\n    while (true)\n    {\n        ObjectCount = 0;\n        ++TryCount;\n\n        OS_LogProbe(\"Iteration %u: start (ObjectCount=%u)\", TryCount, ObjectCount);\n\n        /* Delete timers and tasks first, as they could be actively using other object types  */\n        OS_LogProbe(\"Calling OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TIMECB). Before ObjectCount=%u\", ObjectCount);\n        OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TIMECB, OS_OBJECT_CREATOR_ANY, OS_CleanUpObject, &ObjectCount);\n        OS_LogProbe(\"Returned from OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TIMECB). After ObjectCount=%u\", ObjectCount);\n\n        OS_LogProbe(\"Calling OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TIMEBASE). Before ObjectCount=%u\", ObjectCount);\n        OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TIMEBASE, OS_OBJECT_CREATOR_ANY, OS_CleanUpObject, &ObjectCount);\n        OS_LogProbe(\"Returned from OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TIMEBASE). After ObjectCount=%u\", ObjectCount);\n\n        OS_LogProbe(\"Calling OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TASK). Before ObjectCount=%u\", ObjectCount);\n        OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TASK, OS_OBJECT_CREATOR_ANY, OS_CleanUpObject, &ObjectCount);\n        OS_LogProbe(\"Returned from OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TASK). After ObjectCount=%u\", ObjectCount);\n\n        /* Then try to delete all other remaining objects of any type */\n        OS_LogProbe(\"Calling OS_ForEachObject(OS_OBJECT_CREATOR_ANY). Before ObjectCount=%u\", ObjectCount);\n        OS_ForEachObject(OS_OBJECT_CREATOR_ANY, OS_CleanUpObject, &ObjectCount);\n        OS_LogProbe(\"Returned from OS_ForEachObject(OS_OBJECT_CREATOR_ANY). After ObjectCount=%u\", ObjectCount);\n\n        if (ObjectCount == 0 || TryCount > 4)\n        {\n            OS_LogProbe(\"Loop exit condition met: ObjectCount=%u, TryCount=%u\", ObjectCount, TryCount);\n            break;\n        }\n\n        OS_LogProbe(\"Objects remain after iteration %u: ObjectCount=%u. Calling OS_TaskDelay(5)\", TryCount, ObjectCount);\n        OS_TaskDelay(5);\n    }\n\n    OS_LogProbe(\"OS_DeleteAllObjects: exit (iterations=%u)\", TryCount);\n}\n\n```\n</target code>\n<build error>\nThe build failed with the following error:\n```\n/tmp/tmplygtk_a7/src/src/os/shared/src/osapi-common.c: In function 'OS_LogProbe':\n/tmp/tmplygtk_a7/src/src/os/shared/src/osapi-common.c:378:19: error: storage size of 'tm_buf' isn't known\n  378 |         struct tm tm_buf;\n      |                   ^~~~~~\n/tmp/tmplygtk_a7/src/src/os/shared/src/osapi-common.c:391:23: note: expected '__va_list_tag *' but argument is of type 'OCS_va_list'\n  391 |     vfprintf(fp, fmt, ap);\n      |                       ^~\ngmake[2]: *** [unit-test-coverage/shared/CMakeFiles/utobj_coverage-shared-common.dir/build.make:76: unit-test-coverage/shared/CMakeFiles/utobj_coverage-shared-common.dir/__/__/os/shared/src/osapi-common.c.o] Error 1\ngmake[1]: *** [CMakeFiles/Makefile2:3291: unit-test-coverage/shared/CMakeFiles/utobj_coverage-shared-common.dir/all] Error 2\ngmake: *** [Makefile:146: all] Error 2\n```\n</build error>\n<response format>\nProvide your answer with these answers.\n- fixed_test_code: the fixed test code that compiles successfully.\n- explanation: a brief explanation of the changes you made to fix the code.\nHere are the constraints for the test code:\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- The test code MUST preserve the original logic of OS_DeleteAllObjects as much as possible.\n- You MUST not define the main function.\n- You MUST not define macros.\n- The test code MUST not contain any mock functions.\n</response format>\n<instruction>\nPlease fix the code so that it compiles successfully.\n</instruction>\n",
  "fixed_test_code": "#include <stdio.h>\n#include <time.h>\n#include <stdarg.h>\n#include <stdbool.h>\n#include <stdint.h>\n\n/* Provide a local alias for uint32 as used in the original code */\ntypedef uint32_t uint32;\n\nstatic void OS_LogProbe(const char *fmt, ...)\n{\n    FILE *fp = fopen(\"/tmp/logs/1299.txt\", \"a\");\n    if (fp == NULL)\n    {\n        return;\n    }\n\n    /* Prepend a timestamp for better traceability */\n    time_t t = time(NULL);\n    if (t != (time_t)-1)\n    {\n        struct tm tm_buf;\n        if (localtime_r(&t, &tm_buf) != NULL)\n        {\n            char timestr[32];\n            if (strftime(timestr, sizeof(timestr), \"%Y-%m-%d %H:%M:%S\", &tm_buf) > 0)\n            {\n                fprintf(fp, \"%s - \", timestr);\n            }\n        }\n    }\n\n    va_list ap;\n    va_start(ap, fmt);\n    vfprintf(fp, fmt, ap);\n    va_end(ap);\n    fprintf(fp, \"\\n\");\n    fclose(fp);\n}\n\nvoid OS_DeleteAllObjects(void)\n{\n    uint32 ObjectCount;\n    uint32 TryCount;\n\n    OS_LogProbe(\"OS_DeleteAllObjects: entry\");\n\n    /*\n     * Note - this is done in a loop because some objects depend on other objects\n     * and you will not be able to delete the object until the ref count becomes zero.\n     */\n    TryCount = 0;\n    while (true)\n    {\n        ObjectCount = 0;\n        ++TryCount;\n\n        OS_LogProbe(\"Iteration %u: start (ObjectCount=%u)\", TryCount, ObjectCount);\n\n        /* Delete timers and tasks first, as they could be actively using other object types  */\n        OS_LogProbe(\"Calling OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TIMECB). Before ObjectCount=%u\", ObjectCount);\n        OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TIMECB, OS_OBJECT_CREATOR_ANY, OS_CleanUpObject, &ObjectCount);\n        OS_LogProbe(\"Returned from OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TIMECB). After ObjectCount=%u\", ObjectCount);\n\n        OS_LogProbe(\"Calling OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TIMEBASE). Before ObjectCount=%u\", ObjectCount);\n        OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TIMEBASE, OS_OBJECT_CREATOR_ANY, OS_CleanUpObject, &ObjectCount);\n        OS_LogProbe(\"Returned from OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TIMEBASE). After ObjectCount=%u\", ObjectCount);\n\n        OS_LogProbe(\"Calling OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TASK). Before ObjectCount=%u\", ObjectCount);\n        OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TASK, OS_OBJECT_CREATOR_ANY, OS_CleanUpObject, &ObjectCount);\n        OS_LogProbe(\"Returned from OS_ForEachObjectOfType(OS_OBJECT_TYPE_OS_TASK). After ObjectCount=%u\", ObjectCount);\n\n        /* Then try to delete all other remaining objects of any type */\n        OS_LogProbe(\"Calling OS_ForEachObject(OS_OBJECT_CREATOR_ANY). Before ObjectCount=%u\", ObjectCount);\n        OS_ForEachObject(OS_OBJECT_CREATOR_ANY, OS_CleanUpObject, &ObjectCount);\n        OS_LogProbe(\"Returned from OS_ForEachObject(OS_OBJECT_CREATOR_ANY). After ObjectCount=%u\", ObjectCount);\n\n        if (ObjectCount == 0 || TryCount > 4)\n        {\n            OS_LogProbe(\"Loop exit condition met: ObjectCount=%u, TryCount=%u\", ObjectCount, TryCount);\n            break;\n        }\n\n        OS_LogProbe(\"Objects remain after iteration %u: ObjectCount=%u. Calling OS_TaskDelay(5)\", TryCount, ObjectCount);\n        OS_TaskDelay(5);\n    }\n\n    OS_LogProbe(\"OS_DeleteAllObjects: exit (iterations=%u)\", TryCount);\n}\n",
  "explanation": "Fixed compilation errors by including the headers that define struct tm and va_list: <time.h> and <stdarg.h>, and standard headers <stdio.h>, <stdbool.h>, and <stdint.h>. Also provided a typedef for uint32 (typedef uint32_t uint32;) so the code compiles when that type is used. No logic of OS_DeleteAllObjects was changed; only necessary includes and a type alias were added to resolve the reported errors."
}