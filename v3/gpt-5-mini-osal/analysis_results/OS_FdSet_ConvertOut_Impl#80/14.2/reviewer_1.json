{
  "user_message": "An agent A claimed that the following OS_FdSet_ConvertOut_Impl code violates the MISRA C 2023 rule 14.2.\n<misra_rule>\nMISRA C 2023 Rule 14.2 is A for loop shall be well-formed.\nThe three clauses of a for statement are the:\n1. First clause shall be empty or an expression whose set the value of the loop counter or define and intialize the loop counter.\n2. Second clause shall be an expression that has no persistent side effects, and shall use the loop counter and optionally loop control flags, and shall not use any other object that is modified in the for loop body.\n3.Third clause shall be an expression whose modify only the value of the loop counter, and shall not use objects that are modified in the for loop body.\n4. There shall only be one loop counter in a for loop, which shall not be modified in for loop body. A loop control flag is defined as single identifier denoting an object with Boolean type that is used in the second clause. The behaviour of a for loop body includes the behaviour of any functions called within that statement. \n</misra_rule>\n<target_code>\nHere is the original code of OS_FdSet_ConvertOut_Impl.\n```c\nstatic void OS_FdSet_ConvertOut_Impl(fd_set *OS_set, OS_FdSet *OSAL_set)\n{\n    size_t       offset;\n    size_t       bit;\n    osal_index_t id;\n    uint8        objids;\n    int          osfd;\n\n    for (offset = 0; offset < sizeof(OSAL_set->object_ids); ++offset)\n    {\n        objids = OSAL_set->object_ids[offset];\n        bit    = 0;\n        while (objids != 0)\n        {\n            id = OSAL_INDEX_C((offset * 8) + bit);\n            if ((objids & 0x01) != 0 && id < OS_MAX_NUM_OPEN_FILES)\n            {\n                osfd = OS_impl_filehandle_table[id].fd;\n                if (osfd < 0 || !FD_ISSET(osfd, OS_set))\n                {\n                    OSAL_set->object_ids[offset] &= ~(1 << bit);\n                }\n            }\n            ++bit;\n            objids >>= 1;\n        }\n    }\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe second clause of the for uses sizeof(OSAL_set->object_ids), which references the OSAL_set->object_ids object; that object is modified in the loop body (OSAL_set->object_ids[offset] &= ...). Rule 14.2 requires the second clause to use only the loop counter (and optionally loop control flags) and not any other object modified in the loop body, so this for statement violates Rule 14.2.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The agent A report is not correct. The for header uses sizeof(OSAL_set->object_ids) which yields a compile-time size and does not evaluate or have side effects on the object; thus the loop condition does not depend on a value that can be changed by the loop body. Rule 14.2 is intended to forbid using objects that are mutated in the loop body as the runtime loop-control expression (which would make the loop ill-formed). Here sizeof merely computes the size of the array type (no persistent side effects, no runtime dependence on the array contents) and the single loop counter (offset) is initialized, tested and incremented in the for statement and is not modified in the loop body. Therefore the for loop is well-formed with respect to MISRA C 2023 Rule 14.2 and the reported violation is incorrect."
}