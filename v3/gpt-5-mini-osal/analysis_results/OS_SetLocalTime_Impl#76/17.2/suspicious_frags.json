{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 17.2 is: Functions shall not call themselves, either directly or indirectly.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of OS_SetLocalTime_Impl:\n```c\nint32 OS_SetLocalTime_Impl(const OS_time_t *time_struct)\n{\n    int             Status;\n    int32           ReturnCode;\n    struct timespec TimeSp;\n\n    TimeSp.tv_sec  = OS_TimeGetTotalSeconds(*time_struct);\n    TimeSp.tv_nsec = OS_TimeGetNanosecondsPart(*time_struct);\n\n    Status = clock_settime(OSAL_GETTIME_SOURCE_CLOCK, &TimeSp);\n\n    if (Status == 0)\n    {\n        ReturnCode = OS_SUCCESS;\n    }\n    else\n    {\n        ReturnCode = OS_ERROR;\n    }\n\n    return ReturnCode;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function OS_SetLocalTime_Impl:\nstatic inline int64 OS_TimeGetTotalSeconds(OS_time_t tm)\n{\n    return (tm.ticks / OS_TIME_TICKS_PER_SECOND);\n}\n...\nstatic inline uint32 OS_TimeGetNanosecondsPart(OS_time_t tm)\n{\n    return (uint32)OS_TimeGetFractionalPart(tm) * OS_TIME_TICK_RESOLUTION_NS;\n}\n...\nint32 OS_SetLocalTime(const OS_time_t *time_struct)\n{\n    /* Check parameters */\n    OS_CHECK_POINTER(time_struct);\n\n    return OS_SetLocalTime_Impl(time_struct);\n}\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "static inline uint32 OS_TimeGetNanosecondsPart(OS_time_t tm)\n{\n    return (uint32)OS_TimeGetFractionalPart(tm) * OS_TIME_TICK_RESOLUTION_NS;\n}",
    "TimeSp.tv_sec  = OS_TimeGetTotalSeconds(*time_struct);",
    "return OS_SetLocalTime_Impl(time_struct);",
    "OS_CHECK_POINTER(time_struct);",
    "TimeSp.tv_nsec = OS_TimeGetNanosecondsPart(*time_struct);",
    "Status = clock_settime(OSAL_GETTIME_SOURCE_CLOCK, &TimeSp);"
  ],
  "explanation": "The listed fragments contain function-like calls or macro invocations that could participate in a direct or indirect self-call cycle and therefore warrant investigation for Rule 17.2. Other parts of the provided code do not need investigation for recursion because they are simple assignments, conditional handling, returns, or pure arithmetic expressions with no function calls (for example, the body of OS_TimeGetTotalSeconds uses only tm.ticks / OS_TIME_TICKS_PER_SECOND). The ReturnCode/Status handling and the assignment to TimeSp members are plain operations that cannot cause recursion. No other function-call sites are present in the supplied snippets beyond those listed above."
}