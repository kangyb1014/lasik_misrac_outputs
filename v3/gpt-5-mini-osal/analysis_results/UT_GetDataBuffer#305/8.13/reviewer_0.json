{
  "user_message": "An agent A claimed that the following UT_GetDataBuffer code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of UT_GetDataBuffer.\n```c\nvoid UT_GetDataBuffer(UT_EntryKey_t FuncKey, void **DataBuffer, size_t *MaxSize, size_t *Position)\n{\n    UT_StubTableEntry_t *StubPtr;\n    void *               ResultDataBuffer;\n    size_t               ResultMaxSize;\n    size_t               ResultPosition;\n\n    StubPtr = UT_GetStubEntry(FuncKey, UT_ENTRYTYPE_DATA_BUFFER);\n\n    if (StubPtr == NULL)\n    {\n        ResultDataBuffer = NULL;\n        ResultMaxSize    = 0;\n        ResultPosition   = 0;\n    }\n    else\n    {\n        ResultDataBuffer = StubPtr->Data.Buff.BasePtr;\n        ResultMaxSize    = StubPtr->Data.Buff.TotalSize;\n        ResultPosition   = StubPtr->Data.Buff.Position;\n    }\n\n    if (DataBuffer != NULL)\n    {\n        *DataBuffer = ResultDataBuffer;\n    }\n    if (MaxSize != NULL)\n    {\n        *MaxSize = ResultMaxSize;\n    }\n    if (Position != NULL)\n    {\n        *Position = ResultPosition;\n    }\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIn UT_GetDataBuffer the local pointer StubPtr is only used to read members (StubPtr->Data.Buff.BasePtr, TotalSize, Position). Therefore it could and should be declared as pointing to a const-qualified type (const UT_StubTableEntry_t *StubPtr). Declaring it as a non-const pointer when only read access is required violates MISRA C 2023 Rule 8.13. Note: UT_GetStubEntry may return a non-const pointer, but assigning that to a pointer-to-const is allowed and preferred here.\n</scenario>\n\n<execution_log>\nThe agent A also provided the following output log:\n[2025-08-25 05:36:06] UT_GetDataBuffer called: FuncKey=0x55c9a8804db5, StubPtr=0x55c9a8826920, ResultDataBuffer=0x55c9a8819ae0, ResultMaxSize=32768, ResultPosition=0, DataBuffer_ptr=0x7ffc43646bd0, MaxSize_ptr=0x7ffc43646bd8, Position_ptr=(nil)\n[2025-08-25 05:36:06] UT_GetDataBuffer called: FuncKey=0x55c9a8804db5, StubPtr=0x55c9a8826920, ResultDataBuffer=0x55c9a8819ae0, ResultMaxSize=32768, ResultPosition=0, DataBuffer_ptr=0x7ffc43646bd0, MaxSize_ptr=0x7ffc43646bd8, Position_ptr=(nil)\n[2025-08-25 05:36:06] UT_GetDataBuffer called: FuncKey=0x55c9a8805111, StubPtr=0x55c9a882b120, ResultDataBuffer=0x55c9a8819ae0, ResultMaxSize=32768, ResultPosition=0, DataBuffer_ptr=0x7ffc43646be8, MaxSize_ptr=0x7ffc43646bf0, Position_ptr=(nil)\n[2025-08-25 05:36:06] UT_GetDataBuffer called: FuncKey=0x55c9a8804db5, StubPtr=0x55c9a8826920, ResultDataBuffer=0x55c9a8819ae0, ResultMaxSize=32768, ResultPosition=0, DataBuffer_ptr=0x7ffc43646bd0, MaxSize_ptr=0x7ffc43646bd8, Position_ptr=(nil)\n\n</execution_log>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. MISRA C 2023 Rule 8.13 encourages that pointers point to a const-qualified type when the pointed-to object is not modified through that pointer. In UT_GetDataBuffer the local variable StubPtr is only used to read members (StubPtr->Data.Buff.BasePtr, TotalSize, Position) and there is no write access through StubPtr. Therefore StubPtr can and should be declared as const UT_StubTableEntry_t *StubPtr to reflect read-only usage.\n\nAssigning the non-const pointer returned by UT_GetStubEntry (UT_StubTableEntry_t *) to a pointer-to-const is allowed by C (implicit conversion from T * to const T *), so changing the local declaration does not require a cast. Also, qualifying the pointed-to struct as const only adds top-level const to its members when accessed via that pointer (e.g. member expressions become const-qualified), which does not conflict with assigning those member values into local non-const variables (top-level const is discarded on value copy). Thus the original code does violate Rule 8.13 and the agent A report is correct."
}