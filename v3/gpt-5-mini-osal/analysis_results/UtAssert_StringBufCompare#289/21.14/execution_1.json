{
  "result": "success",
  "message": "ENTER UtAssert_StringBufCompare: String1=0x7ffe0a9cd8cf, String1Max=12, String2=0x7ffe0a9cd8db, String2Max=13, File=/tmp/tmp5pudgdoq/src/src/unit-test-coverage/shared/src/coveragetest-errors.c, Line=63\nUsed memchr() on String1=0x7ffe0a9cd8cf with max=12 -> EndPtr1=0x7ffe0a9cd8d0\nComputed FormatLen1=1\nUsed memchr() on String2=0x7ffe0a9cd8db with max=13 -> EndPtr2=0x7ffe0a9cd8dc\nComputed FormatLen2=1\nAbout to memcmp(String1=0x7ffe0a9cd8cf, String2=0x7ffe0a9cd8db, n=1) [FormatLen1 >= FormatLen2]\nmemcmp returned 0\nInitial memcmp equal, adjust Compare by lengths -> Compare=0 (FormatLen1=1, FormatLen2=1)\nPost-compare: Compare=0, Result=1\nAbout to call UtAssertEx with ScrubbedString1='0', ScrubbedString2='0'\nENTER UtAssert_StringBufCompare: String1=0x7ffe0a9cd8cf, String1Max=12, String2=0x7ffe0a9cd8db, String2Max=13, File=/tmp/tmp5pudgdoq/src/src/unit-test-coverage/shared/src/coveragetest-errors.c, Line=63\nUsed memchr() on String1=0x7ffe0a9cd8cf with max=12 -> EndPtr1=0x7ffe0a9cd8d1\nComputed FormatLen1=2\nUsed memchr() on String2=0x7ffe0a9cd8db with max=13 -> EndPtr2=0x7ffe0a9cd8dd\nComputed FormatLen2=2\nAbout to memcmp(String1=0x7ffe0a9cd8cf, String2=0x7ffe0a9cd8db, n=2) [FormatLen1 >= FormatLen2]\nmemcmp returned 0\nInitial memcmp equal, adjust Compare by lengths -> Compare=0 (FormatLen1=2, FormatLen2=2)\nPost-compare: Compare=0, Result=1\nAbout to call UtAssertEx with ScrubbedString1='-1', ScrubbedString2='-1'\nENTER UtAssert_StringBufCompare: String1=0x7ffe0a9cd8cf, String1Max=12, String2=0x7ffe0a9cd8db, String2Max=13, File=/tmp/tmp5pudgdoq/src/src/unit-test-coverage/shared/src/coveragetest-errors.c, Line=63\nUsed memchr() on String1=0x7ffe0a9cd8cf with max=12 -> EndPtr1=0x7ffe0a9cd8d9\nComputed FormatLen1=10\nUsed memchr() on String2=0x7ffe0a9cd8db with max=13 -> EndPtr2=0x7ffe0a9cd8e5\nComputed FormatLen2=10\nAbout to memcmp(String1=0x7ffe0a9cd8cf, String2=0x7ffe0a9cd8db, n=10) [FormatLen1 >= FormatLen2]\nmemcmp returned 0\nInitial memcmp equal, adjust Compare by lengths -> Compare=0 (FormatLen1=10, FormatLen2=10)\nPost-compare: Compare=0, Result=1\nAbout to call UtAssertEx with ScrubbedString1='2147483647', ScrubbedString2='2147483647'\nENTER UtAssert_StringBufCompare: String1=0x7ffe0a9cd8cf, String1Max=12, String2=0x7ffe0a9cd8db, String2Max=13, File=/tmp/tmp5pudgdoq/src/src/unit-test-coverage/shared/src/coveragetest-errors.c, Line=63\nUsed memchr() on String1=0x7ffe0a9cd8cf with max=12 -> EndPtr1=0x7ffe0a9cd8da\nComputed FormatLen1=11\nUsed memchr() on String2=0x7ffe0a9cd8db with max=13 -> EndPtr2=0x7ffe0a9cd8e6\nComputed FormatLen2=11\nAbout to memcmp(String1=0x7ffe0a9cd8cf, String2=0x7ffe0a9cd8db, n=11) [FormatLen1 >= FormatLen2]\nmemcmp returned 0\nInitial memcmp equal, adjust Compare by lengths -> Compare=0 (FormatLen1=11, FormatLen2=11)\nPost-compare: Compare=0, Result=1\nAbout to call UtAssertEx with ScrubbedString1='-2147483648', ScrubbedString2='-2147483648'\nENTER UtAssert_StringBufCompare: String1=0x7ffd57e5c980, String1Max=1, String2=0x5594b626a640, String2Max=1, File=/tmp/tmp5pudgdoq/src/src/unit-test-coverage/shared/src/coveragetest-file.c, Line=315\nUsed memchr() on String1=0x7ffd57e5c980 with max=1 -> EndPtr1=0x7ffd57e5c980\nComputed FormatLen1=0\nUsed memchr() on String2=0x5594b626a640 with max=1 -> EndPtr2=0x5594b626a640\nComputed FormatLen2=0\nBoth strings empty: Compare=0\nPost-compare: Compare=0, Result=1\nAbout to call UtAssertEx with ScrubbedString1='', ScrubbedString2=''\nENTER UtAssert_StringBufCompare: String1=0x7fffb350112f, String1Max=12, String2=0x7fffb350113b, String2Max=13, File=/tmp/tmp5pudgdoq/src/src/unit-tests/oscore-test/ut_oscore_misc_test.c, Line=432\nUsed memchr() on String1=0x7fffb350112f with max=12 -> EndPtr1=0x7fffb3501130\nComputed FormatLen1=1\nUsed memchr() on String2=0x7fffb350113b with max=13 -> EndPtr2=0x7fffb350113c\nComputed FormatLen2=1\nAbout to memcmp(String1=0x7fffb350112f, String2=0x7fffb350113b, n=1) [FormatLen1 >= FormatLen2]\nmemcmp returned 0\nInitial memcmp equal, adjust Compare by lengths -> Compare=0 (FormatLen1=1, FormatLen2=1)\nPost-compare: Compare=0, Result=1\nAbout to call UtAssertEx with Scrubbed"
}