{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 17.2 is: Functions shall not call themselves, either directly or indirectly.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of metal_uio_dev_close:\n```c\nstatic void metal_uio_dev_close(struct linux_bus *lbus,\n\t\t\t\tstruct linux_device *ldev)\n{\n\t(void)lbus;\n\tunsigned int i;\n\n\tfor (i = 0; i < ldev->device.num_regions; i++) {\n\t\tmetal_unmap(ldev->device.regions[i].virt,\n\t\t\t    ldev->device.regions[i].size);\n\t}\n\tif (ldev->override) {\n\t\tsysfs_write_attribute(ldev->override, \"\", 1);\n\t\tldev->override = NULL;\n\t}\n\tif (ldev->sdev) {\n\t\tsysfs_close_device(ldev->sdev);\n\t\tldev->sdev = NULL;\n\t}\n\tif (ldev->fd >= 0) {\n\t\tclose(ldev->fd);\n\t}\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function metal_uio_dev_close:\nint metal_unmap(void *mem, size_t size)\n{\n\treturn munmap(mem, size) < 0 ? -errno : 0;\n}\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nsysfs_write_attribute(ldev->override, \"\", 1);\n```\nFocus on the above code fragment and judge whether it violates the rule 17.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation found in the provided fragment: metal_uio_dev_close calls sysfs_write_attribute, and there is no evidence that sysfs_write_attribute (or any function it calls) calls back into metal_uio_dev_close. A specific violation WOULD occur if sysfs_write_attribute (directly or indirectly) invoked metal_uio_dev_close \u2014 e.g. metal_uio_dev_close -> sysfs_write_attribute -> some_func -> metal_uio_dev_close \u2014 which would create indirect recursion and violate Rule 17.2."
}