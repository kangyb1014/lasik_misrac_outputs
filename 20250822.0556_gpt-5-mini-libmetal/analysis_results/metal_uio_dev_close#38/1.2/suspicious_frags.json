{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of metal_uio_dev_close:\n```c\nstatic void metal_uio_dev_close(struct linux_bus *lbus,\n\t\t\t\tstruct linux_device *ldev)\n{\n\t(void)lbus;\n\tunsigned int i;\n\n\tfor (i = 0; i < ldev->device.num_regions; i++) {\n\t\tmetal_unmap(ldev->device.regions[i].virt,\n\t\t\t    ldev->device.regions[i].size);\n\t}\n\tif (ldev->override) {\n\t\tsysfs_write_attribute(ldev->override, \"\", 1);\n\t\tldev->override = NULL;\n\t}\n\tif (ldev->sdev) {\n\t\tsysfs_close_device(ldev->sdev);\n\t\tldev->sdev = NULL;\n\t}\n\tif (ldev->fd >= 0) {\n\t\tclose(ldev->fd);\n\t}\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function metal_uio_dev_close:\nint metal_unmap(void *mem, size_t size)\n{\n\treturn munmap(mem, size) < 0 ? -errno : 0;\n}\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "No compiler language extensions are used in the provided code. The function uses only standard C constructs (static function, (void) to suppress unused parameter, for-loop, unsigned int, ternary operator) and POSIX/library calls (munmap, close, errno, size_t, NULL). There are no GCC/Clang/MSVC extensions such as __attribute__, __builtin_*, typeof, statement-expressions ({ ... }), inline asm, pragmas for extensions, designated-identifier extensions, or other vendor-specific language extensions. Therefore there are no code fragments that need investigation under MISRA C 2023 Rule 1.2."
}