{
  "user_message": "An agent A claimed that the following metal_uio_dev_irq_ack code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of metal_uio_dev_irq_ack.\n```c\nstatic void metal_uio_dev_irq_ack(struct linux_bus *lbus,\n\t\t\t\t struct linux_device *ldev,\n\t\t\t\t int irq)\n{\n\t(void)lbus;\n\t(void)irq;\n\tint irq_info = 1;\n\tunsigned int val;\n\tint ret;\n\n\tret = read(ldev->fd, (void *)&val, sizeof(val));\n\tif (ret < 0) {\n\t\tmetal_log(METAL_LOG_ERROR, \"%s, read uio irq fd %d failed: %d.\\n\",\n\t\t\t\t\t\t__func__, ldev->fd, ret);\n\t\treturn;\n\t}\n\tret = write(ldev->fd, &irq_info, sizeof(irq_info));\n\tif (ret < 0) {\n\t\tmetal_log(METAL_LOG_ERROR, \"%s, write uio irq fd %d failed: %d.\\n\",\n\t\t\t\t\t\t__func__, ldev->fd, errno);\n\t}\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe address of irq_info (a non-const local: int irq_info = 1) is passed to write(), which takes a const void *; irq_info is not const although it is only used as read-only here. Per MISRA C 2023 Rule 8.13, the pointed-to object should be const-qualified when possible. Declare irq_info as const (e.g. const int irq_info = 1) to resolve the violation.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. The local irq_info is only used as an input buffer to write(), which has prototype ssize_t write(int, const void *, size_t); the object is not modified, so per MISRA C:2023 Rule 8.13 it should be const-qualified when possible. Declaring it as e.g. \"const int irq_info = 1;\" satisfies the intent of the rule. (Note: passing the address of a non-const object to a const void * parameter is valid in C, but MISRA requires the pointed-to object itself be const when it is not modified.)"
}