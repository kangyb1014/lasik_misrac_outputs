{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of metal_io_init:\n```c\nvoid metal_io_init(struct metal_io_region *io, void *virt,\n\t      const metal_phys_addr_t *physmap, size_t size,\n\t      unsigned int page_shift, unsigned int mem_flags,\n\t      const struct metal_io_ops *ops)\n{\n\tconst struct metal_io_ops nops = {\n\t\tNULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL\n\t};\n\n\tio->virt = virt;\n\tio->physmap = physmap;\n\tio->size = size;\n\tio->page_shift = page_shift;\n\tif (page_shift >= sizeof(io->page_mask) * CHAR_BIT)\n\t\t/* avoid overflow */\n\t\tio->page_mask = -1UL;\n\telse\n\t\tio->page_mask = (1UL << page_shift) - 1UL;\n\tio->mem_flags = mem_flags;\n\tio->ops = ops ? *ops : nops;\n\tmetal_sys_io_mem_map(io);\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function metal_io_init:\ntypedef unsigned long metal_phys_addr_t\n...\n#define metal_sys_io_mem_map(__VA_ARGS__) \n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nmetal_sys_io_mem_map(io);\n```\nFocus on the above code fragment and judge whether it violates the rule 1.2 or not.\n</target_code>\n",
  "is_rule_violated": true,
  "scenario": "The macro definition uses a non\u2011standard variadic-parameter form: #define metal_sys_io_mem_map(__VA_ARGS__) and the call metal_sys_io_mem_map(io); relies on that macro. Using __VA_ARGS__ as the macro parameter name (instead of the standard C99 form using '...') is a compiler/preprocessor extension (GCC/Clang document named-variadic/alternate forms as extensions)."
}