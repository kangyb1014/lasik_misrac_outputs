{
  "user_message": "An agent A claimed that the following metal_softirq_set code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of metal_softirq_set.\n```c\nvoid metal_softirq_set(int irq)\n{\n\tstruct metal_irq_controller *cntr;\n\n\tcntr = &metal_softirq_cntr;\n\n\tif (irq < cntr->irq_base ||\n\t    irq >= (cntr->irq_base + cntr->irq_num)) {\n\t\treturn;\n\t}\n\n\tirq -= cntr->irq_base;\n\tatomic_store(&metal_softirq_pending[irq], 1);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe pointer 'cntr' is only used to read fields (irq_base, irq_num) and is assigned &metal_softirq_cntr. It could be declared as 'const struct metal_irq_controller *cntr;' (a pointer to const) since no modification through the pointer occurs. Therefore the non-const declaration violates MISRA C 2023 Rule 8.13.\n</scenario>\n<additional code>Here are the definitions of symbols that are close to the target function metal_softirq_set:\nstatic METAL_IRQ_CONTROLLER_DECLARE(metal_softirq_cntr,\n\t\t\t\t    METAL_IRQ_ANY, METAL_SOFTIRQ_NUM,\n\t\t\t\t    NULL,\n\t\t\t\t    metal_softirq_set_enable, NULL,\n\t\t\t\t    metal_softirqs)\n...\n\n</additional code>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. In metal_softirq_set the local pointer cntr is only used for reading fields (irq_base and irq_num) and is assigned the address of metal_softirq_cntr. There is no modification of the pointed-to object through cntr, so it can and should be declared as a pointer to const: const struct metal_irq_controller *cntr;. A pointer to const may validly point to a non-const object, so changing the declaration does not change semantics here and would satisfy MISRA C 2023 Rule 8.13. (Only if cntr were later used in contexts that require a non-const pointer or modifications through it would the change be inappropriate.)"
}