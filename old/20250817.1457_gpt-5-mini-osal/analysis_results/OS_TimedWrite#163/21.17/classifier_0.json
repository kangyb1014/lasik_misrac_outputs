{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 21.17 is: Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of OS_TimedWrite:\n```c\nint32 OS_TimedWrite(osal_id_t filedes, const void *buffer, size_t nbytes, int32 timeout)\n{\n    OS_object_token_t token;\n    int32             return_code;\n\n    /* Check Parameters */\n    OS_CHECK_POINTER(buffer);\n    OS_CHECK_SIZE(nbytes);\n\n    return_code = OS_ObjectIdGetById(OS_LOCK_MODE_REFCOUNT, LOCAL_OBJID_TYPE, filedes, &token);\n    if (return_code == OS_SUCCESS)\n    {\n        return_code = OS_GenericWrite_Impl(&token, buffer, nbytes, timeout);\n        OS_ObjectIdRelease(&token);\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nreturn_code = OS_GenericWrite_Impl(&token, buffer, nbytes, timeout);\n```\nFocus on the above code fragment and judge whether it violates the rule 21.17 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "The call site itself does not invoke any <string.h> routine, so it cannot be proven to violate Rule 21.17. However a violation can occur inside OS_GenericWrite_Impl if it uses string.h functions with the provided parameters without ensuring the objects are large enough. For example: if buffer actually points to a 10\u2011byte object but nbytes == 20 and OS_GenericWrite_Impl does memcpy(dest, buffer, nbytes) (or if the implementation copies into an internal destination buffer smaller than nbytes), that would access beyond object bounds and violate MISRA C 2023 Rule 21.17. Note that OS_CHECK_POINTER(buffer) and OS_CHECK_SIZE(nbytes) only check for non\u2011NULL and (presumably) a size value, they do not guarantee the buffer actually contains at least nbytes bytes."
}