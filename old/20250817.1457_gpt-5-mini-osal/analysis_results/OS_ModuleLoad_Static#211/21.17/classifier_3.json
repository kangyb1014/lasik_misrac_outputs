{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 21.17 is: Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of OS_ModuleLoad_Static:\n```c\nint32 OS_ModuleLoad_Static(const char *ModuleName)\n{\n    int32                      return_code = OS_ERR_NAME_NOT_FOUND;\n    OS_static_symbol_record_t *StaticSym   = OS_STATIC_SYMTABLE_SOURCE;\n\n    while (StaticSym != NULL)\n    {\n        if (StaticSym->Name == NULL)\n        {\n            /* end of list  */\n            break;\n        }\n        if (StaticSym->Module != NULL && strcmp(StaticSym->Module, ModuleName) == 0)\n        {\n            /* found matching module name */\n            return_code = OS_SUCCESS;\n            break;\n        }\n\n        ++StaticSym;\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function OS_ModuleLoad_Static:\ntypedef const struct\n{\n    const char *Name;\n    void (*Address)(void);\n    const char *Module;\n} OS_static_symbol_record_t\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nif (StaticSym->Module != NULL && strcmp(StaticSym->Module, ModuleName) == 0)\n```\nFocus on the above code fragment and judge whether it violates the rule 21.17 or not.\n</target_code>\n",
  "is_rule_violated": true,
  "scenario": "The code calls strcmp(StaticSym->Module, ModuleName) after checking only that StaticSym->Module != NULL, but it does not check ModuleName. If ModuleName is NULL (or points to a non-null-terminated or too-short buffer), strcmp will dereference beyond the bounds of the object referenced by ModuleName, causing undefined behavior and violating MISRA C 2023 Rule 21.17."
}