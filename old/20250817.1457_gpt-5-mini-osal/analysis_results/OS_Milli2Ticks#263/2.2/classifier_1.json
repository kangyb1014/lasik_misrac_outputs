{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of OS_Milli2Ticks:\n```c\nint32 OS_Milli2Ticks(uint32 milli_seconds, int *ticks)\n{\n    uint64 num_of_ticks;\n    int32  return_code = OS_SUCCESS;\n\n    num_of_ticks = (((uint64)milli_seconds * OS_SharedGlobalVars.TicksPerSecond) + 999) / 1000;\n\n    /* Check against maximum int32 (limit from some OS's) */\n    if (num_of_ticks <= INT_MAX)\n    {\n        *ticks = (int)num_of_ticks;\n    }\n    else\n    {\n        return_code = OS_ERROR;\n        *ticks      = 0;\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nif (num_of_ticks <= INT_MAX)\n```\nFocus on the above code fragment and judge whether it violates the rule 2.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "The if-condition itself is not dead: whether the then- or else-branch is taken depends on runtime inputs (milli_seconds and OS_SharedGlobalVars.TicksPerSecond). Therefore Rule 2.2 is not violated. Note: a concrete situation in which the else-branch would never be taken is if TicksPerSecond is sufficiently small that for every possible uint32 milli_seconds the computed num_of_ticks is always <= INT_MAX (for example, if OS_SharedGlobalVars.TicksPerSecond \u2264 499 then max(((uint64)UINT32_MAX * TicksPerSecond)+999)/1000) \u2264 INT_MAX). In that case the else-branch becomes unreachable for all inputs \u2014 but per MISRA Note 2 unreachable code is not considered \u201cdead code\u201d under Rule 2.2, so the rule is still not violated."
}