{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 17.8 is: A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of OS_SelectFdAdd:\n```c\nint32 OS_SelectFdAdd(OS_FdSet *Set, osal_id_t objid)\n{\n    int32        return_code;\n    osal_index_t local_id;\n\n    /* check parameters */\n    OS_CHECK_POINTER(Set);\n\n    return_code = OS_ObjectIdToArrayIndex(OS_OBJECT_TYPE_OS_STREAM, objid, &local_id);\n    if (return_code == OS_SUCCESS)\n    {\n        /*\n         * Sets the bit in the uint8 object_ids array that corresponds\n         * to the local_id where local_id >> 3 determines the array element,\n         * and the mask/shift sets the bit within that element.\n         */\n        Set->object_ids[local_id >> 3] |= 1 << (local_id & 0x7);\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function OS_SelectFdAdd:\n#define OS_CHECK_POINTER(ptr) BUGCHECK((ptr)!=NULL,OS_INVALID_POINTER)\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "No code fragments that assign to or otherwise modify the pointer parameters are present. Specifically:\n- The statement \"Set->object_ids[local_id >> 3] |= 1 << (local_id & 0x7);\" modifies the object pointed to by Set (the array contents), which is permitted by Rule 17.8; it does not modify the pointer Set itself.\n- The macro OS_CHECK_POINTER(Set) expands to BUGCHECK((ptr)!=NULL,OS_INVALID_POINTER) and only evaluates the pointer in a NULL check; it does not reassign or modify Set.\n- The function OS_ObjectIdToArrayIndex(objid, &local_id) receives objid by value and writes into local_id (a local variable), so objid (a function parameter) is not modified.\n- There are no assignments, increments/decrements, or pointer arithmetic applied to the parameters Set or objid anywhere in the function.\nTherefore, there are no fragments that need investigation for potential violations of MISRA C 2023 Rule 17.8."
}