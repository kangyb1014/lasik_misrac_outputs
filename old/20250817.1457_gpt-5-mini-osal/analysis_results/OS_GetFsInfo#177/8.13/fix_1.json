{
  "user_message": "<target code>Here is the code that failed to compile:\n```c\ntypedef int32_t int32;\ntypedef struct\n{\n    int32 MaxFds;\n    int32 MaxVolumes;\n    int32 FreeFds;\n    int32 FreeVolumes;\n} os_fsinfo_t;\nstruct OS_object_iter\n{\n    void *base;          /* pointer to base array (non-const on purpose to mirror scenario) */\n    void *arg;           /* user arg (non-const) */\n    void *matcharg;      /* match arg (non-const) */\n    void *matchfn;       /* function pointer stored here */\n    int   object_type;   /* type being iterated */\n    int   index;         /* current index */\n    int   total;         /* total items to produce */\n};\ntypedef struct OS_object_iter\n{\n    void *base;          /* pointer to base array (non-const on purpose to mirror scenario) */\n    void *arg;           /* user arg (non-const) */\n    void *matcharg;      /* match arg (non-const) */\n    void *matchfn;       /* function pointer stored here */\n    int   object_type;   /* type being iterated */\n    int   index;         /* current index */\n    int   total;         /* total items to produce */\n} OS_object_iter_t;\nconst int32 OS_MAX_NUM_OPEN_FILES = 256;\nconst int32 OS_MAX_FILE_SYSTEMS   = 16;\nconst int   OS_OBJECT_TYPE_OS_STREAM = 1;\nconst int   OS_OBJECT_TYPE_OS_FILESYS = 2;\nconst int32 OS_SUCCESS = 0;\nstatic const char *g_log_path = \"/tmp/logs/1419.txt\";\nstatic void probe_log(const char *fmt, ...)\n{\n    FILE *f = fopen(g_log_path, \"a\");\n    if (f == NULL)\n    {\n        return;\n    }\n\n    va_list ap;\n    va_start(ap, fmt);\n    vfprintf(f, fmt, ap);\n    fprintf(f, \"\\n\");\n    va_end(ap);\n\n    fclose(f);\n}\nstatic void OS_CHECK_POINTER(const void *p)\n{\n    if (p == NULL)\n    {\n        probe_log(\"OS_CHECK_POINTER: NULL pointer detected\");\n    }\n    else\n    {\n        probe_log(\"OS_CHECK_POINTER: pointer OK (%p)\", (void *)p);\n    }\n}\nstatic int g_dummy_common_table[8] = {0,1,2,3,4,5,6,7};\ntypedef int (*os_obj_filter_t)(void *arg, int objid);\nstatic void OS_ObjectIdIteratorInit(os_obj_filter_t filter, void *arg, int object_type, OS_object_iter_t *iter)\n{\n    if (iter == NULL)\n    {\n        probe_log(\"OS_ObjectIdIteratorInit: iter == NULL\");\n        return;\n    }\n\n    /* Initialize internal iterator state */\n    iter->object_type = object_type;\n    iter->arg = arg;\n    iter->matcharg = NULL;\n    iter->matchfn = (void *)filter; /* store function pointer */\n    iter->base = (void *)g_dummy_common_table; /* simulate pointing into a common table */\n    iter->index = 0;\n\n    /* Decide how many items to produce based on object type to simulate real system */\n    if (object_type == OS_OBJECT_TYPE_OS_STREAM)\n    {\n        iter->total = 3; /* pretend there are 3 free FDs */\n    }\n    else if (object_type == OS_OBJECT_TYPE_OS_FILESYS)\n    {\n        iter->total = 2; /* pretend there are 2 free volumes */\n    }\n    else\n    {\n        iter->total = 0;\n    }\n\n    probe_log(\"OS_ObjectIdIteratorInit: iter=%p filter=%p arg=%p object_type=%d base=%p total=%d\",\n              (void *)iter, (void *)filter, arg, object_type, iter->base, iter->total);\n}\nstatic bool OS_ObjectIdIteratorGetNext(OS_object_iter_t *iter)\n{\n    if (iter == NULL)\n    {\n        probe_log(\"OS_ObjectIdIteratorGetNext: iter == NULL\");\n        return false;\n    }\n\n    bool has = (iter->index < iter->total);\n    probe_log(\"OS_ObjectIdIteratorGetNext: iter=%p index=%d total=%d has=%d\",\n              (void *)iter, iter->index, iter->total, (int)has);\n\n    if (has)\n    {\n        /* increment index to simulate moving the iterator forward */\n        ++iter->index;\n        return true;\n    }\n\n    return false;\n}\nstatic void OS_ObjectIdIteratorDestroy(OS_object_iter_t *iter)\n{\n    if (iter == NULL)\n    {\n        probe_log(\"OS_ObjectIdIteratorDestroy: iter == NULL\");\n        return;\n    }\n    probe_log(\"OS_ObjectIdIteratorDestroy: iter=%p final_index=%d total=%d base=%p arg=%p matchfn=%p\",\n              (void *)iter, iter->index, iter->total, iter->base, iter->arg, iter->matchfn);\n    /* Nothing to free in the simple harness */\n}\n\nstatic int OS_FileSysFilterFree(void *arg, int objid)\n{\n    probe_log(\"OS_FileSysFilterFree: called with arg=%p objid=%d\", arg, objid);\n    /* For the purpose of this test harness, always match. */\n    return 1;\n}\nint32 OS_GetFsInfo(os_fsinfo_t *filesys_info)\n{\n    OS_object_iter_t iter;\n\n    /* Check parameters (logged by OS_CHECK_POINTER) */\n    OS_CHECK_POINTER(filesys_info);\n\n    /* Preserve original behavior: clear the output structure */\n    memset(filesys_info, 0, sizeof(*filesys_info));\n\n    filesys_info->MaxFds     = OS_MAX_NUM_OPEN_FILES;\n    filesys_info->MaxVolumes = OS_MAX_FILE_SYSTEMS;\n\n    probe_log(\"OS_GetFsInfo: start MaxFds=%d MaxVolumes=%d\", filesys_info->MaxFds, filesys_info->MaxVolumes);\n\n    /* Iterate streams (file descriptors) */\n    OS_ObjectIdIteratorInit(OS_FileSysFilterFree, NULL, OS_OBJECT_TYPE_OS_STREAM, &iter);\n    while (OS_ObjectIdIteratorGetNext(&iter))\n    {\n        ++filesys_info->FreeFds;\n        probe_log(\"OS_GetFsInfo: FreeFds incremented -> %d (iter=%p index=%d base=%p)\",\n                  filesys_info->FreeFds, (void *)&iter, iter.index, iter.base);\n    }\n    OS_ObjectIdIteratorDestroy(&iter);\n\n    /* Iterate filesystems (volumes) */\n    OS_ObjectIdIteratorInit(OS_FileSysFilterFree, NULL, OS_OBJECT_TYPE_OS_FILESYS, &iter);\n    while (OS_ObjectIdIteratorGetNext(&iter))\n    {\n        ++filesys_info->FreeVolumes;\n        probe_log(\"OS_GetFsInfo: FreeVolumes incremented -> %d (iter=%p index=%d base=%p)\",\n                  filesys_info->FreeVolumes, (void *)&iter, iter.index, iter.base);\n    }\n    OS_ObjectIdIteratorDestroy(&iter);\n\n    probe_log(\"OS_GetFsInfo: end FreeFds=%d FreeVolumes=%d\", filesys_info->FreeFds, filesys_info->FreeVolumes);\n\n    return OS_SUCCESS;\n}\n\n```\n</target code>\n<build error>\nThe build failed with the following error:\n```\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:90:3: error: conflicting types for 'os_fsinfo_t'; have 'struct <anonymous>'\n   90 | } os_fsinfo_t;\n      |   ^~~~~~~~~~~\nIn file included from /tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-filesys.h:29,\n                 from /tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:51:\n/tmp/tmp7eo3tgo0/src/src/os/inc/osapi-filesys.h:41:3: note: previous declaration of 'os_fsinfo_t' with type 'os_fsinfo_t'\n   41 | } os_fsinfo_t;\n      |   ^~~~~~~~~~~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:101:16: error: redefinition of 'struct OS_object_iter'\n  101 | typedef struct OS_object_iter\n      |                ^~~~~~~~~~~~~~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:91:8: note: originally defined here\n   91 | struct OS_object_iter\n      |        ^~~~~~~~~~~~~~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:110:3: error: conflicting types for 'OS_object_iter_t'; have 'struct OS_object_iter'\n  110 | } OS_object_iter_t;\n      |   ^~~~~~~~~~~~~~~~\nIn file included from /tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:52:\n/tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-idmap.h:139:3: note: previous declaration of 'OS_object_iter_t' with type 'OS_object_iter_t'\n  139 | } OS_object_iter_t;\n      |   ^~~~~~~~~~~~~~~~\nIn file included from /tmp/tmp7eo3tgo0/src/src/os/inc/osapi-filesys.h:28,\n                 from /tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-filesys.h:29,\n                 from /tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:51:\n/tmp/tmp7eo3tgo0/build/inc/osconfig.h:107:41: error: expected identifier or '(' before numeric constant\n  107 | #define OS_MAX_NUM_OPEN_FILES           50\n      |                                         ^~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:111:13: note: in expansion of macro 'OS_MAX_NUM_OPEN_FILES'\n  111 | const int32 OS_MAX_NUM_OPEN_FILES = 256;\n      |             ^~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7eo3tgo0/build/inc/osconfig.h:121:41: error: expected identifier or '(' before numeric constant\n  121 | #define OS_MAX_FILE_SYSTEMS             14\n      |                                         ^~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:112:13: note: in expansion of macro 'OS_MAX_FILE_SYSTEMS'\n  112 | const int32 OS_MAX_FILE_SYSTEMS   = 16;\n      |             ^~~~~~~~~~~~~~~~~~~\nIn file included from /tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-idmap.h:29,\n                 from /tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:52:\n/tmp/tmp7eo3tgo0/src/src/os/inc/osapi-idmap.h:44:36: error: expected identifier or '(' before numeric constant\n   44 | #define OS_OBJECT_TYPE_OS_STREAM   0x06 /**< @brief Object stream type */\n      |                                    ^~~~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:113:13: note: in expansion of macro 'OS_OBJECT_TYPE_OS_STREAM'\n  113 | const int   OS_OBJECT_TYPE_OS_STREAM = 1;\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7eo3tgo0/src/src/os/inc/osapi-idmap.h:49:36: error: expected identifier or '(' before numeric constant\n   49 | #define OS_OBJECT_TYPE_OS_FILESYS  0x0B /**< @brief Object file system type */\n      |                                    ^~~~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:114:13: note: in expansion of macro 'OS_OBJECT_TYPE_OS_FILESYS'\n  114 | const int   OS_OBJECT_TYPE_OS_FILESYS = 2;\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-globaldefs.h:36,\n                 from /tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-filesys.h:30,\n                 from /tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:51:\n/tmp/tmp7eo3tgo0/src/src/os/inc/osapi-error.h:96:41: error: expected identifier or '(' before numeric constant\n   96 | #define OS_SUCCESS                     (0)   /**< @brief Successful execution */\n      |                                         ^\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:115:13: note: in expansion of macro 'OS_SUCCESS'\n  115 | const int32 OS_SUCCESS = 0;\n      |             ^~~~~~~~~~\nIn file included from /tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-globaldefs.h:37,\n                 from /tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-filesys.h:30,\n                 from /tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:51:\n/tmp/tmp7eo3tgo0/src/src/os/inc/osapi-macros.h:106:5: error: expected identifier or '(' before 'if'\n  106 |     if (!(cond))                                                                                            \\\n      |     ^~\n/tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-globaldefs.h:107:31: note: in expansion of macro 'BUGCHECK'\n  107 | #define OS_CHECK_POINTER(ptr) BUGCHECK((ptr) != NULL, OS_INVALID_POINTER)\n      |                               ^~~~~~~~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:133:13: note: in expansion of macro 'OS_CHECK_POINTER'\n  133 | static void OS_CHECK_POINTER(const void *p)\n      |             ^~~~~~~~~~~~~~~~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:134:1: error: expected identifier or '(' before '{' token\n  134 | {\n      | ^\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:146:13: error: conflicting types for 'OS_ObjectIdIteratorInit'; have 'void(int (*)(void *, int), void *, int,  OS_object_iter_t *)' {aka 'void(int (*)(void *, int), void *, int,  struct OS_object_iter *)'}\n  146 | static void OS_ObjectIdIteratorInit(os_obj_filter_t filter, void *arg, int object_type, OS_object_iter_t *iter)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:52:\n/tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-idmap.h:478:7: note: previous declaration of 'OS_ObjectIdIteratorInit' with type 'int32(_Bool (*)(void *, const OS_object_token_t *, const OS_common_record_t *), void *, osal_objtype_t,  OS_object_iter_t *)' {aka 'int(_Bool (*)(void *, const struct OS_object_token *, const struct OS_common_record *), void *, unsigned int,  OS_object_iter_t *)'}\n  478 | int32 OS_ObjectIdIteratorInit(OS_ObjectMatchFunc_t matchfunc, void *matcharg, osal_objtype_t objtype,\n      |       ^~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:179:13: error: conflicting types for 'OS_ObjectIdIteratorGetNext'; have '_Bool(OS_object_iter_t *)' {aka '_Bool(struct OS_object_iter *)'}\n  179 | static bool OS_ObjectIdIteratorGetNext(OS_object_iter_t *iter)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:52:\n/tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-idmap.h:496:6: note: previous declaration of 'OS_ObjectIdIteratorGetNext' with type '_Bool(OS_object_iter_t *)'\n  496 | bool OS_ObjectIdIteratorGetNext(OS_object_iter_t *iter);\n      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:200:13: error: conflicting types for 'OS_ObjectIdIteratorDestroy'; have 'void(OS_object_iter_t *)' {aka 'void(struct OS_object_iter *)'}\n  200 | static void OS_ObjectIdIteratorDestroy(OS_object_iter_t *iter)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:52:\n/tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-idmap.h:504:6: note: previous declaration of 'OS_ObjectIdIteratorDestroy' with type 'void(OS_object_iter_t *)'\n  504 | void OS_ObjectIdIteratorDestroy(OS_object_iter_t *iter);\n      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:212:12: error: conflicting types for 'OS_FileSysFilterFree'; have 'int(void *, int)'\n  212 | static int OS_FileSysFilterFree(void *arg, int objid)\n      |            ^~~~~~~~~~~~~~~~~~~~\nIn file included from /tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:51:\n/tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-filesys.h:184:7: note: previous declaration of 'OS_FileSysFilterFree' with type '_Bool(void *, const OS_object_token_t *, const OS_common_record_t *)' {aka '_Bool(void *, const struct OS_object_token *, const struct OS_common_record *)'}\n  184 | bool  OS_FileSysFilterFree(void *ref, const OS_object_token_t *token, const OS_common_record_t *obj);\n      |       ^~~~~~~~~~~~~~~~~~~~\n/tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:782:7: error: conflicting types for 'OS_GetFsInfo'; have 'int32(os_fsinfo_t *)' {aka 'int(os_fsinfo_t *)'}\n  782 | int32 OS_GetFsInfo(os_fsinfo_t *filesys_info)\n      |       ^~~~~~~~~~~~\nIn file included from /tmp/tmp7eo3tgo0/src/src/os/shared/inc/os-shared-filesys.h:29,\n                 from /tmp/tmp7eo3tgo0/src/src/os/shared/src/osapi-filesys.c:51:\n/tmp/tmp7eo3tgo0/src/src/os/inc/osapi-filesys.h:303:7: note: previous declaration of 'OS_GetFsInfo' with type 'int32(os_fsinfo_t *)' {aka 'int(os_fsinfo_t *)'}\n  303 | int32 OS_GetFsInfo(os_fsinfo_t *filesys_info);\n      |       ^~~~~~~~~~~~\ngmake[2]: *** [CMakeFiles/osal.dir/build.make:188: CMakeFiles/osal.dir/src/os/shared/src/osapi-filesys.c.o] Error 1\ngmake[1]: *** [CMakeFiles/Makefile2:762: CMakeFiles/osal.dir/all] Error 2\ngmake: *** [Makefile:146: all] Error 2\n```\n</build error>\n<response format>\nProvide your answer with these answers.\n- fixed_test_code: the fixed test code that compiles successfully.\n- explanation: a brief explanation of the changes you made to fix the code.\nHere are the constraints for the test code:\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- The test code MUST preserve the original logic of OS_GetFsInfo as much as possible.\n- You MUST not define the main function.\n- You MUST not define macros.\n- The test code MUST not contain any mock functions.\n</response format>\n<instruction>\nPlease fix the code so that it compiles successfully.\n</instruction>\n",
  "fixed_test_code": "#include <string.h>\n#include <stdint.h>\n#include <stdbool.h>\n\n/* Implement OS_GetFsInfo using the project's existing types and iterator APIs.\n * This avoids redefining any types/macros/functions that are already provided\n * by the project's headers (which caused the original conflicting-definition\n * build errors).\n *\n * Note: Do not redeclare os_fsinfo_t, OS_object_iter_t, or any OS_* macros\n * or functions here to prevent conflicts with the included project headers.\n */\n\nint32 OS_GetFsInfo(os_fsinfo_t *filesys_info)\n{\n    OS_object_iter_t iter;\n\n    /* Use the project's existing pointer check macro/function */\n    OS_CHECK_POINTER(filesys_info);\n\n    /* Preserve original behavior: clear the output structure */\n    memset(filesys_info, 0, sizeof(*filesys_info));\n\n    filesys_info->MaxFds     = OS_MAX_NUM_OPEN_FILES;\n    filesys_info->MaxVolumes = OS_MAX_FILE_SYSTEMS;\n\n    /* Iterate streams (file descriptors). Use the project's iterator API;\n     * pass NULL for the match function/arg to iterate all of that type. */\n    OS_ObjectIdIteratorInit(NULL, NULL, OS_OBJECT_TYPE_OS_STREAM, &iter);\n    while (OS_ObjectIdIteratorGetNext(&iter))\n    {\n        ++filesys_info->FreeFds;\n    }\n    OS_ObjectIdIteratorDestroy(&iter);\n\n    /* Iterate filesystems (volumes) */\n    OS_ObjectIdIteratorInit(NULL, NULL, OS_OBJECT_TYPE_OS_FILESYS, &iter);\n    while (OS_ObjectIdIteratorGetNext(&iter))\n    {\n        ++filesys_info->FreeVolumes;\n    }\n    OS_ObjectIdIteratorDestroy(&iter);\n\n    return OS_SUCCESS;\n}\n",
  "explanation": "The original file redeclared types, constants, macros, and helper functions that are already provided by the project's headers, causing multiple conflicting-type and macro-expansion errors. To fix this I removed all duplicate definitions and mock implementations and implemented only OS_GetFsInfo. The new implementation uses the existing os_fsinfo_t, OS_object_iter_t, OS_ObjectIdIteratorInit/GetNext/Destroy, and OS_* macros/functions from the project's headers (by passing NULL match function to iterate all objects). This preserves the original logic while avoiding name conflicts with the headers."
}