{
  "user_message": "<target code>Here is the code that failed to compile:\n```c\ntypedef int OS_object_token_t;\ntypedef struct\n{\n    /* placeholder for the real common record */\n    int dummy;\n} OS_common_record_t;\ntypedef struct\n{\n    uint32_t flags;\n    char     virtual_mountpt[64];\n} OS_filesys_internal_record_t;\nstatic const uint32_t OS_FILESYS_FLAG_IS_MOUNTED_VIRTUAL = 0x1u;\nstatic size_t OS_strnlen(const char *s, size_t maxlen)\n{\n    return strnlen(s, maxlen);\n}\nstatic OS_filesys_internal_record_t *OS_object_table_get(OS_filesys_internal_record_t *table,\n                                                         OS_object_token_t token)\n{\n    if (token < 0)\n    {\n        /* Guard: return first entry if invalid token */\n        return &table[0];\n    }\n\n    /* Bound token to table size for safety in this test harness. */\n    if ((size_t)token >= (sizeof(OS_filesys_table) / sizeof(OS_filesys_table[0])))\n    {\n        return &table[0];\n    }\n\n    return &table[token];\n}\nstatic void log_probe(const char *fmt, ...)\n{\n    FILE *f = fopen(\"/tmp/logs/1403.txt\", \"a\");\n    if (f == NULL)\n    {\n        return;\n    }\n\n    va_list ap;\n    va_start(ap, fmt);\n    vfprintf(f, fmt, ap);\n    va_end(ap);\n\n    fprintf(f, \"\\n\");\n    fclose(f);\n}\n\nbool OS_FileSys_FindVirtMountPoint(void *ref, const OS_object_token_t *token, const OS_common_record_t *obj)\n{\n    OS_filesys_internal_record_t *filesys;\n    const char *                  target = (const char *)ref;\n    size_t                        mplen;\n\n    /* Log entry and key inputs. Do not modify data. */\n    log_probe(\"ENTER: OS_FileSys_FindVirtMountPoint ref=%p token=%p obj=%p\", ref, (void *)token, (const void *)obj);\n\n    /* Obtain the filesys record from the table (replaces the original macro). */\n    filesys = OS_object_table_get(OS_filesys_table, *token);\n\n    log_probe(\"filesys addr=%p flags=0x%08x virtual_mountpt=\\\"%s\\\"\",\n              (void *)filesys, (unsigned)filesys->flags, filesys->virtual_mountpt);\n\n    if ((filesys->flags & OS_FILESYS_FLAG_IS_MOUNTED_VIRTUAL) == 0)\n    {\n        log_probe(\"EXIT: not mounted virtual (flags=0x%08x) -> false\", (unsigned)filesys->flags);\n        return false;\n    }\n\n    mplen = OS_strnlen(filesys->virtual_mountpt, sizeof(filesys->virtual_mountpt));\n\n    log_probe(\"computed mplen=%zu sizeof(virtual_mountpt)=%zu\", mplen, sizeof(filesys->virtual_mountpt));\n\n    /*\n     * The virtual_mountpt member should be a substring of the search target.\n     * If this matches a basic substring check then it may be match\n     */\n    if (mplen == 0 || mplen >= sizeof(filesys->virtual_mountpt) ||\n        strncmp(target, filesys->virtual_mountpt, mplen) != 0)\n    {\n        /* Log which condition caused the mismatch for reproducibility. */\n        if (mplen == 0)\n        {\n            log_probe(\"EXIT: mplen==0 -> false\");\n        }\n        else if (mplen >= sizeof(filesys->virtual_mountpt))\n        {\n            log_probe(\"EXIT: mplen >= sizeof(virtual_mountpt) (%zu >= %zu) -> false\", mplen, sizeof(filesys->virtual_mountpt));\n        }\n        else\n        {\n            /* Log a safe prefix of target as evidence (avoid reading beyond). */\n            char targ_preview[80];\n            size_t copylen = (mplen < (sizeof(targ_preview) - 1)) ? mplen : (sizeof(targ_preview) - 1);\n            if (target != NULL)\n            {\n                memcpy(targ_preview, target, copylen);\n            }\n            targ_preview[copylen] = '\\0';\n            log_probe(\"EXIT: strncmp mismatch (target_prefix=\\\"%s\\\") -> false\", targ_preview);\n        }\n\n        return false;\n    }\n\n    /*\n     * Confirm that the substring ends at either a directory separator\n     * or the end of string  (so exact mount points also match).\n     *\n     * For instance consider a virtual_mountpt of /mnt/abc and searching\n     * for target=/mnt/abcd - this should return false in that case.\n     */\n    bool result = (target[mplen] == '/' || target[mplen] == 0);\n\n    log_probe(\"FINAL CHECK: target[%zu] = '\\%c' (0x%02x) -> result=%s\",\n              mplen,\n              (target[mplen] == 0) ? '0' : target[mplen],\n              (unsigned char)target[mplen],\n              result ? \"true\" : \"false\");\n\n    log_probe(\"EXIT: OS_FileSys_FindVirtMountPoint -> %s\", result ? \"true\" : \"false\");\n\n    return result;\n}\n\n```\n</target code>\n<build error>\nThe build failed with the following error:\n```\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:98:13: error: conflicting types for 'OS_object_token_t'; have 'int'\n   98 | typedef int OS_object_token_t;\n      |             ^~~~~~~~~~~~~~~~~\nIn file included from /tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-filesys.h:30,\n                 from /tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:52:\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-globaldefs.h:60:32: note: previous declaration of 'OS_object_token_t' with type 'OS_object_token_t' {aka 'struct OS_object_token'}\n   60 | typedef struct OS_object_token OS_object_token_t;\n      |                                ^~~~~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:103:3: error: conflicting types for 'OS_common_record_t'; have 'struct <anonymous>'\n  103 | } OS_common_record_t;\n      |   ^~~~~~~~~~~~~~~~~~\nIn file included from /tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-filesys.h:30,\n                 from /tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:52:\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-globaldefs.h:44:33: note: previous declaration of 'OS_common_record_t' with type 'OS_common_record_t' {aka 'struct OS_common_record'}\n   44 | typedef struct OS_common_record OS_common_record_t;\n      |                                 ^~~~~~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:108:3: error: conflicting types for 'OS_filesys_internal_record_t'; have 'struct <anonymous>'\n  108 | } OS_filesys_internal_record_t;\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:52:\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-filesys.h:98:3: note: previous declaration of 'OS_filesys_internal_record_t' with type 'OS_filesys_internal_record_t'\n   98 | } OS_filesys_internal_record_t;\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-filesys.h:66:44: error: expected identifier or '(' before numeric constant\n   66 | #define OS_FILESYS_FLAG_IS_MOUNTED_VIRTUAL 0x20\n      |                                            ^~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:109:23: note: in expansion of macro 'OS_FILESYS_FLAG_IS_MOUNTED_VIRTUAL'\n  109 | static const uint32_t OS_FILESYS_FLAG_IS_MOUNTED_VIRTUAL = 0x1u;\n      |                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:110:15: error: redefinition of 'OS_strnlen'\n  110 | static size_t OS_strnlen(const char *s, size_t maxlen)\n      |               ^~~~~~~~~~\nIn file included from /tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:54:\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-common.h:142:22: note: previous definition of 'OS_strnlen' with type 'size_t(const char *, size_t)' {aka 'long unsigned int(const char *, long unsigned int)'}\n  142 | static inline size_t OS_strnlen(const char *s, size_t maxlen)\n      |                      ^~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:148:6: error: conflicting types for 'OS_FileSys_FindVirtMountPoint'; have '_Bool(void *, const OS_object_token_t *, const OS_common_record_t *)' {aka '_Bool(void *, const int *, const OS_common_record_t *)'}\n  148 | bool OS_FileSys_FindVirtMountPoint(void *ref, const OS_object_token_t *token, const OS_common_record_t *obj)\n      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:52:\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-filesys.h:181:7: note: previous declaration of 'OS_FileSys_FindVirtMountPoint' with type '_Bool(void *, const OS_object_token_t *, const OS_common_record_t *)' {aka '_Bool(void *, const struct OS_object_token *, const struct OS_common_record *)'}\n  181 | bool  OS_FileSys_FindVirtMountPoint(void *ref, const OS_object_token_t *token, const OS_common_record_t *obj);\n      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from /tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-globaldefs.h:37,\n                 from /tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-filesys.h:30,\n                 from /tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:52:\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c: In function 'OS_FileSys_Initialize':\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:247:46: error: 'OS_filesys_internal_record_t' has no member named 'device_name'\n  247 |     OS_CHECK_STRING(fsdevname, sizeof(filesys->device_name), OS_FS_ERR_PATH_TOO_LONG);\n      |                                              ^~\n/tmp/tmpp44mbptm/src/src/os/inc/osapi-macros.h:132:11: note: in definition of macro 'ARGCHECK'\n  132 |     if (!(cond))                \\\n      |           ^~~~\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-globaldefs.h:132:9: note: in expansion of macro 'LENGTHCHECK'\n  132 |         LENGTHCHECK(str, maxlen, errcode);    \\\n      |         ^~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:247:5: note: in expansion of macro 'OS_CHECK_STRING'\n  247 |     OS_CHECK_STRING(fsdevname, sizeof(filesys->device_name), OS_FS_ERR_PATH_TOO_LONG);\n      |     ^~~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:248:46: error: 'OS_filesys_internal_record_t' has no member named 'volume_name'\n  248 |     OS_CHECK_STRING(fsvolname, sizeof(filesys->volume_name), OS_FS_ERR_PATH_TOO_LONG);\n      |                                              ^~\n/tmp/tmpp44mbptm/src/src/os/inc/osapi-macros.h:132:11: note: in definition of macro 'ARGCHECK'\n  132 |     if (!(cond))                \\\n      |           ^~~~\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-globaldefs.h:132:9: note: in expansion of macro 'LENGTHCHECK'\n  132 |         LENGTHCHECK(str, maxlen, errcode);    \\\n      |         ^~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:248:5: note: in expansion of macro 'OS_CHECK_STRING'\n  248 |     OS_CHECK_STRING(fsvolname, sizeof(filesys->volume_name), OS_FS_ERR_PATH_TOO_LONG);\n      |     ^~~~~~~~~~~~~~~\nIn file included from /tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:53:\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-idmap.h:108:20: error: 'OS_filesys_internal_record_t' has no member named 'device_name'\n  108 |         strncpy(ref->namefield, nameval, sizeof(ref->namefield) - 1);  \\\n      |                    ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:262:9: note: in expansion of macro 'OS_OBJECT_INIT'\n  262 |         OS_OBJECT_INIT(token, filesys, device_name, fsdevname);\n      |         ^~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-idmap.h:108:52: error: 'OS_filesys_internal_record_t' has no member named 'device_name'\n  108 |         strncpy(ref->namefield, nameval, sizeof(ref->namefield) - 1);  \\\n      |                                                    ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:262:9: note: in expansion of macro 'OS_OBJECT_INIT'\n  262 |         OS_OBJECT_INIT(token, filesys, device_name, fsdevname);\n      |         ^~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-idmap.h:109:59: error: 'OS_filesys_internal_record_t' has no member named 'device_name'\n  109 |         OS_ObjectIdGlobalFromToken(&tok)->name_entry = ref->namefield; \\\n      |                                                           ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:262:9: note: in expansion of macro 'OS_OBJECT_INIT'\n  262 |         OS_OBJECT_INIT(token, filesys, device_name, fsdevname);\n      |         ^~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:266:16: error: 'OS_filesys_internal_record_t' has no member named 'blocksize'\n  266 |         filesys->blocksize = blocksize;\n      |                ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:267:16: error: 'OS_filesys_internal_record_t' has no member named 'numblocks'\n  267 |         filesys->numblocks = numblocks;\n      |                ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:268:16: error: 'OS_filesys_internal_record_t' has no member named 'address'\n  268 |         filesys->address   = address;\n      |                ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:269:24: error: 'OS_filesys_internal_record_t' has no member named 'volume_name'\n  269 |         strncpy(filesys->volume_name, fsvolname, sizeof(filesys->volume_name) - 1);\n      |                        ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:269:64: error: 'OS_filesys_internal_record_t' has no member named 'volume_name'\n  269 |         strncpy(filesys->volume_name, fsvolname, sizeof(filesys->volume_name) - 1);\n      |                                                                ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:278:20: error: 'OS_filesys_internal_record_t' has no member named 'fstype'\n  278 |         if (filesys->fstype == OS_FILESYS_TYPE_UNKNOWN &&\n      |                    ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:279:21: error: 'OS_filesys_internal_record_t' has no member named 'address'\n  279 |             (filesys->address != NULL || strncmp(filesys->volume_name, OS_FILESYS_RAMDISK_VOLNAME_PREFIX,\n      |                     ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:279:57: error: 'OS_filesys_internal_record_t' has no member named 'volume_name'\n  279 |             (filesys->address != NULL || strncmp(filesys->volume_name, OS_FILESYS_RAMDISK_VOLNAME_PREFIX,\n      |                                                         ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:282:20: error: 'OS_filesys_internal_record_t' has no member named 'fstype'\n  282 |             filesys->fstype = OS_FILESYS_TYPE_VOLATILE_DISK;\n      |                    ^~\nIn file included from /tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-globaldefs.h:37,\n                 from /tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-filesys.h:30,\n                 from /tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:52:\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c: In function 'OS_FileSysAddFixedMap':\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:356:46: error: 'OS_filesys_internal_record_t' has no member named 'system_mountpt'\n  356 |     OS_CHECK_STRING(phys_path, sizeof(filesys->system_mountpt), OS_FS_ERR_PATH_TOO_LONG);\n      |                                              ^~\n/tmp/tmpp44mbptm/src/src/os/inc/osapi-macros.h:132:11: note: in definition of macro 'ARGCHECK'\n  132 |     if (!(cond))                \\\n      |           ^~~~\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-globaldefs.h:132:9: note: in expansion of macro 'LENGTHCHECK'\n  132 |         LENGTHCHECK(str, maxlen, errcode);    \\\n      |         ^~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:356:5: note: in expansion of macro 'OS_CHECK_STRING'\n  356 |     OS_CHECK_STRING(phys_path, sizeof(filesys->system_mountpt), OS_FS_ERR_PATH_TOO_LONG);\n      |     ^~~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:372:43: error: 'OS_filesys_internal_record_t' has no member named 'volume_name'\n  372 |     if (memchr(dev_name, 0, sizeof(filesys->volume_name)) == NULL)\n      |                                           ^~\nIn file included from /tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:53:\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-idmap.h:108:20: error: 'OS_filesys_internal_record_t' has no member named 'device_name'\n  108 |         strncpy(ref->namefield, nameval, sizeof(ref->namefield) - 1);  \\\n      |                    ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:383:9: note: in expansion of macro 'OS_OBJECT_INIT'\n  383 |         OS_OBJECT_INIT(token, filesys, device_name, dev_name);\n      |         ^~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-idmap.h:108:52: error: 'OS_filesys_internal_record_t' has no member named 'device_name'\n  108 |         strncpy(ref->namefield, nameval, sizeof(ref->namefield) - 1);  \\\n      |                                                    ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:383:9: note: in expansion of macro 'OS_OBJECT_INIT'\n  383 |         OS_OBJECT_INIT(token, filesys, device_name, dev_name);\n      |         ^~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-idmap.h:109:59: error: 'OS_filesys_internal_record_t' has no member named 'device_name'\n  109 |         OS_ObjectIdGlobalFromToken(&tok)->name_entry = ref->namefield; \\\n      |                                                           ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:383:9: note: in expansion of macro 'OS_OBJECT_INIT'\n  383 |         OS_OBJECT_INIT(token, filesys, device_name, dev_name);\n      |         ^~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:385:24: error: 'OS_filesys_internal_record_t' has no member named 'volume_name'\n  385 |         strncpy(filesys->volume_name, dev_name, sizeof(filesys->volume_name) - 1);\n      |                        ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:385:63: error: 'OS_filesys_internal_record_t' has no member named 'volume_name'\n  385 |         strncpy(filesys->volume_name, dev_name, sizeof(filesys->volume_name) - 1);\n      |                                                               ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:386:24: error: 'OS_filesys_internal_record_t' has no member named 'system_mountpt'\n  386 |         strncpy(filesys->system_mountpt, phys_path, sizeof(filesys->system_mountpt) - 1);\n      |                        ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:386:67: error: 'OS_filesys_internal_record_t' has no member named 'system_mountpt'\n  386 |         strncpy(filesys->system_mountpt, phys_path, sizeof(filesys->system_mountpt) - 1);\n      |                                                                   ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:392:16: error: 'OS_filesys_internal_record_t' has no member named 'fstype'\n  392 |         filesys->fstype = OS_FILESYS_TYPE_FS_BASED;\n      |                ^~\nIn file included from /tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-globaldefs.h:37,\n                 from /tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-filesys.h:30,\n                 from /tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:52:\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c: In function 'OS_mount':\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:527:44: error: 'OS_filesys_internal_record_t' has no member named 'device_name'\n  527 |     OS_CHECK_STRING(devname, sizeof(filesys->device_name), OS_FS_ERR_PATH_TOO_LONG);\n      |                                            ^~\n/tmp/tmpp44mbptm/src/src/os/inc/osapi-macros.h:132:11: note: in definition of macro 'ARGCHECK'\n  132 |     if (!(cond))                \\\n      |           ^~~~\n/tmp/tmpp44mbptm/src/src/os/shared/inc/os-shared-globaldefs.h:132:9: note: in expansion of macro 'LENGTHCHECK'\n  132 |         LENGTHCHECK(str, maxlen, errcode);    \\\n      |         ^~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:527:5: note: in expansion of macro 'OS_CHECK_STRING'\n  527 |     OS_CHECK_STRING(devname, sizeof(filesys->device_name), OS_FS_ERR_PATH_TOO_LONG);\n      |     ^~~~~~~~~~~~~~~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:547:25: error: 'OS_filesys_internal_record_t' has no member named 'system_mountpt'\n  547 |         else if (filesys->system_mountpt[0] == 0)\n      |                         ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c: In function 'OS_FS_GetPhysDriveName':\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:719:43: error: 'OS_filesys_internal_record_t' has no member named 'system_mountpt'\n  719 |             strncpy(PhysDriveName, filesys->system_mountpt, OS_FS_PHYS_NAME_LEN - 1);\n      |                                           ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c: In function 'OS_TranslatePath':\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:843:50: error: 'OS_filesys_internal_record_t' has no member named 'system_mountpt'\n  843 |             SysMountPointLen = OS_strnlen(filesys->system_mountpt, sizeof(filesys->system_mountpt));\n      |                                                  ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:843:82: error: 'OS_filesys_internal_record_t' has no member named 'system_mountpt'\n  843 |             SysMountPointLen = OS_strnlen(filesys->system_mountpt, sizeof(filesys->system_mountpt));\n      |                                                                                  ^~\n/tmp/tmpp44mbptm/src/src/os/shared/src/osapi-filesys.c:847:42: error: 'OS_filesys_internal_record_t' has no member named 'system_mountpt'\n  847 |                 memcpy(LocalPath, filesys->system_mountpt, SysMountPointLen);\n      |                                          ^~\ngmake[2]: *** [CMakeFiles/osal.dir/build.make:188: CMakeFiles/osal.dir/src/os/shared/src/osapi-filesys.c.o] Error 1\ngmake[1]: *** [CMakeFiles/Makefile2:762: CMakeFiles/osal.dir/all] Error 2\ngmake: *** [Makefile:146: all] Error 2\n```\n</build error>\n<response format>\nProvide your answer with these answers.\n- fixed_test_code: the fixed test code that compiles successfully.\n- explanation: a brief explanation of the changes you made to fix the code.\nHere are the constraints for the test code:\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- The test code MUST preserve the original logic of OS_FileSys_FindVirtMountPoint as much as possible.\n- You MUST not define the main function.\n- You MUST not define macros.\n- The test code MUST not contain any mock functions.\n</response format>\n<instruction>\nPlease fix the code so that it compiles successfully.\n</instruction>\n",
  "fixed_test_code": "#include <stdio.h>\n#include <stdint.h>\n#include <string.h>\n#include <stdbool.h>\n#include <stdarg.h>\n#include <stddef.h>\n\n/* Minimal standalone definitions to make this test file self-contained.\n * These preserve the intended types/semantics used by OS_FileSys_FindVirtMountPoint\n * while avoiding external header dependencies for the compilation test.\n */\n\ntypedef int OS_object_token_t;\n\ntypedef struct OS_common_record\n{\n    /* placeholder for the real common record */\n    int dummy;\n} OS_common_record_t;\n\ntypedef struct OS_filesys_internal_record\n{\n    uint32_t flags;\n    char     virtual_mountpt[64];\n} OS_filesys_internal_record_t;\n\nstatic const uint32_t OS_FILESYS_FLAG_IS_MOUNTED_VIRTUAL = 0x1u;\n\n/* Provide a small table so OS_object_table_get can bound-check tokens. */\nstatic OS_filesys_internal_record_t OS_filesys_table[4] = {\n    {0, \"\"},\n    {OS_FILESYS_FLAG_IS_MOUNTED_VIRTUAL, \"/mnt/virt\"},\n    {OS_FILESYS_FLAG_IS_MOUNTED_VIRTUAL, \"/mnt/virt/sub\"},\n    {0, \"/not/virt\"}\n};\n\nstatic size_t OS_strnlen(const char *s, size_t maxlen)\n{\n    /* Use the C library strnlen if available; otherwise fall back. */\n#if defined(__STDC_LIB_EXT1__) || defined(_GNU_SOURCE) || defined(__APPLE__)\n    return strnlen(s, maxlen);\n#else\n    size_t i;\n    for (i = 0; i < maxlen && s[i] != '\\0'; ++i) {}\n    return i;\n#endif\n}\n\nstatic OS_filesys_internal_record_t *OS_object_table_get(OS_filesys_internal_record_t *table,\n                                                         OS_object_token_t token)\n{\n    if (token < 0)\n    {\n        /* Guard: return first entry if invalid token */\n        return &table[0];\n    }\n\n    /* Bound token to table size for safety in this test harness. */\n    if ((size_t)token >= (sizeof(OS_filesys_table) / sizeof(OS_filesys_table[0])))\n    {\n        return &table[0];\n    }\n\n    return &table[token];\n}\n\nstatic void log_probe(const char *fmt, ...)\n{\n    FILE *f = fopen(\"/tmp/logs/1403.txt\", \"a\");\n    if (f == NULL)\n    {\n        return;\n    }\n\n    va_list ap;\n    va_start(ap, fmt);\n    vfprintf(f, fmt, ap);\n    va_end(ap);\n\n    fprintf(f, \"\\n\");\n    fclose(f);\n}\n\nbool OS_FileSys_FindVirtMountPoint(void *ref, const OS_object_token_t *token, const OS_common_record_t *obj)\n{\n    OS_filesys_internal_record_t *filesys;\n    const char *                  target = (const char *)ref;\n    size_t                        mplen;\n\n    /* Log entry and key inputs. Do not modify data. */\n    log_probe(\"ENTER: OS_FileSys_FindVirtMountPoint ref=%p token=%p obj=%p\", ref, (void *)token, (const void *)obj);\n\n    /* Obtain the filesys record from the table (replaces the original macro). */\n    filesys = OS_object_table_get(OS_filesys_table, *token);\n\n    log_probe(\"filesys addr=%p flags=0x%08x virtual_mountpt=\\\"%s\\\"\",\n              (void *)filesys, (unsigned)filesys->flags, filesys->virtual_mountpt);\n\n    if ((filesys->flags & OS_FILESYS_FLAG_IS_MOUNTED_VIRTUAL) == 0)\n    {\n        log_probe(\"EXIT: not mounted virtual (flags=0x%08x) -> false\", (unsigned)filesys->flags);\n        return false;\n    }\n\n    mplen = OS_strnlen(filesys->virtual_mountpt, sizeof(filesys->virtual_mountpt));\n\n    log_probe(\"computed mplen=%zu sizeof(virtual_mountpt)=%zu\", mplen, sizeof(filesys->virtual_mountpt));\n\n    /*\n     * The virtual_mountpt member should be a substring of the search target.\n     * If this matches a basic substring check then it may be match\n     */\n    if (mplen == 0 || mplen >= sizeof(filesys->virtual_mountpt) ||\n        strncmp(target, filesys->virtual_mountpt, mplen) != 0)\n    {\n        /* Log which condition caused the mismatch for reproducibility. */\n        if (mplen == 0)\n        {\n            log_probe(\"EXIT: mplen==0 -> false\");\n        }\n        else if (mplen >= sizeof(filesys->virtual_mountpt))\n        {\n            log_probe(\"EXIT: mplen >= sizeof(virtual_mountpt) (%zu >= %zu) -> false\", mplen, sizeof(filesys->virtual_mountpt));\n        }\n        else\n        {\n            /* Log a safe prefix of target as evidence (avoid reading beyond). */\n            char targ_preview[80];\n            size_t copylen = (mplen < (sizeof(targ_preview) - 1)) ? mplen : (sizeof(targ_preview) - 1);\n            if (target != NULL)\n            {\n                memcpy(targ_preview, target, copylen);\n            }\n            targ_preview[copylen] = '\\0';\n            log_probe(\"EXIT: strncmp mismatch (target_prefix=\\\"%s\\\") -> false\", targ_preview);\n        }\n\n        return false;\n    }\n\n    /*\n     * Confirm that the substring ends at either a directory separator\n     * or the end of string  (so exact mount points also match).\n     *\n     * For instance consider a virtual_mountpt of /mnt/abc and searching\n     * for target=/mnt/abcd - this should return false in that case.\n     */\n    bool result = (target[mplen] == '/' || target[mplen] == 0);\n\n    log_probe(\"FINAL CHECK: target[%zu] = '\\%c' (0x%02x) -> result=%s\",\n              mplen,\n              (target[mplen] == 0) ? '0' : target[mplen],\n              (unsigned char)target[mplen],\n              result ? \"true\" : \"false\");\n\n    log_probe(\"EXIT: OS_FileSys_FindVirtMountPoint -> %s\", result ? \"true\" : \"false\");\n\n    return result;\n}\n",
  "explanation": "Made the file self-contained to avoid conflicts with external project headers: defined minimal types (OS_object_token_t, OS_common_record_t, OS_filesys_internal_record_t), a small OS_filesys_table for bounds checking, and the flag as a const. Kept the original logic of OS_FileSys_FindVirtMountPoint intact, preserved helper functions (OS_strnlen, OS_object_table_get, log_probe), and included necessary standard headers. No macros or main() were added."
}