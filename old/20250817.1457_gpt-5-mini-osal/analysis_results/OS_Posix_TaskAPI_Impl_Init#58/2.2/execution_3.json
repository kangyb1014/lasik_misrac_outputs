{
  "result": "success",
  "message": "ENTER: OS_Posix_TaskAPI_Impl_Init\nmemset done: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nBefore GetSchedulerParams: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nOS_Posix_GetSchedulerParams(SCHED_FIFO) returned 1 -> (min=1, max=99)\nOS_Posix_GetSchedulerParams(SCHED_RR) returned 1 -> (min=1, max=99)\nBoth schedulers valid -> chosen SCHED_RR; assigned PriLimits(min=1,max=99)\nSelected policy 2; root task prio=99; adjusted PriLimits(min=1,max=98)\npthread_setschedparam failed: Operation not permitted (1)\nEXIT: OS_Posix_TaskAPI_Impl_Init -> OS_ERROR (EnableTaskPriorities false)\nENTER: OS_Posix_TaskAPI_Impl_Init\nmemset done: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nBefore GetSchedulerParams: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nOS_Posix_GetSchedulerParams(SCHED_FIFO) returned 1 -> (min=1, max=99)\nOS_Posix_GetSchedulerParams(SCHED_RR) returned 1 -> (min=1, max=99)\nBoth schedulers valid -> chosen SCHED_RR; assigned PriLimits(min=1,max=99)\nSelected policy 2; root task prio=99; adjusted PriLimits(min=1,max=98)\npthread_setschedparam failed: Operation not permitted (1)\nEXIT: OS_Posix_TaskAPI_Impl_Init -> OS_ERROR (EnableTaskPriorities false)\nENTER: OS_Posix_TaskAPI_Impl_Init\nmemset done: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nBefore GetSchedulerParams: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nOS_Posix_GetSchedulerParams(SCHED_FIFO) returned 1 -> (min=1, max=99)\nOS_Posix_GetSchedulerParams(SCHED_RR) returned 1 -> (min=1, max=99)\nBoth schedulers valid -> chosen SCHED_RR; assigned PriLimits(min=1,max=99)\nSelected policy 2; root task prio=99; adjusted PriLimits(min=1,max=98)\npthread_setschedparam failed: Operation not permitted (1)\nEXIT: OS_Posix_TaskAPI_Impl_Init -> OS_ERROR (EnableTaskPriorities false)\nENTER: OS_Posix_TaskAPI_Impl_Init\nmemset done: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nBefore GetSchedulerParams: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nOS_Posix_GetSchedulerParams(SCHED_FIFO) returned 1 -> (min=1, max=99)\nOS_Posix_GetSchedulerParams(SCHED_RR) returned 1 -> (min=1, max=99)\nBoth schedulers valid -> chosen SCHED_RR; assigned PriLimits(min=1,max=99)\nSelected policy 2; root task prio=99; adjusted PriLimits(min=1,max=98)\npthread_setschedparam failed: Operation not permitted (1)\nEXIT: OS_Posix_TaskAPI_Impl_Init -> OS_ERROR (EnableTaskPriorities false)\nENTER: OS_Posix_TaskAPI_Impl_Init\nmemset done: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nBefore GetSchedulerParams: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nOS_Posix_GetSchedulerParams(SCHED_FIFO) returned 1 -> (min=1, max=99)\nOS_Posix_GetSchedulerParams(SCHED_RR) returned 1 -> (min=1, max=99)\nBoth schedulers valid -> chosen SCHED_RR; assigned PriLimits(min=1,max=99)\nSelected policy 2; root task prio=99; adjusted PriLimits(min=1,max=98)\npthread_setschedparam failed: Operation not permitted (1)\nEXIT: OS_Posix_TaskAPI_Impl_Init -> OS_ERROR (EnableTaskPriorities false)\nENTER: OS_Posix_TaskAPI_Impl_Init\nmemset done: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nBefore GetSchedulerParams: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nOS_Posix_GetSchedulerParams(SCHED_FIFO) returned 1 -> (min=1, max=99)\nOS_Posix_GetSchedulerParams(SCHED_RR) returned 1 -> (min=1, max=99)\nBoth schedulers valid -> chosen SCHED_RR; assigned PriLimits(min=1,max=99)\nSelected policy 2; root task prio=99; adjusted PriLimits(min=1,max=98)\npthread_setschedparam failed: Operation not permitted (1)\nEXIT: OS_Posix_TaskAPI_Impl_Init -> OS_ERROR (EnableTaskPriorities false)\nENTER: OS_Posix_TaskAPI_Impl_Init\nmemset done: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nBefore GetSchedulerParams: sched_fifo_limits (min=0, max=0), sched_rr_limits (min=0, max=0)\nOS_Posix_GetSchedulerParams(SCHED_FIFO) returned 1 -> (min=1, max=99)\nOS_Posix_GetSchedulerParams(SCHED_RR) returned 1 -> (min=1, max=99)\nBoth schedulers valid -> chosen SC"
}