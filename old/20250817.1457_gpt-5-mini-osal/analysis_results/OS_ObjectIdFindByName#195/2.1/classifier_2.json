{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.1 is: A project shall not contain unreachable code.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of OS_ObjectIdFindByName:\n```c\nint32 OS_ObjectIdFindByName(osal_objtype_t idtype, const char *name, osal_id_t *object_id)\n{\n    int32             return_code;\n    OS_object_token_t token;\n\n    /*\n     * As this is an internal-only function, calling it with NULL is allowed.\n     * This is required by the file/dir/socket API since these DO allow multiple\n     * instances of the same name.\n     */\n    ARGCHECK(name, OS_ERR_NAME_NOT_FOUND);\n    LENGTHCHECK(name, OS_MAX_API_NAME, OS_ERR_NAME_TOO_LONG);\n\n    return_code = OS_ObjectIdGetByName(OS_LOCK_MODE_GLOBAL, idtype, name, &token);\n    if (return_code == OS_SUCCESS)\n    {\n        *object_id = token.obj_id;\n\n        OS_ObjectIdRelease(&token);\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function OS_ObjectIdFindByName:\n#define ARGCHECK(cond, errcode) if(!(cond)){returnerrcode;}\n...\n#define LENGTHCHECK(str, len, errcode) ARGCHECK(memchr(str,'\\0',len),errcode)\n...\nint32 OS_ObjectIdGetByName(OS_lock_mode_t lock_mode, osal_objtype_t idtype, const char *name, OS_object_token_t *token)\n{\n    return OS_ObjectIdGetBySearch(lock_mode, idtype, OS_ObjectNameMatch, (void *)name, token);\n}\n...\nvoid OS_ObjectIdRelease(OS_object_token_t *token)\n{\n    OS_ObjectIdTransactionFinish(token, NULL);\n}\n...\ntypedef struct OS_object_token OS_object_token_t\n...\ntypedef uint32 osal_objtype_t\n...\ntypedef uint32 osal_id_t\n...\n#define OS_SUCCESS (0)\n...\n#define OS_ERR_NAME_NOT_FOUND (-17)\n...\n#define OS_ERR_NAME_TOO_LONG (-13)\n...\n#define OS_MAX_API_NAME 20\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\n/*\n     * As this is an internal-only function, calling it with NULL is allowed.\n     * This is required by the file/dir/socket API since these DO allow multiple\n     * instances of the same name.\n     */\n```\nFocus on the above code fragment and judge whether it violates the rule 2.1 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation. The fragment is a comment (non-executable) so it cannot be \u2018\u2018unreachable code\u2019\u2019. If anything, there is a semantic mismatch between the comment (saying NULL is allowed) and the subsequent ARGCHECK/LENGTHCHECK macros which will return an error for NULL/too-long names, but that is a behavioral/clarity issue, not a violation of MISRA C 2023 Rule 2.1."
}