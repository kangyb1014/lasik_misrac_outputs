{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 17.8 is: A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of OS_TimeBaseDelete_Impl:\n```c\nint32 OS_TimeBaseDelete_Impl(const OS_object_token_t *token)\n{\n    OS_impl_timebase_internal_record_t *local;\n    int                                 status;\n\n    local = OS_OBJECT_TABLE_GET(OS_impl_timebase_table, *token);\n\n    pthread_cancel(local->handler_thread);\n\n    /*\n    ** Delete the timer\n    */\n    if (local->assigned_signal != 0)\n    {\n        status = timer_delete(local->host_timerid);\n        if (status < 0)\n        {\n            OS_DEBUG(\"Error deleting timer: %s\\n\", strerror(errno));\n            return OS_TIMER_ERR_INTERNAL;\n        }\n\n        local->assigned_signal = 0;\n    }\n\n    return OS_SUCCESS;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "int32 OS_TimeBaseDelete_Impl(const OS_object_token_t *token)",
    "local = OS_OBJECT_TABLE_GET(OS_impl_timebase_table, *token);"
  ],
  "explanation": "The MISRA Rule 17.8 concern is modification of the function parameter (the pointer variable itself). In this function there are no assignments to the parameter token (no \"token = ...\"), so the pointer variable is not modified directly elsewhere in the body. Dereferencing the pointer (using *token) to obtain the referenced object is permitted by the rule (the object referred to by a pointer parameter may be modified). Other statements (pthread_cancel, timer_delete, local->assigned_signal = 0) operate on 'local' or external APIs and do not modify the parameter variable itself. The only places that could conceal a modification of the parameter are (a) the function declaration (to check whether the pointer itself is declared const or could be reassigned) and (b) the macro call that takes *token, since a macro expansion might contain code that modifies the original parameter. Therefore those two fragments should be investigated; other fragments in the function do not present a risk under Rule 17.8."
}