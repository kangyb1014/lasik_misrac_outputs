{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of OS_SymbolLookup_Impl:\n```c\nint32 OS_SymbolLookup_Impl(cpuaddr *SymbolAddress, const char *SymbolName)\n{\n    int32            status;\n    int32            local_status;\n    OS_object_iter_t iter;\n\n    /* First search global table */\n    status = OS_GenericSymbolLookup_Impl(OSAL_DLSYM_DEFAULT_HANDLE, SymbolAddress, SymbolName);\n\n    /* If not found iterate through module local symbols and break if found */\n    if (status != OS_SUCCESS)\n    {\n        OS_ObjectIdIterateActive(OS_OBJECT_TYPE_OS_MODULE, &iter);\n        while (OS_ObjectIdIteratorGetNext(&iter))\n        {\n            local_status = OS_ModuleSymbolLookup_Impl(&iter.token, SymbolAddress, SymbolName);\n            if (local_status == OS_SUCCESS)\n            {\n                status = local_status;\n                break;\n            }\n        }\n        OS_ObjectIdIteratorDestroy(&iter);\n    }\n\n    return status;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nlocal_status = OS_ModuleSymbolLookup_Impl(&iter.token, SymbolAddress, SymbolName);\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": true,
  "scenario": "If OS_ModuleSymbolLookup_Impl is declared to take a non-const pointer for the symbol name (e.g. int32 OS_ModuleSymbolLookup_Impl(..., cpuaddr *SymbolAddress, char *SymbolName)) or a non-const pointer to the token when it need not modify the token, then this call passes a const-qualified pointer (const char *SymbolName) to a parameter that is not const \u2014 discarding const qualification. That would violate MISRA C 2023 Rule 8.13. (If, however, OS_ModuleSymbolLookup_Impl already declares its parameters as const where appropriate, no violation occurs.)"
}