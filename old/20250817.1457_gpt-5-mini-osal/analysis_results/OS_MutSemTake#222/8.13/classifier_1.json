{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of OS_MutSemTake:\n```c\nint32 OS_MutSemTake(osal_id_t sem_id)\n{\n    OS_mutex_internal_record_t *mutex;\n    OS_object_token_t           token;\n    int32                       return_code;\n\n    /* Check Parameters */\n    return_code = OS_ObjectIdGetById(OS_LOCK_MODE_NONE, LOCAL_OBJID_TYPE, sem_id, &token);\n    if (return_code == OS_SUCCESS)\n    {\n        mutex = OS_OBJECT_TABLE_GET(OS_mutex_table, token);\n\n        return_code = OS_MutSemTake_Impl(&token);\n        if (return_code == OS_SUCCESS)\n        {\n            /* Always set the owner if OS_MutSemTake_Impl() returned success */\n            mutex->last_owner = OS_TaskGetId();\n        }\n    }\n\n    return return_code;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function OS_MutSemTake:\ntypedef struct\n{\n    char      obj_name[OS_MAX_API_NAME];\n    osal_id_t last_owner;\n} OS_mutex_internal_record_t\n...\n#define OS_OBJECT_TABLE_GET(tbl, tok) (&tbl[OS_ObjectIndexFromToken(&(tok))])\n...\nOS_mutex_internal_record_t OS_mutex_table[LOCAL_NUM_OBJECTS]\n...\ntypedef struct OS_object_token OS_object_token_t\n...\n#define OS_SUCCESS (0)\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nmutex = OS_OBJECT_TABLE_GET(OS_mutex_table, token);\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation: in this function the pointer is used to modify the object (mutex->last_owner = ...), so the pointer must not be to a const-qualified type. A violation would occur if the code only read from the table (e.g. accessed mutex->obj_name for read-only purposes) but declared the pointer as non-const \u2014 in that case the pointer should be declared as const OS_mutex_internal_record_t *mutex."
}