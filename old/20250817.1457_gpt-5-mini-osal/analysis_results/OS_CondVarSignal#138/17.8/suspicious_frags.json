{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 17.8 is: A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of OS_CondVarSignal:\n```c\nint32 OS_CondVarSignal(osal_id_t var_id)\n{\n    OS_object_token_t token;\n    int32             return_code;\n\n    /* Check Parameters */\n    return_code = OS_ObjectIdGetById(OS_LOCK_MODE_NONE, OS_OBJECT_TYPE_OS_CONDVAR, var_id, &token);\n    if (return_code == OS_SUCCESS)\n    {\n        return_code = OS_CondVarSignal_Impl(&token);\n    }\n\n    return return_code;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "return_code = OS_ObjectIdGetById(OS_LOCK_MODE_NONE, OS_OBJECT_TYPE_OS_CONDVAR, var_id, &token);",
    "return_code = OS_CondVarSignal_Impl(&token);"
  ],
  "explanation": "MISRA C 2023 Rule 17.8 concerns modification of function parameters, in particular pointer parameters (the pointer itself must not be modified). In this function the only places that could implicate pointer-parameter modification are calls that pass the address of a local object (\"&token\") to other functions. Those called functions (OS_ObjectIdGetById and OS_CondVarSignal_Impl) will receive a pointer parameter and therefore must be inspected to ensure they do not modify the pointer parameter itself. Other fragments do not need investigation for Rule 17.8: the parameter var_id is passed by value and is not assigned to or modified in this function; return_code and token are local variables (modifying locals is allowed); declarations and the final \"return return_code;\" do not modify function parameters. Hence only the two call sites that pass &token are potentially relevant to Rule 17.8."
}