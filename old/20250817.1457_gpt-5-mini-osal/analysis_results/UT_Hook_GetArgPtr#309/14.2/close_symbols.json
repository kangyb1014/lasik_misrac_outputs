{
  "user_message": "Target function code is:\n```c\nconst void *UT_Hook_GetArgPtr(const UT_StubContext_t *ContextPtr, const char *Name, size_t ExpectedTypeSize)\n{\n    uint32                      i;\n    const void *                Result;\n    const UT_StubArgMetaData_t *MetaPtr;\n\n    static const union\n    {\n        unsigned long AsInt;\n        void *        AsPtr;\n        double        AsFloat;\n    } ARG_DEFAULT_ZERO_VALUE = {0};\n\n    Result = NULL;\n    for (i = 0; i < ContextPtr->ArgCount; ++i)\n    {\n        MetaPtr = &ContextPtr->Meta[i];\n        if (MetaPtr->Name != NULL)\n        {\n            if (strcmp(MetaPtr->Name, Name) == 0 && (MetaPtr->Size == 0 || MetaPtr->Size == ExpectedTypeSize))\n            {\n                if (MetaPtr->Type == UT_STUBCONTEXT_ARG_TYPE_DIRECT)\n                {\n                    Result = &ContextPtr->ArgPtr[i];\n                }\n                else if (MetaPtr->Type == UT_STUBCONTEXT_ARG_TYPE_INDIRECT)\n                {\n                    Result = ContextPtr->ArgPtr[i];\n                }\n                break;\n            }\n        }\n    }\n\n    /*\n     * If no suitable result pointer was found, this means a mismatch\n     * between the stub and test case, such as a change in argument/parameter names.\n     * This is an error that should be corrected, so report it as a failure.\n     */\n    if (Result == NULL)\n    {\n        UtAssert_Failed(\"Requested parameter %s of size %lu which was not provided by the stub\", Name,\n                        (unsigned long)ExpectedTypeSize);\n\n        if (ExpectedTypeSize <= sizeof(ARG_DEFAULT_ZERO_VALUE))\n        {\n            Result = &ARG_DEFAULT_ZERO_VALUE;\n        }\n        else\n        {\n            /*\n             * As the caller will likely dereference the returned pointer, should\n             * never return NULL.  Just abort here.\n             */\n            UtAssert_Abort(\"No value for parameter\");\n        }\n    }\n\n    return Result;\n}\n```\n\nStatic call graph of the target function is:\n```json\n{'UT_Hook_GetArgPtr': {'callees': ['UtAssert_GetContext', 'UtAssert_Abort'], 'callers': ['UT_DefaultHandler_OS_BinSemCreate', 'UT_DefaultHandler_OS_BinSemGetInfo', 'UT_DefaultHandler_OS_BinSemDelete', 'UT_DefaultHandler_OS_BinSemGetIdByName', 'UT_DefaultHandler_OS_GetLocalTime', 'UT_DefaultHandler_OS_SetLocalTime', 'UT_DefaultHandler_OS_CountSemCreate', 'UT_DefaultHandler_OS_CountSemDelete', 'UT_DefaultHandler_OS_CountSemGetIdByName', 'UT_DefaultHandler_OS_CountSemGetInfo', 'UT_DefaultHandler_OS_DirectoryOpen', 'UT_DefaultHandler_OS_DirectoryClose', 'UT_DefaultHandler_OS_DirectoryRead', 'UT_DefaultHandler_OS_GetErrorName', 'UT_GenericReadStub', 'UT_GenericWriteStub', 'UT_DefaultHandler_OS_OpenCreate', 'UT_DefaultHandler_OS_close', 'UT_DefaultHandler_OS_stat', 'UT_DefaultHandler_OS_lseek', 'UT_DefaultHandler_OS_FDGetInfo', 'UT_DefaultHandler_OS_FileSysAddFixedMap', 'UT_DefaultHandler_OS_FileSysStatVolume', 'UT_DefaultHandler_OS_FS_GetPhysDriveName', 'UT_DefaultHandler_OS_GetFsInfo', 'UT_DefaultHandler_OS_TranslatePath', 'UT_DefaultHandler_OS_HeapGetInfo', 'UT_DefaultHandler_OS_ObjectIdToArrayIndex', 'UT_DefaultHandler_OS_GetResourceName', 'UT_DefaultHandler_OS_ConvertToArrayIndex', 'UT_DefaultHandler_OS_ForEachObjectOfType', 'UT_DefaultHandler_OS_ForEachObject', 'UT_DefaultHandler_OS_IdentifyObject', 'UT_DefaultHandler_OS_ModuleLoad', 'UT_DefaultHandler_OS_ModuleUnload', 'UT_DefaultHandler_OS_ModuleInfo', 'UT_DefaultHandler_OS_SymbolLookup', 'UT_DefaultHandler_OS_ModuleSymbolLookup', 'UT_DefaultHandler_OS_MutSemCreate', 'UT_DefaultHandler_OS_MutSemDelete', 'UT_DefaultHandler_OS_MutSemGetIdByName', 'UT_DefaultHandler_OS_MutSemGetInfo', 'UT_DefaultHandler_OS_NetworkGetHostName', 'UT_DefaultHandler_OS_printf', 'UT_DefaultHandler_OS_QueueCreate', 'UT_DefaultHandler_OS_QueueDelete', 'UT_DefaultHandler_OS_QueueGet', 'UT_DefaultHandler_OS_QueuePut', 'UT_DefaultHandler_OS_QueueGetIdByName', 'UT_DefaultHandler_OS_QueueGetInfo', 'UT_DefaultHandler_OS_SocketOpen', 'UT_DefaultHandler_OS_SocketRecvFrom', 'UT_DefaultHandler_OS_SocketSendTo', 'UT_DefaultHandler_OS_SocketGetIdByName', 'UT_DefaultHandler_OS_SocketGetInfo', 'UT_DefaultHandler_OS_SocketAddrInit', 'UT_DefaultHandler_OS_SocketAddrToString', 'UT_DefaultHandler_OS_SocketAddrFromString', 'UT_DefaultHandler_OS_SocketAddrGetPort', 'UT_DefaultHandler_OS_TaskCreate', 'UT_DefaultHandler_OS_TaskDelete', 'UT_DefaultHandler_OS_TaskGetIdByName', 'UT_DefaultHandler_OS_TaskGetInfo', 'UT_DefaultHandler_OS_TaskFindIdBySystemData', 'UT_DefaultHandler_OS_TimerAdd', 'UT_DefaultHandler_OS_TimerCreate', 'UT_DefaultHandler_OS_TimerDelete', 'UT_DefaultHandler_OS_TimerGetIdByName', 'UT_DefaultHandler_OS_TimerGetInfo', 'UT_DefaultHandler_OS_TimeBaseCreate', 'UT_DefaultHandler_OS_TimeBaseDelete', 'UT_DefaultHandler_OS_TimeBaseGetIdByName', 'UT_DefaultHandler_OS_TimeBaseGetInfo', 'UT_DefaultHandler_OS_TimeBaseGetFreeRun']}, 'UtAssert_GetContext': {'callees': [], 'callers': ['UtAssert', 'UT_StoreRetval', 'UT_LoadRetval', 'UT_SetDeferredRetcode', 'UT_Stub_GetReturnValuePtr', 'UT_Hook_GetArgPtr', 'UT_DefaultStubImplWithArgs', 'UtMem2BinFile', 'UtBinFile2Mem', 'UtMem2HexFile', 'UtMem2BinFileCmp', 'UT_AllocStubObjId', 'UT_DeleteStubObjId']}, 'UtAssert_Abort': {'callees': ['UT_BSP_DoText'], 'callers': ['UT_Stub_CallOnce', 'UT_ConfigureGenericStubReturnValue', 'UT_Stub_RegisterReturnType', 'UT_Stub_GetReturnValuePtr', 'UT_SetDataBuffer', 'UT_DoSetHookFunction', 'UT_Hook_GetArgPtr', 'UT_Stub_RegisterContextWithMetaData', 'UT_Stub_CopyToReturnValue', 'UT_DefaultStubImplWithArgs', 'UT_AllocStubObjId']}, 'UT_DefaultHandler_OS_BinSemCreate': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_BinSemGetInfo': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_BinSemDelete': {'callees': ['UT_Hook_GetArgPtr', 'UT_DeleteStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_BinSemGetIdByName': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_GetLocalTime': {'callees': ['UT_Hook_GetArgPtr', 'UT_GetStubCount', 'UT_Stub_CopyToLocal', 'OS_TimeAssembleFromNanoseconds'], 'callers': []}, 'UT_DefaultHandler_OS_SetLocalTime': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyFromLocal'], 'callers': []}, 'UT_DefaultHandler_OS_CountSemCreate': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_CountSemDelete': {'callees': ['UT_Hook_GetArgPtr', 'UT_DeleteStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_CountSemGetIdByName': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_CountSemGetInfo': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_DirectoryOpen': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_DirectoryClose': {'callees': ['UT_Hook_GetArgPtr', 'UT_DeleteStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_DirectoryRead': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_GetErrorName': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_GenericReadStub': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_Stub_CopyToReturnValue'], 'callers': ['UT_DefaultHandler_OS_read', 'UT_DefaultHandler_OS_TimedRead']}, 'UT_GenericWriteStub': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyFromLocal', 'UT_Stub_CopyToReturnValue'], 'callers': ['UT_DefaultHandler_OS_write', 'UT_DefaultHandler_OS_TimedWrite']}, 'UT_DefaultHandler_OS_OpenCreate': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_close': {'callees': ['UT_Hook_GetArgPtr', 'UT_DeleteStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_stat': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_lseek': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToReturnValue'], 'callers': []}, 'UT_DefaultHandler_OS_FDGetInfo': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_FileSysAddFixedMap': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_FileSysStatVolume': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_FS_GetPhysDriveName': {'callees': ['UT_Hook_GetArgPtr'], 'callers': []}, 'UT_DefaultHandler_OS_GetFsInfo': {'callees': ['UT_Hook_GetArgPtr'], 'callers': []}, 'UT_DefaultHandler_OS_TranslatePath': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_HeapGetInfo': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_ObjectIdToArrayIndex': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdDecompose'], 'callers': []}, 'UT_DefaultHandler_OS_GetResourceName': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_ConvertToArrayIndex': {'callees': ['UT_Hook_GetArgPtr', 'UT_ObjIdDecompose'], 'callers': []}, 'UT_DefaultHandler_OS_ForEachObjectOfType': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_ForEachObject': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_IdentifyObject': {'callees': ['UT_Hook_GetArgPtr', 'UT_ObjIdDecompose', 'UT_Stub_CopyToReturnValue'], 'callers': []}, 'UT_DefaultHandler_OS_ModuleLoad': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_ModuleUnload': {'callees': ['UT_Hook_GetArgPtr', 'UT_DeleteStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_ModuleInfo': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_SymbolLookup': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_ModuleSymbolLookup': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_MutSemCreate': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_MutSemDelete': {'callees': ['UT_Hook_GetArgPtr', 'UT_DeleteStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_MutSemGetIdByName': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_MutSemGetInfo': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_NetworkGetHostName': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_printf': {'callees': ['UT_Hook_GetArgPtr', 'UtAssert_Message', 'UT_Stub_CopyFromLocal'], 'callers': []}, 'UT_DefaultHandler_OS_QueueCreate': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_QueueDelete': {'callees': ['UT_Hook_GetArgPtr', 'UT_DeleteStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_QueueGet': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'OS_ObjectIdToInteger', 'UT_Stub_CopyToReturnValue'], 'callers': []}, 'UT_DefaultHandler_OS_QueuePut': {'callees': ['UT_Hook_GetArgPtr', 'UT_SetDataBuffer', 'OS_ObjectIdToInteger'], 'callers': []}, 'UT_DefaultHandler_OS_QueueGetIdByName': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_QueueGetInfo': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_SocketOpen': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_SocketRecvFrom': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_Stub_CopyToReturnValue'], 'callers': []}, 'UT_DefaultHandler_OS_SocketSendTo': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyFromLocal', 'UT_Stub_CopyToReturnValue'], 'callers': []}, 'UT_DefaultHandler_OS_SocketGetIdByName': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_SocketGetInfo': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_SocketAddrInit': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_SocketAddrToString': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_SocketAddrFromString': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_SocketAddrGetPort': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal'], 'callers': []}, 'UT_DefaultHandler_OS_TaskCreate': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_TaskDelete': {'callees': ['UT_Hook_GetArgPtr', 'UT_DeleteStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_TaskGetIdByName': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_TaskGetInfo': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_TaskFindIdBySystemData': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_TimerAdd': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_TimerCreate': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_TimerDelete': {'callees': ['UT_Hook_GetArgPtr', 'UT_DeleteStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_TimerGetIdByName': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_TimerGetInfo': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_TimeBaseCreate': {'callees': ['UT_Hook_GetArgPtr', 'UT_AllocStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_TimeBaseDelete': {'callees': ['UT_Hook_GetArgPtr', 'UT_DeleteStubObjId'], 'callers': []}, 'UT_DefaultHandler_OS_TimeBaseGetIdByName': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_TimeBaseGetInfo': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_ObjIdCompose'], 'callers': []}, 'UT_DefaultHandler_OS_TimeBaseGetFreeRun': {'callees': ['UT_Hook_GetArgPtr', 'UT_Stub_CopyToLocal', 'UT_GetStubCount'], 'callers': []}}\n```\n\n\nList additional symbols that are required to analyze the target function to determine if the target function code violates the following MISRA C rule:\nA for loop shall be well-formed. The three clauses of a for statement are the:\n1. First clause shall be empty or an expression whose set the value of the loop counter or define and intialize the loop counter.\n2. Second clause shall be an expression that has no persistent side effects, and shall use the loop counter and optionally loop control flags, and shall not use any other object that is modified in the for loop body.\n3.Third clause shall be an expression whose modify only the value of the loop counter, and shall not use objects that are modified in the for loop body.\n4. There shall only be one loop counter in a for loop, which shall not be modified in for loop body. A loop control flag is defined as single identifier denoting an object with Boolean type that is used in the second clause. The behaviour of a for loop body includes the behaviour of any functions called within that statement. \nThe list will be included in the prompt for the next agent, so be concise and clear.\nExplain why each symbol is required in the analysis of the target function for the MISRA C rule.\n",
  "close_symbols": [
    "UT_StubContext_t",
    "UT_StubArgMetaData_t",
    "UT_STUBCONTEXT_ARG_TYPE_DIRECT",
    "UT_STUBCONTEXT_ARG_TYPE_INDIRECT",
    "strcmp",
    "uint32",
    "size_t"
  ],
  "explanation": "UT_StubContext_t \u2014 Required to inspect the declaration of ArgCount, Meta and ArgPtr (types, const/volatile qualifiers). The MISRA clause 2 forbids using in the second clause any object that is modified in the loop body; knowing ArgCount's type and qualifiers shows whether it can be modified in this function or by called functions.\n\nUT_StubArgMetaData_t \u2014 Required to see the types of Meta[i].Name, Meta[i].Size and Meta[i].Type. This determines whether accesses to these fields inside the loop body are modifying any object used in the for second/third clause or have side effects.\n\nUT_STUBCONTEXT_ARG_TYPE_DIRECT and UT_STUBCONTEXT_ARG_TYPE_INDIRECT \u2014 Required to confirm these are simple constant macros/enumerators with no side effects. The comparison of MetaPtr->Type against these constants must not have side effects that would violate clause 2/3.\n\nstrcmp \u2014 The loop body calls strcmp(MetaPtr->Name, Name). MISRA requires that the behaviour of called functions be considered part of the loop body; the prototype/semantics of strcmp must be known to verify it has no persistent side effects and does not modify the loop counter or ContextPtr->ArgCount.\n\nuint32 \u2014 The loop counter type (i) must be an integer type and not volatile; the typedef/definition is needed to verify the first and third clauses (initialization and ++i) only define/modify the loop counter and that its type satisfies MISRA expectations.\n\nsize_t \u2014 Included so the ExpectedTypeSize parameter's type and any interactions with Meta[i].Size can be assessed (ensures comparisons and conversions in the loop condition/body do not introduce hidden side effects or modifications relevant to clause 2)."
}