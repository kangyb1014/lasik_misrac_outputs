{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 2.1 is: A project shall not contain unreachable code.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of OS_SelectFdIsSet:\n```c\nbool OS_SelectFdIsSet(const OS_FdSet *Set, osal_id_t objid)\n{\n    int32        return_code;\n    osal_index_t local_id;\n\n    /* check parameters */\n    BUGCHECK(Set != NULL, false);\n\n    return_code = OS_ObjectIdToArrayIndex(OS_OBJECT_TYPE_OS_STREAM, objid, &local_id);\n    if (return_code != OS_SUCCESS)\n    {\n        return false;\n    }\n\n    /*\n     * Returns boolean for if the bit in the uint8 object_ids array that corresponds\n     * to the local_id is set where local_id >> 3 determines the array element,\n     * and the mask/shift checks the bit within that element.\n     */\n    return ((Set->object_ids[local_id >> 3] >> (local_id & 0x7)) & 0x1);\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "No statically unreachable code fragments were found in this function. Control flow is straightforward: the parameter check (BUGCHECK) enforces Set != NULL (its behavior may be implementation-defined, but it does not introduce unconditional unreachable statements in this function), then OS_ObjectIdToArrayIndex is called and the function returns early on error (if (return_code != OS_SUCCESS) { return false; }). The final return is reached on the success path. There are no statements after an unconditional return, no constant-condition branches that always skip code (e.g. if (0) { ... }), and no obvious infinite loops or other constructs that would make any statement in this function impossible to execute under all circumstances. If further verification is desired, review the definitions of the external macro/function implementations (particularly BUGCHECK and OS_ObjectIdToArrayIndex) to ensure they do not expand to constructs that make subsequent code textually unreachable (for example, a macro that unconditionally aborts or contains an unconditional return in all configurations). However, based on the source shown, there are no code fragments in this function that are unconditionally unreachable and thus require investigation for MISRA C:2023 Rule 2.1."
}