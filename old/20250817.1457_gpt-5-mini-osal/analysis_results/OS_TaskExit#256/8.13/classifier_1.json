{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of OS_TaskExit:\n```c\nvoid OS_TaskExit()\n{\n    osal_id_t         task_id;\n    OS_object_token_t token;\n\n    task_id = OS_TaskGetId_Impl();\n    if (OS_ObjectIdGetById(OS_LOCK_MODE_GLOBAL, LOCAL_OBJID_TYPE, task_id, &token) == OS_SUCCESS)\n    {\n        OS_TaskDetach_Impl(&token);\n\n        /* Complete the operation via the common routine */\n        OS_ObjectIdFinalizeDelete(OS_SUCCESS, &token);\n    }\n\n    /* call the implementation */\n    OS_TaskExit_Impl();\n\n    /* Impl function never returns */\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nOS_TaskDetach_Impl(&token);\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "The fragment by itself does not demonstrate a violation because whether a pointer should be const-qualified depends on the callee's prototype and whether the callee modifies the pointed-to object. If OS_TaskDetach_Impl is declared to accept a non-const pointer and actually modifies *token (e.g. updates fields inside token), then passing &token is appropriate and Rule 8.13 is not violated. The rule would be violated in the specific scenario where OS_TaskDetach_Impl has a prototype such as\n    void OS_TaskDetach_Impl(OS_object_token_t *token);\nbut the implementation never modifies the object through that pointer (it only reads from it). In that case the parameter should be declared as a pointer to const (const OS_object_token_t *token) and the call OS_TaskDetach_Impl(&token) would then pass the address of a const-qualified target; as written (non-const parameter but no modification) it would breach MISRA C Rule 8.13. Because the callee's signature/behavior are not provided, the code fragment alone is not sufficient evidence of a rule violation."
}