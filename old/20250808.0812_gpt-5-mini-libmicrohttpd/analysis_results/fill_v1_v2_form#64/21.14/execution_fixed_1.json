{
  "result": "compile_failed",
  "message": "post_example.c:391:1: error: conflicting types for 'MHD_add_response_header'; have 'int(struct MHD_Response *, const char *, const char *)'\n  391 | MHD_add_response_header (struct MHD_Response *response,\n      | ^~~~~~~~~~~~~~~~~~~~~~~\nIn file included from post_example.c:42:\n../../src/include/microhttpd.h:4540:1: note: previous declaration of 'MHD_add_response_header' with type 'enum MHD_Result(struct MHD_Response *, const char *, const char *)'\n 4540 | MHD_add_response_header (struct MHD_Response *response,\n      | ^~~~~~~~~~~~~~~~~~~~~~~\npost_example.c:395:1: error: conflicting types for 'MHD_queue_response'; have 'enum MHD_Result(struct MHD_Connection *, int,  struct MHD_Response *)'\n  395 | MHD_queue_response (struct MHD_Connection *connection,\n      | ^~~~~~~~~~~~~~~~~~\nIn file included from post_example.c:42:\n../../src/include/microhttpd.h:3746:1: note: previous declaration of 'MHD_queue_response' with type 'enum MHD_Result(struct MHD_Connection *, unsigned int,  struct MHD_Response *)'\n 3746 | MHD_queue_response (struct MHD_Connection *connection,\n      | ^~~~~~~~~~~~~~~~~~\nIn file included from post_example.c:42:\n../../src/include/microhttpd.h:586:42: error: expected identifier or '(' before string constant\n  586 | #define MHD_HTTP_HEADER_CONTENT_ENCODING \"Content-Encoding\"\n      |                                          ^~~~~~~~~~~~~~~~~~\npost_example.c:400:13: note: in expansion of macro 'MHD_HTTP_HEADER_CONTENT_ENCODING'\n  400 | const char *MHD_HTTP_HEADER_CONTENT_ENCODING = \"Content-Encoding\";\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n../../src/include/microhttpd.h:344:46: error: expected identifier or '(' before numeric constant\n  344 | #define MHD_HTTP_OK                          200\n      |                                              ^~~\npost_example.c:401:11: note: in expansion of macro 'MHD_HTTP_OK'\n  401 | const int MHD_HTTP_OK = 200;\n      |           ^~~~~~~~~~~\npost_example.c:66:3: error: expected identifier or '(' before string constant\n   66 |   \"<html><head><title>Tell me more</title></head><body><a href=\\\"/\\\">previous</a> <form action=\\\"/S\\\" method=\\\"post\\\">%s, what is your job? <input type=\\\"text\\\" name=\\\"v2\\\" value=\\\"%s\\\" /><input type=\\\"submit\\\" value=\\\"Next\\\" /></form></body></html>\"\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\npost_example.c:66:3: note: in definition of macro 'SECOND_PAGE'\n   66 |   \"<html><head><title>Tell me more</title></head><body><a href=\\\"/\\\">previous</a> <form action=\\\"/S\\\" method=\\\"post\\\">%s, what is your job? <input type=\\\"text\\\" name=\\\"v2\\\" value=\\\"%s\\\" /><input type=\\\"submit\\\" value=\\\"Next\\\" /></form></body></html>\"\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nmake[4]: *** [Makefile:1086: post_example.o] Error 1\nmake[3]: *** [Makefile:1234: all-recursive] Error 1\nmake[2]: *** [Makefile:449: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2"
}