{
  "user_message": "<target code>Here is the code that failed to compile:\n```c\nenum MHD_ValueKind\n{\n  MHD_HEADER_KIND = 1,\n  MHD_COOKIE_KIND = 2,\n  MHD_POSTDATA_KIND = 4,\n  MHD_GET_ARGUMENT_KIND = 8,\n  MHD_FOOTER_KIND = 16\n};\ntypedef enum MHD_Result (*MHD_KeyValueIterator)(void *cls,\n                                                enum MHD_ValueKind kind,\n                                                const char *key,\n                                                const char *value);\n\n__attribute__((visibility(\"default\"))) extern int\nMHD_get_connection_values (struct MHD_Connection *connection,\n                           enum MHD_ValueKind kind,\n                           MHD_KeyValueIterator iterator,\n                           void *iterator_cls)\n{\n  FILE *log = fopen(\"/tmp/logs/104.txt\", \"a\");\n  if (log)\n    fprintf(log, \"MHD_get_connection_values: entry connection=%p kind=%d iterator=%p\\n\",\n            (void *)connection, (int)kind, (void *)iterator);\n\n  int ret;\n  struct MHD_HTTP_Req_Header *pos;\n\n  if (NULL == connection)\n  {\n    if (log)\n      fprintf(log, \"MHD_get_connection_values: connection == NULL -> returning -1\\n\");\n    if (log)\n      fclose(log);\n    return -1;\n  }\n\n  ret = 0;\n  for (pos = connection->rq.headers_received; NULL != pos; pos = pos->next)\n  {\n    if (log)\n      fprintf(log, \"MHD_get_connection_values: visiting header name='%s' value='%s' kind=%d\\n\",\n              pos->header ? pos->header : \"(null)\", pos->value ? pos->value : \"(null)\", (int)pos->kind);\n\n    if (0 != (pos->kind & kind))\n    {\n      ret++;\n      if (log)\n        fprintf(log, \"MHD_get_connection_values: matched kind -> ret=%d\\n\", ret);\n\n      if ((NULL != iterator) &&\n          (MHD_NO == iterator (iterator_cls,\n                               pos->kind,\n                               pos->header,\n                               pos->value)))\n      {\n        if (log)\n          fprintf(log, \"MHD_get_connection_values: iterator returned MHD_NO -> returning %d\\n\", ret);\n        if (log)\n          fclose(log);\n        return ret;\n      }\n    }\n  }\n\n  if (log)\n    fprintf(log, \"MHD_get_connection_values: completed -> returning %d\\n\", ret);\n  if (log)\n    fclose(log);\n  return ret;\n}\n\n```\n</target code>\n<build error>\nThe build failed with the following error:\n```\nconnection.c:801:6: error: redeclaration of 'enum MHD_ValueKind'\n  801 | enum MHD_ValueKind\n      |      ^~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:37:\n../../src/include/microhttpd.h:2244:6: note: originally defined here\n 2244 | enum MHD_ValueKind\n      |      ^~~~~~~~~~~~~\nconnection.c:803:3: error: redeclaration of enumerator 'MHD_HEADER_KIND'\n  803 |   MHD_HEADER_KIND = 1,\n      |   ^~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:37:\n../../src/include/microhttpd.h:2260:3: note: previous definition of 'MHD_HEADER_KIND' with type 'enum MHD_ValueKind'\n 2260 |   MHD_HEADER_KIND = 1,\n      |   ^~~~~~~~~~~~~~~\nconnection.c:804:3: error: redeclaration of enumerator 'MHD_COOKIE_KIND'\n  804 |   MHD_COOKIE_KIND = 2,\n      |   ^~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:37:\n../../src/include/microhttpd.h:2266:3: note: previous definition of 'MHD_COOKIE_KIND' with type 'enum MHD_ValueKind'\n 2266 |   MHD_COOKIE_KIND = 2,\n      |   ^~~~~~~~~~~~~~~\nconnection.c:805:3: error: redeclaration of enumerator 'MHD_POSTDATA_KIND'\n  805 |   MHD_POSTDATA_KIND = 4,\n      |   ^~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:37:\n../../src/include/microhttpd.h:2276:3: note: previous definition of 'MHD_POSTDATA_KIND' with type 'enum MHD_ValueKind'\n 2276 |   MHD_POSTDATA_KIND = 4,\n      |   ^~~~~~~~~~~~~~~~~\nconnection.c:806:3: error: redeclaration of enumerator 'MHD_GET_ARGUMENT_KIND'\n  806 |   MHD_GET_ARGUMENT_KIND = 8,\n      |   ^~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:37:\n../../src/include/microhttpd.h:2281:3: note: previous definition of 'MHD_GET_ARGUMENT_KIND' with type 'enum MHD_ValueKind'\n 2281 |   MHD_GET_ARGUMENT_KIND = 8,\n      |   ^~~~~~~~~~~~~~~~~~~~~\nconnection.c:807:3: error: redeclaration of enumerator 'MHD_FOOTER_KIND'\n  807 |   MHD_FOOTER_KIND = 16\n      |   ^~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:37:\n../../src/include/microhttpd.h:2286:3: note: previous definition of 'MHD_FOOTER_KIND' with type 'enum MHD_ValueKind'\n 2286 |   MHD_FOOTER_KIND = 16\n      |   ^~~~~~~~~~~~~~~\nmake[3]: *** [Makefile:2098: libmicrohttpd_la-connection.lo] Error 1\nmake[2]: *** [Makefile:449: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2\n```\n</build error>\n<response format>\nProvide your answer with these answers.\n- fixed_test_code: the fixed test code that compiles successfully.\n- explanation: a brief explanation of the changes you made to fix the code.\nHere are the constraints for the test code:\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- The test code MUST preserve the original logic of MHD_get_connection_values as much as possible.\n- You MUST not define the main function.\n- You MUST not define macros.\n- The test code MUST not contain any mock functions.\n</response format>\n<instruction>\nPlease fix the code so that it compiles successfully.\n</instruction>\n",
  "fixed_test_code": "__attribute__((visibility(\"default\"))) extern int\nMHD_get_connection_values (struct MHD_Connection *connection,\n                           enum MHD_ValueKind kind,\n                           MHD_KeyValueIterator iterator,\n                           void *iterator_cls)\n{\n  FILE *log = fopen(\"/tmp/logs/104.txt\", \"a\");\n  if (log)\n    fprintf(log, \"MHD_get_connection_values: entry connection=%p kind=%d iterator=%p\\n\",\n            (void *)connection, (int)kind, (void *)iterator);\n\n  int ret;\n  struct MHD_HTTP_Req_Header *pos;\n\n  if (NULL == connection)\n  {\n    if (log)\n      fprintf(log, \"MHD_get_connection_values: connection == NULL -> returning -1\\n\");\n    if (log)\n      fclose(log);\n    return -1;\n  }\n\n  ret = 0;\n  for (pos = connection->rq.headers_received; NULL != pos; pos = pos->next)\n  {\n    if (log)\n      fprintf(log, \"MHD_get_connection_values: visiting header name='%s' value='%s' kind=%d\\n\",\n              pos->header ? pos->header : \"(null)\", pos->value ? pos->value : \"(null)\", (int)pos->kind);\n\n    if (0 != (pos->kind & kind))\n    {\n      ret++;\n      if (log)\n        fprintf(log, \"MHD_get_connection_values: matched kind -> ret=%d\\n\", ret);\n\n      if ((NULL != iterator) &&\n          (MHD_NO == iterator (iterator_cls,\n                               pos->kind,\n                               pos->header,\n                               pos->value)))\n      {\n        if (log)\n          fprintf(log, \"MHD_get_connection_values: iterator returned MHD_NO -> returning %d\\n\", ret);\n        if (log)\n          fclose(log);\n        return ret;\n      }\n    }\n  }\n\n  if (log)\n    fprintf(log, \"MHD_get_connection_values: completed -> returning %d\\n\", ret);\n  if (log)\n    fclose(log);\n  return ret;\n}\n",
  "explanation": "The build error was caused by redefinition of enum MHD_ValueKind (and the typedef) that were already declared in the public header. I removed the duplicate enum/typedef declarations from this source file so it uses the definitions provided by the included headers. The function implementation and its logic are otherwise unchanged."
}