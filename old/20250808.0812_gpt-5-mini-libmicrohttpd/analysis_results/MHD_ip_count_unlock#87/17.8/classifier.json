{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 17.8 is: A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n- test_code: a modified MHD_ip_count_unlock code that contains useful probe functions that print useful logs to a file \"/tmp/logs/701.txt\". The logs should contain the control path and state information of the violation scenario. If the MISRA C rule is not violated, you can just return an empty string for the test code.\nHere are the constraints for the test code:\n- DO NOT introduce new violations to demonstrate your scenario.\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- The test code MUST preserve the original logic of MHD_ip_count_unlock as much as possible.\n- You MUST NOT define the main function.\n- You MUST NOT define macros.\n- The test code MUST not contain any mock functions.\n</response format>\n<target_code>\nHere is the code of MHD_ip_count_unlock:\n```c\nstatic void\nMHD_ip_count_unlock (struct MHD_Daemon *daemon)\n{\n  mhd_assert (NULL == daemon->master);\n#if defined(MHD_USE_POSIX_THREADS) || defined(MHD_USE_W32_THREADS)\n  MHD_mutex_unlock_chk_ (&daemon->per_ip_connection_mutex);\n#else\n  (void) daemon;\n#endif\n}\n```\n</target_code>\nJudge whether the above MHD_ip_count_unlock code violates the rule 17.8 or not.",
  "is_rule_violated": false,
  "scenario": "No violation in the provided function. The function only reads members of the pointer parameter (daemon->master, &daemon->per_ip_connection_mutex) and uses (void) daemon to silence unused-parameter warnings. It does not assign to or otherwise modify the pointer parameter itself. A specific violation scenario (not present here) would be if the function assigned to the parameter, e.g. \"daemon = NULL;\" or \"daemon++\", which would modify the pointer variable and violate MISRA C 2023 Rule 17.8.",
  "test_code": ""
}