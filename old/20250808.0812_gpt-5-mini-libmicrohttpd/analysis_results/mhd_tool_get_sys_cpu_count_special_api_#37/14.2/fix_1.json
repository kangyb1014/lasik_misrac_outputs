{
  "user_message": "<target code>Here is the code that failed to compile:\n```c\nstatic void log_state(const char *stage, int ret, unsigned long enb_set)\n{\n    FILE *f = fopen(\"/tmp/logs/300.txt\", \"a\");\n    if (f != NULL)\n    {\n        fprintf(f, \"%s: ret=%d, enb_set=0x%lx\\n\", stage, ret, enb_set);\n        fclose(f);\n    }\n}\n\nstatic int\nmhd_tool_get_sys_cpu_count_special_api_ (void)\n{\n  int ret = -1;\n\n  if (0 >= ret)\n  {\n    /* VxWorks-like test path with logging; preserve original loop form\n       Note: cpuset_t is represented as an unsigned long here for testing */\n    typedef unsigned long cpuset_t;\n    cpuset_t enb_set;\n\n    /* Simulate enabled CPUs bitmask for the test (bits 0,2,3,4 set => 4 CPUs) */\n    enb_set = (cpuset_t)0x1DU;\n\n    log_state(\"before_loop\", ret, (unsigned long) enb_set);\n\n    /* Count set bits: original loop uses ret as loop counter, and the\n       third clause modifies enb_set. This is the construct that violates\n       MISRA C 2023 Rule 14.2 (third clause must modify only the loop counter). */\n    for (ret = 0; 0 != enb_set; enb_set &= enb_set - 1)\n    {\n      ++ret;\n      log_state(\"in_loop\", ret, (unsigned long) enb_set);\n    }\n\n    log_state(\"after_loop\", ret, (unsigned long) enb_set);\n  }\n\n  if (0 >= ret)\n    return -1;\n  return ret;\n}\n\n```\n</target code>\n<build error>\nThe build failed with the following error:\n```\n/tmp/tmp0775odkg/src/build-aux/missing: line 81: makeinfo: command not found\nWARNING: 'makeinfo' is missing on your system.\n         You should only need it if you modified a '.texi' file, or\n         any other file indirectly affecting the aspect of the manual.\n         You might want to install the Texinfo package:\n         <https://www.gnu.org/software/texinfo/>\n         The spurious makeinfo call might also be the consequence of\n         using a buggy 'make' (AIX, DU, IRIX), in which case you might\n         want to install GNU make:\n         <https://www.gnu.org/software/make/>\nmake[3]: *** [Makefile:543: libmicrohttpd.info] Error 127\nmake[2]: *** [Makefile:764: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2\n```\n</build error>\n<response format>\nProvide your answer with these answers.\n- fixed_test_code: the fixed test code that compiles successfully.\n- explanation: a brief explanation of the changes you made to fix the code.\nHere are the constraints for the test code:\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- The test code MUST preserve the original logic of mhd_tool_get_sys_cpu_count_special_api_ as much as possible.\n- You MUST not define the main function.\n- You MUST not define macros.\n- The test code MUST not contain any mock functions.\n</response format>\n<instruction>\nPlease fix the code so that it compiles successfully.\n</instruction>\n",
  "fixed_test_code": "#include <stdio.h>\n\nstatic void log_state(const char *stage, int ret, unsigned long enb_set)\n{\n    FILE *f = fopen(\"/tmp/logs/300.txt\", \"a\");\n    if (f != NULL)\n    {\n        fprintf(f, \"%s: ret=%d, enb_set=0x%lx\\n\", stage, ret, enb_set);\n        fclose(f);\n    }\n}\n\nstatic int\nmhd_tool_get_sys_cpu_count_special_api_ (void)\n{\n  int ret = -1;\n\n  if (0 >= ret)\n  {\n    /* VxWorks-like test path with logging; preserve original loop form\n       Note: cpuset_t is represented as an unsigned long here for testing */\n    typedef unsigned long cpuset_t;\n    cpuset_t enb_set;\n\n    /* Simulate enabled CPUs bitmask for the test (bits 0,2,3,4 set => 4 CPUs) */\n    enb_set = (cpuset_t)0x1DU;\n\n    log_state(\"before_loop\", ret, (unsigned long) enb_set);\n\n    /* Count set bits: original loop uses ret as loop counter, and the\n       third clause modifies enb_set. This is the construct that violates\n       MISRA C 2023 Rule 14.2 (third clause must modify only the loop counter). */\n    for (ret = 0; 0 != enb_set; enb_set &= enb_set - 1)\n    {\n      ++ret;\n      log_state(\"in_loop\", ret, (unsigned long) enb_set);\n    }\n\n    log_state(\"after_loop\", ret, (unsigned long) enb_set);\n  }\n\n  if (0 >= ret)\n    return -1;\n  return ret;\n}\n",
  "explanation": "Added the missing #include <stdio.h> so that FILE, fopen, fprintf, and fclose are declared. No other logic changes were made; the original loop and behavior of mhd_tool_get_sys_cpu_count_special_api_ are preserved."
}