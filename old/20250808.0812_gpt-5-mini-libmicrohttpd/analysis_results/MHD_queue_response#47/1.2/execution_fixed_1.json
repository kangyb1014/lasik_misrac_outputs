{
  "result": "compile_failed",
  "message": "In file included from internal.h:34,\n                 from connection.c:39:\n../../src/include/microhttpd.h:550:35: error: expected declaration specifiers or '...' before '(' token\n  550 | #define MHD_ICY_FLAG ((uint32_t) (((uint32_t) 1) << 31))\n      |                                   ^\nconnection.c:2157:27: note: in expansion of macro 'MHD_ICY_FLAG'\n 2157 | static const unsigned int MHD_ICY_FLAG = 0x80000000u;\n      |                           ^~~~~~~~~~~~\nIn file included from internal.h:32,\n                 from connection.c:39:\n../../src/include/mhd_options.h:82:29: error: expected identifier or '(' before numeric constant\n   82 | #    define MHD_USE_THREADS 1\n      |                             ^\nconnection.c:2158:27: note: in expansion of macro 'MHD_USE_THREADS'\n 2158 | static const unsigned int MHD_USE_THREADS = 0x00000001u;\n      |                           ^~~~~~~~~~~~~~~\nconnection.c:2159:27: error: 'MHD_ALLOW_UPGRADE' redeclared as different kind of symbol\n 2159 | static const unsigned int MHD_ALLOW_UPGRADE = 0x00000002u;\n      |                           ^~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:39:\n../../src/include/microhttpd.h:1501:3: note: previous definition of 'MHD_ALLOW_UPGRADE' with type 'enum MHD_FLAG'\n 1501 |   MHD_ALLOW_UPGRADE = 32768,\n      |   ^~~~~~~~~~~~~~~~~\nconnection.c:2160:27: error: 'MHD_USE_TLS' redeclared as different kind of symbol\n 2160 | static const unsigned int MHD_USE_TLS = 0x00000004u;\n      |                           ^~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:39:\n../../src/include/microhttpd.h:1265:3: note: previous definition of 'MHD_USE_TLS' with type 'enum MHD_FLAG'\n 1265 |   MHD_USE_TLS = 2,\n      |   ^~~~~~~~~~~\nconnection.c:2161:27: error: 'MHD_RF_HEAD_ONLY_RESPONSE' redeclared as different kind of symbol\n 2161 | static const unsigned int MHD_RF_HEAD_ONLY_RESPONSE = 0x00000001u;\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:39:\n../../src/include/microhttpd.h:3887:3: note: previous definition of 'MHD_RF_HEAD_ONLY_RESPONSE' with type 'enum MHD_ResponseFlags'\n 3887 |   MHD_RF_HEAD_ONLY_RESPONSE = 1 << 4\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2162:27: error: 'MHD_RF_HTTP_1_0_COMPATIBLE_STRICT' redeclared as different kind of symbol\n 2162 | static const unsigned int MHD_RF_HTTP_1_0_COMPATIBLE_STRICT = 0x00000002u;\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:39:\n../../src/include/microhttpd.h:3827:3: note: previous definition of 'MHD_RF_HTTP_1_0_COMPATIBLE_STRICT' with type 'enum MHD_ResponseFlags'\n 3827 |   MHD_RF_HTTP_1_0_COMPATIBLE_STRICT = 1 << 0,\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2163:27: error: 'MHD_RF_HTTP_1_0_SERVER' redeclared as different kind of symbol\n 2163 | static const unsigned int MHD_RF_HTTP_1_0_SERVER = 0x00000004u;\n      |                           ^~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:39:\n../../src/include/microhttpd.h:3848:3: note: previous definition of 'MHD_RF_HTTP_1_0_SERVER' with type 'enum MHD_ResponseFlags'\n 3848 |   MHD_RF_HTTP_1_0_SERVER = 1 << 1,\n      |   ^~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2164:27: error: 'MHD_RF_INSANITY_HEADER_CONTENT_LENGTH' redeclared as different kind of symbol\n 2164 | static const unsigned int MHD_RF_INSANITY_HEADER_CONTENT_LENGTH = 0x00000008u;\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:39:\n../../src/include/microhttpd.h:3862:3: note: previous definition of 'MHD_RF_INSANITY_HEADER_CONTENT_LENGTH' with type 'enum MHD_ResponseFlags'\n 3862 |   MHD_RF_INSANITY_HEADER_CONTENT_LENGTH = 1 << 2,\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2165:27: error: 'MHD_RAF_HAS_CONTENT_LENGTH' redeclared as different kind of symbol\n 2165 | static const unsigned int MHD_RAF_HAS_CONTENT_LENGTH = 0x00000001u;\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\ninternal.h:410:3: note: previous definition of 'MHD_RAF_HAS_CONTENT_LENGTH' with type 'enum MHD_ResponseAutoFlags'\n  410 |   MHD_RAF_HAS_CONTENT_LENGTH = 1 << 3,    /**< Has \"Content-Length\" header */\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2166:27: error: 'MHD_RAF_HAS_CONNECTION_HDR' redeclared as different kind of symbol\n 2166 | static const unsigned int MHD_RAF_HAS_CONNECTION_HDR = 0x00000002u;\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\ninternal.h:407:3: note: previous definition of 'MHD_RAF_HAS_CONNECTION_HDR' with type 'enum MHD_ResponseAutoFlags'\n  407 |   MHD_RAF_HAS_CONNECTION_HDR = 1 << 0,    /**< Has \"Connection\" header */\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2167:18: error: 'MHD_CONNECTION_HEADERS_PROCESSED' redeclared as different kind of symbol\n 2167 | static const int MHD_CONNECTION_HEADERS_PROCESSED = 1;\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\ninternal.h:646:3: note: previous definition of 'MHD_CONNECTION_HEADERS_PROCESSED' with type 'enum MHD_CONNECTION_STATE'\n  646 |   MHD_CONNECTION_HEADERS_PROCESSED = MHD_CONNECTION_HEADERS_RECEIVED + 1,\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2168:18: error: 'MHD_CONNECTION_FULL_REQ_RECEIVED' redeclared as different kind of symbol\n 2168 | static const int MHD_CONNECTION_FULL_REQ_RECEIVED = 2;\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\ninternal.h:681:3: note: previous definition of 'MHD_CONNECTION_FULL_REQ_RECEIVED' with type 'enum MHD_CONNECTION_STATE'\n  681 |   MHD_CONNECTION_FULL_REQ_RECEIVED = MHD_CONNECTION_FOOTERS_RECEIVED + 1,\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2169:18: error: 'MHD_CONNECTION_START_REPLY' redeclared as different kind of symbol\n 2169 | static const int MHD_CONNECTION_START_REPLY = 3;\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\ninternal.h:688:3: note: previous definition of 'MHD_CONNECTION_START_REPLY' with type 'enum MHD_CONNECTION_STATE'\n  688 |   MHD_CONNECTION_START_REPLY = MHD_CONNECTION_FULL_REQ_RECEIVED + 1,\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:39:\n../../src/include/microhttpd.h:337:46: error: expected identifier or '(' before numeric constant\n  337 | #define MHD_HTTP_SWITCHING_PROTOCOLS         101\n      |                                              ^~~\nconnection.c:2170:18: note: in expansion of macro 'MHD_HTTP_SWITCHING_PROTOCOLS'\n 2170 | static const int MHD_HTTP_SWITCHING_PROTOCOLS = 101;\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2171:18: error: 'MHD_HTTP_VER_1_0' redeclared as different kind of symbol\n 2171 | static const int MHD_HTTP_VER_1_0 = 0;\n      |                  ^~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\ninternal.h:860:3: note: previous definition of 'MHD_HTTP_VER_1_0' with type 'enum MHD_HTTP_Version'\n  860 |   MHD_HTTP_VER_1_0 = 2,\n      |   ^~~~~~~~~~~~~~~~\nconnection.c:2172:18: error: 'MHD_HTTP_MTHD_CONNECT' redeclared as different kind of symbol\n 2172 | static const int MHD_HTTP_MTHD_CONNECT = 1;\n      |                  ^~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\ninternal.h:927:3: note: previous definition of 'MHD_HTTP_MTHD_CONNECT' with type 'enum MHD_HTTP_Method'\n  927 |   MHD_HTTP_MTHD_CONNECT = 6,\n      |   ^~~~~~~~~~~~~~~~~~~~~\nconnection.c:2173:18: error: 'MHD_HTTP_MTHD_HEAD' redeclared as different kind of symbol\n 2173 | static const int MHD_HTTP_MTHD_HEAD = 2;\n      |                  ^~~~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\ninternal.h:911:3: note: previous definition of 'MHD_HTTP_MTHD_HEAD' with type 'enum MHD_HTTP_Method'\n  911 |   MHD_HTTP_MTHD_HEAD = 2,\n      |   ^~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:39:\n../../src/include/microhttpd.h:344:46: error: expected identifier or '(' before numeric constant\n  344 | #define MHD_HTTP_OK                          200\n      |                                              ^~~\nconnection.c:2174:18: note: in expansion of macro 'MHD_HTTP_OK'\n 2174 | static const int MHD_HTTP_OK = 200;\n      |                  ^~~~~~~~~~~\n../../src/include/microhttpd.h:352:46: error: expected identifier or '(' before numeric constant\n  352 | #define MHD_HTTP_NO_CONTENT                  204\n      |                                              ^~~\nconnection.c:2175:18: note: in expansion of macro 'MHD_HTTP_NO_CONTENT'\n 2175 | static const int MHD_HTTP_NO_CONTENT = 204;\n      |                  ^~~~~~~~~~~~~~~~~~~\n../../src/include/microhttpd.h:374:46: error: expected identifier or '(' before numeric constant\n  374 | #define MHD_HTTP_NOT_MODIFIED                304\n      |                                              ^~~\nconnection.c:2176:18: note: in expansion of macro 'MHD_HTTP_NOT_MODIFIED'\n 2176 | static const int MHD_HTTP_NOT_MODIFIED = 304;\n      |                  ^~~~~~~~~~~~~~~~~~~~~\nconnection.c:2177:18: error: 'RP_BODY_HEADERS_ONLY' redeclared as different kind of symbol\n 2177 | static const int RP_BODY_HEADERS_ONLY = 0;\n      |                  ^~~~~~~~~~~~~~~~~~~~\nconnection.c:2128:3: note: previous definition of 'RP_BODY_HEADERS_ONLY' with type 'enum replyBodyUse'\n 2128 |   RP_BODY_HEADERS_ONLY = 1,\n      |   ^~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:35,\n                 from connection.c:39:\nmhd_assert.h:45:32: error: expected identifier or '(' before 'void'\n   45 | #  define mhd_assert(ignore) ((void) 0)\n      |                                ^~~~\nconnection.c:2178:13: note: in expansion of macro 'mhd_assert'\n 2178 | static void mhd_assert(int cond) { if (!cond) abort(); }\n      |             ^~~~~~~~~~\nmhd_assert.h:45:38: error: expected ')' before numeric constant\n   45 | #  define mhd_assert(ignore) ((void) 0)\n      |                                      ^\nconnection.c:2178:13: note: in expansion of macro 'mhd_assert'\n 2178 | static void mhd_assert(int cond) { if (!cond) abort(); }\n      |             ^~~~~~~~~~\nIn file included from connection.c:45:\nmhd_str.h:155:32: error: expected declaration specifiers or '...' before '(' token\n  155 |   MHD_str_has_token_caseless_ ((str),(tkn),MHD_STATICSTR_LEN_ (tkn))\n      |                                ^\nconnection.c:2179:13: note: in expansion of macro 'MHD_str_has_s_token_caseless_'\n 2179 | static bool MHD_str_has_s_token_caseless_(const char *value, const char *token)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nmhd_str.h:155:38: error: expected declaration specifiers or '...' before '(' token\n  155 |   MHD_str_has_token_caseless_ ((str),(tkn),MHD_STATICSTR_LEN_ (tkn))\n      |                                      ^\nconnection.c:2179:13: note: in expansion of macro 'MHD_str_has_s_token_caseless_'\n 2179 | static bool MHD_str_has_s_token_caseless_(const char *value, const char *token)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:65,\n                 from connection.c:39:\nmhd_str_types.h:33:35: error: expected declaration specifiers or '...' before '(' token\n   33 | #define MHD_STATICSTR_LEN_(macro) (sizeof(macro) / sizeof(char) - 1)\n      |                                   ^\nmhd_str.h:155:44: note: in expansion of macro 'MHD_STATICSTR_LEN_'\n  155 |   MHD_str_has_token_caseless_ ((str),(tkn),MHD_STATICSTR_LEN_ (tkn))\n      |                                            ^~~~~~~~~~~~~~~~~~\nconnection.c:2179:13: note: in expansion of macro 'MHD_str_has_s_token_caseless_'\n 2179 | static bool MHD_str_has_s_token_caseless_(const char *value, const char *token)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\ninternal.h:890:59: error: expected ')' before '==' token\n  890 | #define MHD_IS_HTTP_VER_1_1_COMPAT(ver) (MHD_HTTP_VER_1_1 == (ver) || \\\n      |                                                           ^~\nconnection.c:2198:12: note: in expansion of macro 'MHD_IS_HTTP_VER_1_1_COMPAT'\n 2198 | static int MHD_IS_HTTP_VER_1_1_COMPAT(int ver) { return ver >= 1; }\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:60,\n                 from connection.c:39:\nconnection.c:2199:61: error: expected ')' before 'id'\n 2199 | static int MHD_thread_handle_ID_is_current_thread_(intptr_t id)\n      |                                                             ^~\nmhd_threads.h:312:6: note: in definition of macro 'MHD_thread_ID_is_valid_'\n  312 |    ((ID_var).valid)\n      |      ^~~~~~\nmhd_threads.h:499:6: note: in expansion of macro 'MHD_thread_ID_is_current_thread_'\n  499 |      MHD_thread_ID_is_current_thread_((hndl_id).ID)\n      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2199:12: note: in expansion of macro 'MHD_thread_handle_ID_is_current_thread_'\n 2199 | static int MHD_thread_handle_ID_is_current_thread_(intptr_t id)\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nmhd_threads.h:499:48: error: expected ')' before '.' token\n  499 |      MHD_thread_ID_is_current_thread_((hndl_id).ID)\n      |                                                ^\nmhd_threads.h:312:6: note: in definition of macro 'MHD_thread_ID_is_valid_'\n  312 |    ((ID_var).valid)\n      |      ^~~~~~\nmhd_threads.h:499:6: note: in expansion of macro 'MHD_thread_ID_is_current_thread_'\n  499 |      MHD_thread_ID_is_current_thread_((hndl_id).ID)\n      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2199:12: note: in expansion of macro 'MHD_thread_handle_ID_is_current_thread_'\n 2199 | static int MHD_thread_handle_ID_is_current_thread_(intptr_t id)\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nmhd_threads.h:312:13: error: expected ')' before '.' token\n  312 |    ((ID_var).valid)\n      |             ^\nmhd_threads.h:322:6: note: in expansion of macro 'MHD_thread_ID_is_valid_'\n  322 |     (MHD_thread_ID_is_valid_(ID_var) && \\\n      |      ^~~~~~~~~~~~~~~~~~~~~~~\nmhd_threads.h:499:6: note: in expansion of macro 'MHD_thread_ID_is_current_thread_'\n  499 |      MHD_thread_ID_is_current_thread_((hndl_id).ID)\n      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2199:12: note: in expansion of macro 'MHD_thread_handle_ID_is_current_thread_'\n 2199 | static int MHD_thread_handle_ID_is_current_thread_(intptr_t id)\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nmhd_threads.h:322:38: error: expected ')' before '&&' token\n  322 |     (MHD_thread_ID_is_valid_(ID_var) && \\\n      |                                      ^~\nmhd_threads.h:499:6: note: in expansion of macro 'MHD_thread_ID_is_current_thread_'\n  499 |      MHD_thread_ID_is_current_thread_((hndl_id).ID)\n      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2199:12: note: in expansion of macro 'MHD_thread_handle_ID_is_current_thread_'\n 2199 | static int MHD_thread_handle_ID_is_current_thread_(intptr_t id)\n      |            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:2205:13: error: 'MHD_resp_sender_std' redeclared as different kind of symbol\n 2205 | static void MHD_resp_sender_std(void) { }\n      |             ^~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\ninternal.h:1261:3: note: previous definition of 'MHD_resp_sender_std' with type 'enum MHD_resp_sender_'\n 1261 |   MHD_resp_sender_std = 0,\n      |   ^~~~~~~~~~~~~~~~~~~\nconnection.c:2206:13: error: 'MHD_resp_sender_sendfile' redeclared as different kind of symbol\n 2206 | static void MHD_resp_sender_sendfile(void) { }\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:39:\ninternal.h:1262:3: note: previous definition of 'MHD_resp_sender_sendfile' with type 'enum MHD_resp_sender_'\n 1262 |   MHD_resp_sender_sendfile\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~\ninternal.h:2558:4: error: expected identifier or '(' before numeric constant\n 2558 |   (0 != (d->options & (MHD_USE_INTERNAL_POLLING_THREAD)))\n      |    ^\nconnection.c:2207:12: note: in expansion of macro 'MHD_D_IS_USING_THREADS_'\n 2207 | static int MHD_D_IS_USING_THREADS_(struct MHD_Daemon *d)\n      |            ^~~~~~~~~~~~~~~~~~~~~~~\nconnection.c: In function 'check_and_grow_read_buffer_space':\nconnection.c:3704:5: error: case label does not reduce to an integer constant\n 3704 |     case MHD_CONNECTION_HEADERS_PROCESSED:\n      |     ^~~~\nconnection.c:3708:5: error: case label does not reduce to an integer constant\n 3708 |     case MHD_CONNECTION_FULL_REQ_RECEIVED:\n      |     ^~~~\nconnection.c:3709:5: error: case label does not reduce to an integer constant\n 3709 |     case MHD_CONNECTION_START_REPLY:\n      |     ^~~~\nconnection.c: In function 'MHD_connection_update_event_loop_info':\nconnection.c:3799:5: error: case label does not reduce to an integer constant\n 3799 |     case MHD_CONNECTION_HEADERS_PROCESSED:\n      |     ^~~~\nconnection.c:3841:5: error: case label does not reduce to an integer constant\n 3841 |     case MHD_CONNECTION_FULL_REQ_RECEIVED:\n      |     ^~~~\nconnection.c:3844:5: error: case label does not reduce to an integer constant\n 3844 |     case MHD_CONNECTION_START_REPLY:\n      |     ^~~~\nconnection.c: At top level:\nconnection.c:6402:13: error: static declaration of 'MHD_update_last_activity_' follows non-static declaration\n 6402 | static void MHD_update_last_activity_(struct MHD_Connection *c)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:41:\nconnection.h:200:1: note: previous declaration of 'MHD_update_last_activity_' with type 'void(struct MHD_Connection *)'\n  200 | MHD_update_last_activity_ (struct MHD_Connection *connection);\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c: In function 'MHD_connection_handle_read':\nconnection.c:6526:3: error: case label does not reduce to an integer constant\n 6526 |   case MHD_CONNECTION_FULL_REQ_RECEIVED:\n      |   ^~~~\nconnection.c:6542:3: error: case label does not reduce to an integer constant\n 6542 |   case MHD_CONNECTION_START_REPLY:\n      |   ^~~~\nconnection.c:6559:3: error: case label does not reduce to an integer constant\n 6559 |   case MHD_CONNECTION_HEADERS_PROCESSED:\n      |   ^~~~\nconnection.c: In function 'MHD_connection_handle_write':\nconnection.c:6623:3: error: case label does not reduce to an integer constant\n 6623 |   case MHD_CONNECTION_HEADERS_PROCESSED:\n      |   ^~~~\nconnection.c:6659:3: error: case label does not reduce to an integer constant\n 6659 |   case MHD_CONNECTION_FULL_REQ_RECEIVED:\n      |   ^~~~\nconnection.c:6662:3: error: case label does not reduce to an integer constant\n 6662 |   case MHD_CONNECTION_START_REPLY:\n      |   ^~~~\nconnection.c:6773:36: warning: comparison between pointer and integer\n 6773 |       if (MHD_resp_sender_sendfile == connection->rp.resp_sender)\n      |                                    ^~\nconnection.c: At top level:\nconnection.c:7186:13: error: conflicting types for 'MHD_connection_handle_idle'; have 'void(struct MHD_Connection *)'\n 7186 | static void MHD_connection_handle_idle(struct MHD_Connection *c)\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:41:\nconnection.h:137:1: note: previous declaration of 'MHD_connection_handle_idle' with type 'enum MHD_Result(struct MHD_Connection *)'\n  137 | MHD_connection_handle_idle (struct MHD_Connection *connection);\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c: In function 'MHD_queue_response':\nconnection.c:7677:34: error: incompatible types when assigning to type 'enum MHD_resp_sender_' from type 'void (*)(void)'\n 7677 |     connection->rp.resp_sender = MHD_resp_sender_std;\n      |                                  ^~~~~~~~~~~~~~~~~~~\nconnection.c:7679:34: error: incompatible types when assigning to type 'enum MHD_resp_sender_' from type 'void (*)(void)'\n 7679 |     connection->rp.resp_sender = MHD_resp_sender_sendfile;\n      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~\nmake[3]: *** [Makefile:2098: libmicrohttpd_la-connection.lo] Error 1\nmake[2]: *** [Makefile:449: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2"
}