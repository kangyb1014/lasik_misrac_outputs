{
  "result": "compile_failed",
  "message": "digestauth.c:1293:8: error: redefinition of 'struct MHD_RqDAuth'\n 1293 | struct MHD_RqDAuth {\n      |        ^~~~~~~~~~~\nIn file included from digestauth.c:44:\ninternal.h:2627:8: note: originally defined here\n 2627 | struct MHD_RqDAuth\n      |        ^~~~~~~~~~~\ndigestauth.c:1301:27: error: conflicting types for 'MHD_get_rq_dauth_params_'; have 'const struct MHD_RqDAuth *(struct MHD_Connection *)'\n 1301 | const struct MHD_RqDAuth *MHD_get_rq_dauth_params_(struct MHD_Connection *);\n      |                           ^~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from digestauth.c:41:\ngen_auth.h:73:1: note: previous declaration of 'MHD_get_rq_dauth_params_' with type 'const struct MHD_RqDAuth *(struct MHD_Connection *)'\n   73 | MHD_get_rq_dauth_params_ (struct MHD_Connection *connection);\n      | ^~~~~~~~~~~~~~~~~~~~~~~~\ndigestauth.c:1302:8: error: conflicting types for 'get_rq_unames_size'; have 'size_t(const struct MHD_RqDAuth *, enum MHD_DigestAuthUsernameType)' {aka 'long unsigned int(const struct MHD_RqDAuth *, enum MHD_DigestAuthUsernameType)'}\n 1302 | size_t get_rq_unames_size(const struct MHD_RqDAuth *, enum MHD_DigestAuthUsernameType);\n      |        ^~~~~~~~~~~~~~~~~~\ndigestauth.c:1002:1: note: previous definition of 'get_rq_unames_size' with type 'size_t(const struct MHD_RqDAuth *, enum MHD_DigestAuthUsernameType)' {aka 'long unsigned int(const struct MHD_RqDAuth *, enum MHD_DigestAuthUsernameType)'}\n 1002 | get_rq_unames_size (const struct MHD_RqDAuth *params,\n      | ^~~~~~~~~~~~~~~~~~\nIn file included from internal.h:35,\n                 from digestauth.c:44:\nmhd_assert.h:45:32: error: expected identifier or '(' before 'void'\n   45 | #  define mhd_assert(ignore) ((void) 0)\n      |                                ^~~~\ndigestauth.c:1303:6: note: in expansion of macro 'mhd_assert'\n 1303 | void mhd_assert(int cond)\n      |      ^~~~~~~~~~\nmhd_assert.h:45:38: error: expected ')' before numeric constant\n   45 | #  define mhd_assert(ignore) ((void) 0)\n      |                                      ^\ndigestauth.c:1303:6: note: in expansion of macro 'mhd_assert'\n 1303 | void mhd_assert(int cond)\n      |      ^~~~~~~~~~\ndigestauth.c: In function 'MHD_digest_auth_get_request_info3':\ndigestauth.c:1330:35: warning: passing argument 1 of 'get_rq_uname_type' from incompatible pointer type [-Wincompatible-pointer-types]\n 1330 |   uname_type = get_rq_uname_type (params);\n      |                                   ^~~~~~\n      |                                   |\n      |                                   const struct MHD_RqDAuth *\ndigestauth.c:970:46: note: expected 'const struct MHD_RqDAuth *' but argument is of type 'const struct MHD_RqDAuth *'\n  970 | get_rq_uname_type (const struct MHD_RqDAuth *params)\n      |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\ndigestauth.c:1359:33: warning: passing argument 1 of 'get_rq_uname' from incompatible pointer type [-Wincompatible-pointer-types]\n 1359 |     size_t used = get_rq_uname (params, uname_type,\n      |                                 ^~~~~~\n      |                                 |\n      |                                 const struct MHD_RqDAuth *\ndigestauth.c:1112:41: note: expected 'const struct MHD_RqDAuth *' but argument is of type 'const struct MHD_RqDAuth *'\n 1112 | get_rq_uname (const struct MHD_RqDAuth *params,\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\ndigestauth.c:1375:54: warning: passing argument 1 of 'get_rq_param_unquoted_copy_z' from incompatible pointer type [-Wincompatible-pointer-types]\n 1375 |     info->opaque_len = get_rq_param_unquoted_copy_z (&params->opaque,\n      |                                                      ^~~~~~~~~~~~~~~\n      |                                                      |\n      |                                                      const struct MHD_RqParam *\ndigestauth.c:1032:62: note: expected 'const struct MHD_RqDAuthParam *' but argument is of type 'const struct MHD_RqParam *'\n 1032 | get_rq_param_unquoted_copy_z (const struct MHD_RqDAuthParam *param, char *buf)\n      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~\ndigestauth.c:1383:53: warning: passing argument 1 of 'get_rq_param_unquoted_copy_z' from incompatible pointer type [-Wincompatible-pointer-types]\n 1383 |     info->realm_len = get_rq_param_unquoted_copy_z (&params->realm,\n      |                                                     ^~~~~~~~~~~~~~\n      |                                                     |\n      |                                                     const struct MHD_RqParam *\ndigestauth.c:1032:62: note: expected 'const struct MHD_RqDAuthParam *' but argument is of type 'const struct MHD_RqParam *'\n 1032 | get_rq_param_unquoted_copy_z (const struct MHD_RqDAuthParam *param, char *buf)\n      |                               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~\ndigestauth.c:1406:23: warning: passing argument 1 of 'get_rq_nc' from incompatible pointer type [-Wincompatible-pointer-types]\n 1406 |   nc_res = get_rq_nc (params, &info->nc);\n      |                       ^~~~~~\n      |                       |\n      |                       const struct MHD_RqDAuth *\ndigestauth.c:1214:38: note: expected 'const struct MHD_RqDAuth *' but argument is of type 'const struct MHD_RqDAuth *'\n 1214 | get_rq_nc (const struct MHD_RqDAuth *params,\n      |            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\ndigestauth.c: In function 'MHD_digest_auth_get_username3':\ndigestauth.c:1445:35: warning: passing argument 1 of 'get_rq_uname_type' from incompatible pointer type [-Wincompatible-pointer-types]\n 1445 |   uname_type = get_rq_uname_type (params);\n      |                                   ^~~~~~\n      |                                   |\n      |                                   const struct MHD_RqDAuth *\ndigestauth.c:970:46: note: expected 'const struct MHD_RqDAuth *' but argument is of type 'const struct MHD_RqDAuth *'\n  970 | get_rq_uname_type (const struct MHD_RqDAuth *params)\n      |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\ndigestauth.c:1456:33: warning: passing argument 1 of 'get_rq_uname' from incompatible pointer type [-Wincompatible-pointer-types]\n 1456 |   unif_buf_used = get_rq_uname (params, uname_type, uname_info, unif_buf_ptr,\n      |                                 ^~~~~~\n      |                                 |\n      |                                 const struct MHD_RqDAuth *\ndigestauth.c:1112:41: note: expected 'const struct MHD_RqDAuth *' but argument is of type 'const struct MHD_RqDAuth *'\n 1112 | get_rq_uname (const struct MHD_RqDAuth *params,\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\ndigestauth.c: In function 'MHD_digest_auth_get_username':\ndigestauth.c:1501:35: warning: passing argument 1 of 'get_rq_uname_type' from incompatible pointer type [-Wincompatible-pointer-types]\n 1501 |   uname_type = get_rq_uname_type (params);\n      |                                   ^~~~~~\n      |                                   |\n      |                                   const struct MHD_RqDAuth *\ndigestauth.c:970:46: note: expected 'const struct MHD_RqDAuth *' but argument is of type 'const struct MHD_RqDAuth *'\n  970 | get_rq_uname_type (const struct MHD_RqDAuth *params)\n      |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\ndigestauth.c:1522:26: warning: passing argument 1 of 'get_rq_uname' from incompatible pointer type [-Wincompatible-pointer-types]\n 1522 |     used = get_rq_uname (params, uname_type, &uname_strct,\n      |                          ^~~~~~\n      |                          |\n      |                          const struct MHD_RqDAuth *\ndigestauth.c:1112:41: note: expected 'const struct MHD_RqDAuth *' but argument is of type 'const struct MHD_RqDAuth *'\n 1112 | get_rq_uname (const struct MHD_RqDAuth *params,\n      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~\ndigestauth.c: In function 'digest_auth_check_all_inner':\ndigestauth.c:2731:22: error: 'const struct MHD_RqDAuth' has no member named 'username'\n 2731 |   if ((NULL == params->username.value.str) &&\n      |                      ^~\ndigestauth.c:2732:22: error: 'const struct MHD_RqDAuth' has no member named 'username_ext'\n 2732 |       (NULL == params->username_ext.value.str))\n      |                      ^~\ndigestauth.c:2734:27: error: 'const struct MHD_RqDAuth' has no member named 'username'\n 2734 |   else if ((NULL != params->username.value.str) &&\n      |                           ^~\ndigestauth.c:2735:27: error: 'const struct MHD_RqDAuth' has no member named 'username_ext'\n 2735 |            (NULL != params->username_ext.value.str))\n      |                           ^~\ndigestauth.c:2737:27: error: 'const struct MHD_RqDAuth' has no member named 'username_ext'\n 2737 |   else if ((NULL != params->username_ext.value.str) &&\n      |                           ^~\ndigestauth.c:2738:49: error: 'const struct MHD_RqDAuth' has no member named 'username_ext'\n 2738 |            (MHD_DAUTH_EXT_PARAM_MIN_LEN > params->username_ext.value.len))\n      |                                                 ^~\ndigestauth.c:2740:18: error: 'const struct MHD_RqDAuth' has no member named 'userhash'\n 2740 |   else if (params->userhash && (NULL == params->username.value.str))\n      |                  ^~\ndigestauth.c:2740:47: error: 'const struct MHD_RqDAuth' has no member named 'username'\n 2740 |   else if (params->userhash && (NULL == params->username.value.str))\n      |                                               ^~\ndigestauth.c:2742:18: error: 'const struct MHD_RqDAuth' has no member named 'userhash'\n 2742 |   else if (params->userhash && (digest_size * 2 > params->username.value.len))\n      |                  ^~\ndigestauth.c:2742:57: error: 'const struct MHD_RqDAuth' has no member named 'username'\n 2742 |   else if (params->userhash && (digest_size * 2 > params->username.value.len))\n      |                                                         ^~\ndigestauth.c:2744:18: error: 'const struct MHD_RqDAuth' has no member named 'userhash'\n 2744 |   else if (params->userhash && (digest_size * 4 < params->username.value.len))\n      |                  ^~\ndigestauth.c:2744:57: error: 'const struct MHD_RqDAuth' has no member named 'username'\n 2744 |   else if (params->userhash && (digest_size * 4 < params->username.value.len))\n      |                                                         ^~\ndigestauth.c:2747:28: error: 'const struct MHD_RqParam' has no member named 'value'\n 2747 |   if (NULL == params->realm.value.str)\n      |                            ^\ndigestauth.c:2749:43: error: 'const struct MHD_RqDAuth' has no member named 'userhash'\n 2749 |   else if (((NULL == userdigest) || params->userhash) &&\n      |                                           ^~\ndigestauth.c:2750:60: error: 'const struct MHD_RqParam' has no member named 'value'\n 2750 |            (_MHD_AUTH_DIGEST_MAX_PARAM_SIZE < params->realm.value.len))\n      |                                                            ^\ndigestauth.c:2755:27: error: request for member 'value' in something not a structure or union\n 2755 |     if (NULL == params->nc.value.str)\n      |                           ^\ndigestauth.c:2757:29: error: request for member 'value' in something not a structure or union\n 2757 |     else if (0 == params->nc.value.len)\n      |                             ^\ndigestauth.c:2759:32: error: request for member 'value' in something not a structure or union\n 2759 |     else if (4 * 8 < params->nc.value.len) /* Four times more than needed */\n      |                                ^\ndigestauth.c:2762:31: error: 'const struct MHD_RqParam' has no member named 'value'\n 2762 |     if (NULL == params->cnonce.value.str)\n      |                               ^\ndigestauth.c:2764:33: error: 'const struct MHD_RqParam' has no member named 'value'\n 2764 |     else if (0 == params->cnonce.value.len)\n      |                                 ^\ndigestauth.c:2766:62: error: 'const struct MHD_RqParam' has no member named 'value'\n 2766 |     else if (_MHD_AUTH_DIGEST_MAX_PARAM_SIZE < params->cnonce.value.len)\n      |                                                              ^\ndigestauth.c:2772:21: error: 'const struct MHD_RqDAuth' has no member named 'uri'\n 2772 |   if (NULL == params->uri.value.str)\n      |                     ^~\ndigestauth.c:2774:23: error: 'const struct MHD_RqDAuth' has no member named 'uri'\n 2774 |   else if (0 == params->uri.value.len)\n      |                       ^~\ndigestauth.c:2776:52: error: 'const struct MHD_RqDAuth' has no member named 'uri'\n 2776 |   else if (_MHD_AUTH_DIGEST_MAX_PARAM_SIZE < params->uri.value.len)\n      |                                                    ^~\ndigestauth.c:2779:23: error: 'const struct MHD_RqDAuth' has no member named 'nonce'; did you mean 'cnonce'?\n 2779 |   if (NULL == params->nonce.value.str)\n      |                       ^~~~~\n      |                       cnonce\ndigestauth.c:2781:25: error: 'const struct MHD_RqDAuth' has no member named 'nonce'; did you mean 'cnonce'?\n 2781 |   else if (0 == params->nonce.value.len)\n      |                         ^~~~~\n      |                         cnonce\ndigestauth.c:2783:54: error: 'const struct MHD_RqDAuth' has no member named 'nonce'; did you mean 'cnonce'?\n 2783 |   else if (NONCE_STD_LEN (digest_size) * 2 < params->nonce.value.len)\n      |                                                      ^~~~~\n      |                                                      cnonce\ndigestauth.c:2786:21: error: 'const struct MHD_RqDAuth' has no member named 'response'\n 2786 |   if (NULL == params->response.value.str)\n      |                     ^~\ndigestauth.c:2788:23: error: 'const struct MHD_RqDAuth' has no member named 'response'\n 2788 |   else if (0 == params->response.value.len)\n      |                       ^~\ndigestauth.c:2790:36: error: 'const struct MHD_RqDAuth' has no member named 'response'\n 2790 |   else if (digest_size * 4 < params->response.value.len)\n      |                                    ^~\ndigestauth.c:2805:25: warning: passing argument 1 of 'is_param_equal' from incompatible pointer type [-Wincompatible-pointer-types]\n 2805 |   if (! is_param_equal (&params->realm, realm, realm_len))\n      |                         ^~~~~~~~~~~~~~\n      |                         |\n      |                         const struct MHD_RqParam *\ndigestauth.c:2534:48: note: expected 'const struct MHD_RqDAuthParam *' but argument is of type 'const struct MHD_RqParam *'\n 2534 | is_param_equal (const struct MHD_RqDAuthParam *param,\n      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~\ndigestauth.c:2811:15: error: 'const struct MHD_RqDAuth' has no member named 'userhash'\n 2811 |   if (! params->userhash)\n      |               ^~\ndigestauth.c:2813:23: error: 'const struct MHD_RqDAuth' has no member named 'username'\n 2813 |     if (NULL != params->username.value.str)\n      |                       ^~\ndigestauth.c:2815:36: error: 'const struct MHD_RqDAuth' has no member named 'username'\n 2815 |       if (! is_param_equal (&params->username, username, username_len))\n      |                                    ^~\ndigestauth.c:2821:31: error: 'const struct MHD_RqDAuth' has no member named 'username_ext'\n 2821 |       size_t buf_size = params->username_ext.value.len;\n      |                               ^~\ndigestauth.c:2832:49: error: 'const struct MHD_RqDAuth' has no member named 'username_ext'\n 2832 |       res = get_rq_extended_uname_copy_z (params->username_ext.value.str,\n      |                                                 ^~\ndigestauth.c:2833:49: error: 'const struct MHD_RqDAuth' has no member named 'username_ext'\n 2833 |                                           params->username_ext.value.len,\n      |                                                 ^~\ndigestauth.c:2852:43: error: 'const struct MHD_RqDAuth' has no member named 'username'\n 2852 |     if (! is_param_equal_caseless (&params->username, tmp1, 2 * digest_size))\n      |                                           ^~\ndigestauth.c:2866:35: warning: passing argument 1 of 'get_unquoted_param' from incompatible pointer type [-Wincompatible-pointer-types]\n 2866 |     unq_res = get_unquoted_param (&params->nc, tmp1, ptmp2, &tmp2_size,\n      |                                   ^~~~~~~~~~~\n      |                                   |\n      |                                   const unsigned int *\ndigestauth.c:2449:52: note: expected 'const struct MHD_RqDAuthParam *' but argument is of type 'const unsigned int *'\n 2449 | get_unquoted_param (const struct MHD_RqDAuthParam *param,\n      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~\ndigestauth.c:2897:42: error: 'const struct MHD_RqDAuth' has no member named 'nonce'; did you mean 'cnonce'?\n 2897 |   unq_res = get_unquoted_param (&params->nonce, tmp1, ptmp2, &tmp2_size,\n      |                                          ^~~~~\n      |                                          cnonce\ndigestauth.c:2978:45: error: 'const struct MHD_RqDAuth' has no member named 'uri'\n 2978 |   unq_res = get_unquoted_param_copy (&params->uri, tmp1, ptmp2, &tmp2_size,\n      |                                             ^~\ndigestauth.c:3025:40: error: 'const struct MHD_RqDAuth' has no member named 'response'\n 3025 |   unq_res = get_unquoted_param (&params->response, tmp1, ptmp2, &tmp2_size,\n      |                                        ^~\ndigestauth.c:3035:42: error: 'const struct MHD_RqDAuth' has no member named 'nonce'; did you mean 'cnonce'?\n 3035 |   unq_res = get_unquoted_param (&params->nonce, tmp1, ptmp2, &tmp2_size,\n      |                                          ^~~~~\n      |                                          cnonce\ndigestauth.c:3045:35: warning: passing argument 1 of 'get_unquoted_param' from incompatible pointer type [-Wincompatible-pointer-types]\n 3045 |     unq_res = get_unquoted_param (&params->nc, tmp1, ptmp2, &tmp2_size,\n      |                                   ^~~~~~~~~~~\n      |                                   |\n      |                                   const unsigned int *\ndigestauth.c:2449:52: note: expected 'const struct MHD_RqDAuthParam *' but argument is of type 'const unsigned int *'\n 2449 | get_unquoted_param (const struct MHD_RqDAuthParam *param,\n      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~\ndigestauth.c:3053:35: warning: passing argument 1 of 'get_unquoted_param' from incompatible pointer type [-Wincompatible-pointer-types]\n 3053 |     unq_res = get_unquoted_param (&params->cnonce, tmp1, ptmp2, &tmp2_size,\n      |                                   ^~~~~~~~~~~~~~~\n      |                                   |\n      |                                   const struct MHD_RqParam *\ndigestauth.c:2449:52: note: expected 'const struct MHD_RqDAuthParam *' but argument is of type 'const struct MHD_RqParam *'\n 2449 | get_unquoted_param (const struct MHD_RqDAuthParam *param,\n      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~\ndigestauth.c:3061:42: error: 'const struct MHD_RqDAuth' has no member named 'qop_raw'\n 3061 |     unq_res = get_unquoted_param (&params->qop_raw, tmp1, ptmp2, &tmp2_size,\n      |                                          ^~\ndigestauth.c:3112:36: error: 'const struct MHD_RqDAuth' has no member named 'nonce'; did you mean 'cnonce'?\n 3112 |     if (! is_param_equal (&params->nonce, tmp1,\n      |                                    ^~~~~\n      |                                    cnonce\nmake[3]: *** [Makefile:2224: libmicrohttpd_la-digestauth.lo] Error 1\nmake[2]: *** [Makefile:449: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2"
}