{
  "result": "compile_failed",
  "message": "In file included from post_example.c:40:\n../../src/include/microhttpd.h:584:38: error: expected identifier or '(' before string constant\n  584 | #define MHD_HTTP_HEADER_CONNECTION   \"Connection\"\n      |                                      ^~~~~~~~~~~~\npost_example.c:289:20: note: in expansion of macro 'MHD_HTTP_HEADER_CONNECTION'\n  289 | static const char *MHD_HTTP_HEADER_CONNECTION = \"Connection\";\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~\n../../src/include/microhttpd.h:586:42: error: expected identifier or '(' before string constant\n  586 | #define MHD_HTTP_HEADER_CONTENT_ENCODING \"Content-Encoding\"\n      |                                          ^~~~~~~~~~~~~~~~~~\npost_example.c:290:20: note: in expansion of macro 'MHD_HTTP_HEADER_CONTENT_ENCODING'\n  290 | static const char *MHD_HTTP_HEADER_CONTENT_ENCODING = \"Content-Encoding\";\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n../../src/include/microhttpd.h:344:46: error: expected identifier or '(' before numeric constant\n  344 | #define MHD_HTTP_OK                          200\n      |                                              ^~~\npost_example.c:291:18: note: in expansion of macro 'MHD_HTTP_OK'\n  291 | static const int MHD_HTTP_OK = 200;\n      |                  ^~~~~~~~~~~\npost_example.c:294:17: error: conflicting types for 'MHD_queue_response'; have 'enum MHD_Result(struct MHD_Connection *, int,  struct MHD_Response *)'\n  294 | enum MHD_Result MHD_queue_response(struct MHD_Connection *connection, int status_code, struct MHD_Response *response);\n      |                 ^~~~~~~~~~~~~~~~~~\nIn file included from post_example.c:40:\n../../src/include/microhttpd.h:3746:1: note: previous declaration of 'MHD_queue_response' with type 'enum MHD_Result(struct MHD_Connection *, unsigned int,  struct MHD_Response *)'\n 3746 | MHD_queue_response (struct MHD_Connection *connection,\n      | ^~~~~~~~~~~~~~~~~~\nmake[4]: *** [Makefile:1086: post_example.o] Error 1\nmake[3]: *** [Makefile:1234: all-recursive] Error 1\nmake[2]: *** [Makefile:449: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2"
}