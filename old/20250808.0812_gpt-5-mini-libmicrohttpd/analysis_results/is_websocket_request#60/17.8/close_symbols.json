{
  "user_message": "Target function code is:\n```c\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n\n  (void) con;  /* Unused. Silent compiler warning. */\n\n  return ((upg_header != NULL) && (con_header != NULL)\n          && (0 == strcmp (upg_header, WS_UPGRADE_VALUE))\n          && (NULL != strstr (con_header, \"Upgrade\")))\n         ? MHD_YES\n         : MHD_NO;\n}\n```\n\nStatic call graph of the target function is:\n```json\n{'is_websocket_request': {'callees': [], 'callers': ['ahc_cb']}, 'ahc_cb': {'callees': ['MHD_lookup_connection_value', 'is_websocket_request', 'send_chat_page', 'send_bad_request', 'send_upgrade_required', 'MHD_lookup_connection_value_n', 'ws_get_accept_value', 'MHD_create_response_for_upgrade', 'MHD_add_response_header', 'MHD_destroy_response', 'MHD_queue_response'], 'callers': []}}\n```\n\n\nList additional symbols that are required to analyze the target function to determine if the target function code violates the following MISRA C rule:\nA function parameter should not be modified. Note that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\nThe list will be included in the prompt for the next agent, so be concise and clear.\nExplain why each symbol is required in the analysis of the target function for the MISRA C rule.\n",
  "close_symbols": [
    "strcmp",
    "strstr",
    "WS_UPGRADE_VALUE",
    "struct MHD_Connection",
    "enum MHD_Result (MHD_YES, MHD_NO)"
  ],
  "explanation": "- strcmp: provide the prototype (int strcmp(const char *s1, const char *s2)) so the analyzer can verify that passing upg_header to strcmp does not modify the pointer parameter or the pointed-to characters (parameters are const char*).\\n- strstr: provide the prototype (char *strstr(const char *haystack, const char *needle))) so the analyzer can verify that passing con_header to strstr does not modify the pointer parameter or the pointed-to characters (parameters are const char*).\\n- WS_UPGRADE_VALUE: provide the definition/expansion of this macro/constant to confirm it is a simple string constant (or otherwise harmless) and does not perform any operations that could modify function parameters.\\n- struct MHD_Connection: provide the declaration of this type to confirm there are no unexpected macros/overloads or semantics that could cause (void) con to have side effects; also to let the analyzer confirm that con is indeed unused and not implicitly modified.\\n- enum MHD_Result (MHD_YES, MHD_NO): provide the enum/constant definitions to allow full syntactic/semantic analysis of the return expression (even though these do not affect parameter modification, they complete the symbol set used by the function)."
}