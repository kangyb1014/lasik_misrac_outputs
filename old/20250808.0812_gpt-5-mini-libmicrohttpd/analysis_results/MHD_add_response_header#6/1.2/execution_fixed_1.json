{
  "result": "compile_failed",
  "message": "In file included from internal.h:34,\n                 from response.c:47:\n../../src/include/microhttpd.h:584:38: error: expected identifier or '(' before string constant\n  584 | #define MHD_HTTP_HEADER_CONNECTION   \"Connection\"\n      |                                      ^~~~~~~~~~~~\nresponse.c:628:19: note: in expansion of macro 'MHD_HTTP_HEADER_CONNECTION'\n  628 | static const char MHD_HTTP_HEADER_CONNECTION[] = \"Connection\";\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~\n../../src/include/microhttpd.h:648:43: error: expected identifier or '(' before string constant\n  648 | #define MHD_HTTP_HEADER_TRANSFER_ENCODING \"Transfer-Encoding\"\n      |                                           ^~~~~~~~~~~~~~~~~~~\nresponse.c:629:19: note: in expansion of macro 'MHD_HTTP_HEADER_TRANSFER_ENCODING'\n  629 | static const char MHD_HTTP_HEADER_TRANSFER_ENCODING[] = \"Transfer-Encoding\";\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n../../src/include/microhttpd.h:598:38: error: expected identifier or '(' before string constant\n  598 | #define MHD_HTTP_HEADER_DATE         \"Date\"\n      |                                      ^~~~~~\nresponse.c:630:19: note: in expansion of macro 'MHD_HTTP_HEADER_DATE'\n  630 | static const char MHD_HTTP_HEADER_DATE[] = \"Date\";\n      |                   ^~~~~~~~~~~~~~~~~~~~\n../../src/include/microhttpd.h:590:40: error: expected identifier or '(' before string constant\n  590 | #define MHD_HTTP_HEADER_CONTENT_LENGTH \"Content-Length\"\n      |                                        ^~~~~~~~~~~~~~~~\nresponse.c:631:19: note: in expansion of macro 'MHD_HTTP_HEADER_CONTENT_LENGTH'\n  631 | static const char MHD_HTTP_HEADER_CONTENT_LENGTH[] = \"Content-Length\";\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:632:33: error: 'MHD_RAF_HAS_TRANS_ENC_CHUNKED' redeclared as different kind of symbol\n  632 | static const unsigned long long MHD_RAF_HAS_TRANS_ENC_CHUNKED = 1ULL << 0;\n      |                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from response.c:47:\ninternal.h:409:3: note: previous definition of 'MHD_RAF_HAS_TRANS_ENC_CHUNKED' with type 'enum MHD_ResponseAutoFlags'\n  409 |   MHD_RAF_HAS_TRANS_ENC_CHUNKED = 1 << 2, /**< Has \"Transfer-Encoding: chunked\" */\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:633:33: error: 'MHD_RAF_HAS_CONTENT_LENGTH' redeclared as different kind of symbol\n  633 | static const unsigned long long MHD_RAF_HAS_CONTENT_LENGTH = 1ULL << 1;\n      |                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from response.c:47:\ninternal.h:410:3: note: previous definition of 'MHD_RAF_HAS_CONTENT_LENGTH' with type 'enum MHD_ResponseAutoFlags'\n  410 |   MHD_RAF_HAS_CONTENT_LENGTH = 1 << 3,    /**< Has \"Content-Length\" header */\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:634:33: error: 'MHD_RAF_HAS_DATE_HDR' redeclared as different kind of symbol\n  634 | static const unsigned long long MHD_RAF_HAS_DATE_HDR = 1ULL << 2;\n      |                                 ^~~~~~~~~~~~~~~~~~~~\nIn file included from response.c:47:\ninternal.h:411:3: note: previous definition of 'MHD_RAF_HAS_DATE_HDR' with type 'enum MHD_ResponseAutoFlags'\n  411 |   MHD_RAF_HAS_DATE_HDR = 1 << 4           /**< Has \"Date\" header */\n      |   ^~~~~~~~~~~~~~~~~~~~\nresponse.c:635:33: error: 'MHD_RF_INSANITY_HEADER_CONTENT_LENGTH' redeclared as different kind of symbol\n  635 | static const unsigned long long MHD_RF_INSANITY_HEADER_CONTENT_LENGTH = 1ULL << 3;\n      |                                 ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from response.c:47:\n../../src/include/microhttpd.h:3862:3: note: previous definition of 'MHD_RF_INSANITY_HEADER_CONTENT_LENGTH' with type 'enum MHD_ResponseFlags'\n 3862 |   MHD_RF_INSANITY_HEADER_CONTENT_LENGTH = 1 << 2,\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:636:33: error: 'MHD_RF_HEAD_ONLY_RESPONSE' redeclared as different kind of symbol\n  636 | static const unsigned long long MHD_RF_HEAD_ONLY_RESPONSE = 1ULL << 4;\n      |                                 ^~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from response.c:47:\n../../src/include/microhttpd.h:3887:3: note: previous definition of 'MHD_RF_HEAD_ONLY_RESPONSE' with type 'enum MHD_ResponseFlags'\n 3887 |   MHD_RF_HEAD_ONLY_RESPONSE = 1 << 4\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:637:18: error: 'MHD_HEADER_KIND' redeclared as different kind of symbol\n  637 | static const int MHD_HEADER_KIND = 0;\n      |                  ^~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from response.c:47:\n../../src/include/microhttpd.h:2260:3: note: previous definition of 'MHD_HEADER_KIND' with type 'enum MHD_ValueKind'\n 2260 |   MHD_HEADER_KIND = 1,\n      |   ^~~~~~~~~~~~~~~\nresponse.c:129:45: error: expected identifier or '(' before 'do'\n  129 | #define _MHD_remove_header(presponse, phdr) do { \\\n      |                                             ^~\nresponse.c:638:6: note: in expansion of macro '_MHD_remove_header'\n  638 | void _MHD_remove_header(struct MHD_Response *response, struct MHD_HTTP_Res_Header *hdr);\n      |      ^~~~~~~~~~~~~~~~~~\nresponse.c:154:3: error: expected identifier or '(' before 'while'\n  154 | } while (0)\n      |   ^~~~~\nresponse.c:638:6: note: in expansion of macro '_MHD_remove_header'\n  638 | void _MHD_remove_header(struct MHD_Response *response, struct MHD_HTTP_Res_Header *hdr);\n      |      ^~~~~~~~~~~~~~~~~~\nmake[3]: *** [Makefile:2182: libmicrohttpd_la-response.lo] Error 1\nmake[2]: *** [Makefile:449: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2"
}