{
  "result": "compile_failed",
  "message": "In file included from internal.h:34,\n                 from response.c:47:\n../../src/include/microhttpd.h:584:38: error: expected identifier or '(' before string constant\n  584 | #define MHD_HTTP_HEADER_CONNECTION   \"Connection\"\n      |                                      ^~~~~~~~~~~~\nresponse.c:305:20: note: in expansion of macro 'MHD_HTTP_HEADER_CONNECTION'\n  305 | static const char *MHD_HTTP_HEADER_CONNECTION = \"Connection\";\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~\n../../src/include/microhttpd.h:648:43: error: expected identifier or '(' before string constant\n  648 | #define MHD_HTTP_HEADER_TRANSFER_ENCODING \"Transfer-Encoding\"\n      |                                           ^~~~~~~~~~~~~~~~~~~\nresponse.c:306:20: note: in expansion of macro 'MHD_HTTP_HEADER_TRANSFER_ENCODING'\n  306 | static const char *MHD_HTTP_HEADER_TRANSFER_ENCODING = \"Transfer-Encoding\";\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n../../src/include/microhttpd.h:598:38: error: expected identifier or '(' before string constant\n  598 | #define MHD_HTTP_HEADER_DATE         \"Date\"\n      |                                      ^~~~~~\nresponse.c:307:20: note: in expansion of macro 'MHD_HTTP_HEADER_DATE'\n  307 | static const char *MHD_HTTP_HEADER_DATE = \"Date\";\n      |                    ^~~~~~~~~~~~~~~~~~~~\n../../src/include/microhttpd.h:590:40: error: expected identifier or '(' before string constant\n  590 | #define MHD_HTTP_HEADER_CONTENT_LENGTH \"Content-Length\"\n      |                                        ^~~~~~~~~~~~~~~~\nresponse.c:308:20: note: in expansion of macro 'MHD_HTTP_HEADER_CONTENT_LENGTH'\n  308 | static const char *MHD_HTTP_HEADER_CONTENT_LENGTH = \"Content-Length\";\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:309:18: error: 'MHD_RAF_HAS_TRANS_ENC_CHUNKED' redeclared as different kind of symbol\n  309 | static const int MHD_RAF_HAS_TRANS_ENC_CHUNKED = 0x01;\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from response.c:47:\ninternal.h:409:3: note: previous definition of 'MHD_RAF_HAS_TRANS_ENC_CHUNKED' with type 'enum MHD_ResponseAutoFlags'\n  409 |   MHD_RAF_HAS_TRANS_ENC_CHUNKED = 1 << 2, /**< Has \"Transfer-Encoding: chunked\" */\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:310:18: error: 'MHD_RAF_HAS_CONTENT_LENGTH' redeclared as different kind of symbol\n  310 | static const int MHD_RAF_HAS_CONTENT_LENGTH = 0x02;\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from response.c:47:\ninternal.h:410:3: note: previous definition of 'MHD_RAF_HAS_CONTENT_LENGTH' with type 'enum MHD_ResponseAutoFlags'\n  410 |   MHD_RAF_HAS_CONTENT_LENGTH = 1 << 3,    /**< Has \"Content-Length\" header */\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:311:18: error: 'MHD_RAF_HAS_DATE_HDR' redeclared as different kind of symbol\n  311 | static const int MHD_RAF_HAS_DATE_HDR = 0x04;\n      |                  ^~~~~~~~~~~~~~~~~~~~\nIn file included from response.c:47:\ninternal.h:411:3: note: previous definition of 'MHD_RAF_HAS_DATE_HDR' with type 'enum MHD_ResponseAutoFlags'\n  411 |   MHD_RAF_HAS_DATE_HDR = 1 << 4           /**< Has \"Date\" header */\n      |   ^~~~~~~~~~~~~~~~~~~~\nresponse.c:312:18: error: 'MHD_RF_INSANITY_HEADER_CONTENT_LENGTH' redeclared as different kind of symbol\n  312 | static const int MHD_RF_INSANITY_HEADER_CONTENT_LENGTH = 0x10;\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from response.c:47:\n../../src/include/microhttpd.h:3862:3: note: previous definition of 'MHD_RF_INSANITY_HEADER_CONTENT_LENGTH' with type 'enum MHD_ResponseFlags'\n 3862 |   MHD_RF_INSANITY_HEADER_CONTENT_LENGTH = 1 << 2,\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nresponse.c:313:18: error: 'MHD_RF_HEAD_ONLY_RESPONSE' redeclared as different kind of symbol\n  313 | static const int MHD_RF_HEAD_ONLY_RESPONSE = 0x20;\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from response.c:47:\n../../src/include/microhttpd.h:3887:3: note: previous definition of 'MHD_RF_HEAD_ONLY_RESPONSE' with type 'enum MHD_ResponseFlags'\n 3887 |   MHD_RF_HEAD_ONLY_RESPONSE = 1 << 4\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:35,\n                 from response.c:47:\nmhd_assert.h:45:32: error: expected identifier or '(' before 'void'\n   45 | #  define mhd_assert(ignore) ((void) 0)\n      |                                ^~~~\nresponse.c:314:13: note: in expansion of macro 'mhd_assert'\n  314 | static void mhd_assert(int cond)\n      |             ^~~~~~~~~~\nmhd_assert.h:45:38: error: expected ')' before numeric constant\n   45 | #  define mhd_assert(ignore) ((void) 0)\n      |                                      ^\nresponse.c:314:13: note: in expansion of macro 'mhd_assert'\n  314 | static void mhd_assert(int cond)\n      |             ^~~~~~~~~~\nresponse.c:129:45: error: expected identifier or '(' before 'do'\n  129 | #define _MHD_remove_header(presponse, phdr) do { \\\n      |                                             ^~\nresponse.c:319:13: note: in expansion of macro '_MHD_remove_header'\n  319 | static void _MHD_remove_header(struct MHD_Response *response,\n      |             ^~~~~~~~~~~~~~~~~~\nresponse.c:154:3: error: expected identifier or '(' before 'while'\n  154 | } while (0)\n      |   ^~~~~\nresponse.c:319:13: note: in expansion of macro '_MHD_remove_header'\n  319 | static void _MHD_remove_header(struct MHD_Response *response,\n      |             ^~~~~~~~~~~~~~~~~~\nresponse.c:789:36: error: conflicting types for 'MHD_get_response_element_n_'; have 'struct MHD_HTTP_Res_Header *(struct MHD_Response *, int,  const char *, size_t)' {aka 'struct MHD_HTTP_Res_Header *(struct MHD_Response *, int,  const char *, long unsigned int)'}\n  789 | static struct MHD_HTTP_Res_Header *MHD_get_response_element_n_(struct MHD_Response *response,\n      |                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from response.c:48:\nresponse.h:71:1: note: previous declaration of 'MHD_get_response_element_n_' with type 'struct MHD_HTTP_Res_Header *(struct MHD_Response *, enum MHD_ValueKind,  const char *, size_t)' {aka 'struct MHD_HTTP_Res_Header *(struct MHD_Response *, enum MHD_ValueKind,  const char *, long unsigned int)'}\n   71 | MHD_get_response_element_n_ (struct MHD_Response *response,\n      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~\nmake[3]: *** [Makefile:2182: libmicrohttpd_la-response.lo] Error 1\nmake[2]: *** [Makefile:449: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2"
}