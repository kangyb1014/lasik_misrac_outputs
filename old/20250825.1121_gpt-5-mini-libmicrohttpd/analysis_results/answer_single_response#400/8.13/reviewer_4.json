{
  "user_message": "An agent A claimed that the following answer_single_response code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of answer_single_response.\n```c\nstatic enum MHD_Result\nanswer_single_response (void *cls,\n                        struct MHD_Connection *connection,\n                        const char *url,\n                        const char *method,\n                        const char *version,\n                        const char *upload_data,\n                        size_t *upload_data_size,\n                        void **req_cls)\n{\n  static int marker = 0;\n  (void) cls;  /* Unused */\n  (void) url; (void) version; /* Unused */\n  (void) upload_data; (void) upload_data_size; /* Unused */\n\n  if (NULL == *req_cls)\n  {\n    /* The fist call */\n    *req_cls = (void *) &marker;\n    /* Do not send reply yet. No error. */\n    return MHD_YES;\n  }\n  if ((0 != strcmp (method, MHD_HTTP_METHOD_GET)) &&\n      (0 != strcmp (method, MHD_HTTP_METHOD_HEAD)))\n    return MHD_NO; /* Unsupported method, close connection */\n\n  return MHD_queue_response (connection, MHD_HTTP_OK, resp_single);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe address of 'marker' is stored in a generic pointer and used only as an immutable token: *req_cls = (void *)&marker;. However 'marker' is declared as 'static int marker = 0;' (non-const) even though it is never modified. According to MISRA C 2023 Rule 8.13 it should be declared with const qualification (e.g. 'static const int marker = 0;') so pointers to it are to a const-qualified type.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. The object 'marker' is never modified and is used only as an immutable token; its address is stored in a generic pointer (*req_cls = (void *)&marker). MISRA C 2023 Rule 8.13 requires that a pointer should point to a const-qualified type whenever possible, so the object ought to be declared const (e.g. static const int marker = 0) or the pointer type should be to a const-qualified type. Note: in practice the MHD API uses void **/void * which may prevent changing the parameter type; if you cannot change the API you must document a justified deviation (or otherwise ensure no rules about discarding qualifiers are breached when adding const). But with respect to Rule 8.13 itself, the code violates the rule."
}