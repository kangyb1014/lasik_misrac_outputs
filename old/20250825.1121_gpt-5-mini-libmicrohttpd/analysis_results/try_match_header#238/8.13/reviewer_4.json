{
  "user_message": "An agent A claimed that the following try_match_header code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of try_match_header.\n```c\nstatic int\ntry_match_header (const char *prefix,\n                  size_t prefix_len,\n                  char *line,\n                  char **suffix)\n{\n  if (NULL != *suffix)\n    return MHD_NO;\n  while (0 != *line)\n  {\n    if (MHD_str_equal_caseless_n_ (prefix,\n                                   line,\n                                   prefix_len))\n    {\n      *suffix = strdup (&line[prefix_len]);\n      return MHD_YES;\n    }\n    ++line;\n  }\n  return MHD_NO;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'line' is declared as 'char *line' but the function only reads from the characters (it never modifies *line), so it should be declared 'const char *line'. Declaring it non-const unnecessarily removes const qualification and therefore violates MISRA C 2023 Rule 8.13.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. In try_match_header the function never modifies the characters pointed to by line: it only reads *line, performs pointer arithmetic (++line) and passes pointers to read-only functions (MHD_str_equal_caseless_n_ and strdup). Therefore line should be declared as const char *line so that the pointer points to a const-qualified type as required by MISRA C 2023 Rule 8.13. (If the function actually needed to modify the buffer then char * would be appropriate, but the shown code does not.)"
}