{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_monotonic_sec_counter_finish:\n```c\nvoid\nMHD_monotonic_sec_counter_finish (void)\n{\n#ifdef HAVE_CLOCK_GET_TIME\n  if (_MHD_INVALID_CLOCK_SERV != mono_clock_service)\n  {\n    mach_port_deallocate (mach_task_self (),\n                          mono_clock_service);\n    mono_clock_service = _MHD_INVALID_CLOCK_SERV;\n  }\n#endif /* HAVE_CLOCK_GET_TIME */\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function MHD_monotonic_sec_counter_finish:\nvoid\nMHD_fini (void)\n{\n#ifdef HTTPS_SUPPORT\n  gnutls_global_deinit ();\n#endif /* HTTPS_SUPPORT */\n#if defined(MHD_WINSOCK_SOCKETS)\n  WSACleanup ();\n#endif /* MHD_WINSOCK_SOCKETS */\n  MHD_monotonic_sec_counter_finish ();\n}\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nmach_port_deallocate (mach_task_self (),\n                          mono_clock_service);\n```\nFocus on the above code fragment and judge whether it violates the rule 2.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "The call to mach_port_deallocate is invoked (when HAVE_CLOCK_GET_TIME is defined and mono_clock_service != _MHD_INVALID_CLOCK_SERV) from MHD_fini via MHD_monotonic_sec_counter_finish and releases a Mach kernel resource and then sets mono_clock_service to _MHD_INVALID_CLOCK_SERV. Removing this call would change program behaviour (resource would not be deallocated, resulting in a resource leak), so the operation is not dead code. Note: if the symbol HAVE_CLOCK_GET_TIME is not defined the code is not present in the build (not dead code), and if mono_clock_service is always equal to _MHD_INVALID_CLOCK_SERV the branch is never taken (unreachable, which per MISRA note 2 is not classified as dead code)."
}