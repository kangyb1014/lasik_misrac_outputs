{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of fast_simple_hash:\n```c\nstatic uint32_t\nfast_simple_hash (const uint8_t *data,\n                  size_t data_size)\n{\n  uint32_t hash;\n\n  if (0 != data_size)\n  {\n    size_t i;\n    hash = data[0];\n    for (i = 1; i < data_size; i++)\n      hash = _MHD_ROTL32 (hash, 7) ^ data[i];\n  }\n  else\n    hash = 0;\n\n  return hash;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function fast_simple_hash:\n#define _MHD_ROTL32(value32, bits) ((uint32_t)__builtin_rotateleft32((value32),(bits)))\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "hash = _MHD_ROTL32 (hash, 7) ^ data[i];",
    "#define _MHD_ROTL32(value32, bits) ((uint32_t)__builtin_rotateleft32((value32),(bits)))"
  ],
  "explanation": "The macro uses the GCC/Clang builtin __builtin_rotateleft32 which is a compiler-specific extension; its definition and its invocation in the hash computation must be investigated for compliance with MISRA C Rule 1.2. Other parts of the code use standard C constructs and standard integer/size types (static function, uint8_t, uint32_t, size_t, for loop, if/else, standard cast to uint32_t and macro usage), and do not employ any other compiler-specific builtins, intrinsics, attributes, inline assembly, or nonstandard keywords that would constitute language extensions, so they do not need to be investigated for Rule 1.2."
}