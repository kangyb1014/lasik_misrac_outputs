{
  "user_message": "An agent A claimed that the following MHD_uint64_to_str code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_uint64_to_str.\n```c\nsize_t\nMHD_uint64_to_str (uint64_t val,\n                   char *buf,\n                   size_t buf_size)\n{\n  char *chr;  /**< pointer to the current printed digit */\n  /* The biggest printable number is 18446744073709551615 */\n  uint64_t divisor = UINT64_C (10000000000000000000);\n  int digit;\n\n  chr = buf;\n  digit = (int) (val / divisor);\n  mhd_assert (digit < 10);\n\n  /* Do not print leading zeros */\n  while ((0 == digit) && (1 < divisor))\n  {\n    divisor /= 10;\n    digit = (int) (val / divisor);\n    mhd_assert (digit < 10);\n  }\n\n  while (0 != buf_size)\n  {\n    *chr = (char) ((char) digit + '0');\n    chr++;\n    buf_size--;\n    if (1 == divisor)\n      return (size_t) (chr - buf);\n    val %= divisor;\n    divisor /= 10;\n    digit = (int) (val / divisor);\n    mhd_assert (digit < 10);\n  }\n  return 0; /* The buffer is too small */\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function parameter 'val' (a non\u2011pointer scalar) is modified by the compound assignment 'val %= divisor;'. MISRA C 2023 Rule 17.8 forbids modifying function parameters, so this is a violation (solution: copy 'val' into a local variable and modify the local copy).\n</scenario>\n<additional code>Here are the definitions of symbols that are close to the target function MHD_uint64_to_str:\n#define mhd_assert(ignore) ((void)0)\n</additional code>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct: MISRA C 2023 Rule 17.8 prohibits modifying function parameters. In the posted code the parameter 'val' is indeed modified by the statement 'val %= divisor;'. Additionally, the code also modifies the parameter 'buf_size' via 'buf_size--', so there are multiple violations. The pointer parameter 'buf' itself is not modified (a local pointer 'chr' is used), and modifying the object pointed to by a pointer parameter would be allowed, but that is not the situation here. The appropriate fix is to copy the incoming parameters to local variables (for example 'uint64_t v = val;' and 'size_t remaining = buf_size;') and then modify those locals instead of the parameters."
}