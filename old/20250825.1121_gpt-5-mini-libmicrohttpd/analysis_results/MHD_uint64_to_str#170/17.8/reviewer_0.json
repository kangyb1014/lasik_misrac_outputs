{
  "user_message": "An agent A claimed that the following MHD_uint64_to_str code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_uint64_to_str.\n```c\nsize_t\nMHD_uint64_to_str (uint64_t val,\n                   char *buf,\n                   size_t buf_size)\n{\n  char *chr;  /**< pointer to the current printed digit */\n  /* The biggest printable number is 18446744073709551615 */\n  uint64_t divisor = UINT64_C (10000000000000000000);\n  int digit;\n\n  chr = buf;\n  digit = (int) (val / divisor);\n  mhd_assert (digit < 10);\n\n  /* Do not print leading zeros */\n  while ((0 == digit) && (1 < divisor))\n  {\n    divisor /= 10;\n    digit = (int) (val / divisor);\n    mhd_assert (digit < 10);\n  }\n\n  while (0 != buf_size)\n  {\n    *chr = (char) ((char) digit + '0');\n    chr++;\n    buf_size--;\n    if (1 == divisor)\n      return (size_t) (chr - buf);\n    val %= divisor;\n    divisor /= 10;\n    digit = (int) (val / divisor);\n    mhd_assert (digit < 10);\n  }\n  return 0; /* The buffer is too small */\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function modifies its scalar parameters: buf_size is decremented (buf_size--) and val is updated (val %= divisor) inside the loop. Rule 17.8 forbids modifying function parameters (pointer targets may be modified, but not the pointer itself); modifying these non\u2011pointer parameters therefore violates the rule. (The pointer buf itself is not reassigned and writing through *chr is permitted.)\n</scenario>\n<additional code>Here are the definitions of symbols that are close to the target function MHD_uint64_to_str:\n#define mhd_assert(ignore) ((void)0)\n</additional code>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. MISRA C 2023 Rule 17.8 states that a function parameter shall not be modified; this applies to all parameters, not only pointer parameters (the remark in the rule only clarifies that the object pointed to may be modified but the pointer itself must not). In MHD_uint64_to_str the value parameters val and buf_size are both modified (buf_size-- and val %= divisor). Those assignments modify function parameters and therefore violate Rule 17.8. Note that writing through *chr is allowed because chr is a local pointer to the buffer and the buffer object (not the buf parameter itself) is being modified; also buf itself is not reassigned. To fix the violation, make local copies of the parameters (for example: uint64_t tmp_val = val; size_t remaining = buf_size;) and operate on those copies."
}