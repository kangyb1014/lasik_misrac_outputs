{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of file_reader:\n```c\nstatic ssize_t\nfile_reader (void *cls, uint64_t pos, char *buf, size_t max)\n{\n  FILE *file = (FILE *) cls;\n  size_t bytes_read;\n\n  /* 'fseek' may not support files larger 2GiB, depending on platform.\n   * For production code, make sure that 'pos' has valid values, supported by\n   * 'fseek', or use 'fseeko' or similar function. */\n  if (0 != fseek (file, (long) pos, SEEK_SET))\n    return MHD_CONTENT_READER_END_WITH_ERROR;\n  bytes_read = fread (buf, 1, max, file);\n  if (0 == bytes_read)\n    return (0 != ferror (file)) ? MHD_CONTENT_READER_END_WITH_ERROR :\n           MHD_CONTENT_READER_END_OF_STREAM;\n  return (ssize_t) bytes_read;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function file_reader:\n#define MHD_CONTENT_READER_END_WITH_ERROR ((ssize_t)-2)\n...\n#define MHD_CONTENT_READER_END_OF_STREAM ((ssize_t)-1)\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\n#define MHD_CONTENT_READER_END_WITH_ERROR ((ssize_t)-2)\n```\nFocus on the above code fragment and judge whether it violates the rule 1.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation. The macro casts an integer constant to ssize_t: ((ssize_t)-2). This does not use a compiler language extension (ssize_t is a typedef typically provided by POSIX headers, not a compiler-specific language extension). It would only violate Rule 1.2 if the specific toolchain documents ssize_t or this cast as a compiler extension, which is not the case here."
}