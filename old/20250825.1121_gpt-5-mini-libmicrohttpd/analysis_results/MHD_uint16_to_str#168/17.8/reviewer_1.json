{
  "user_message": "An agent A claimed that the following MHD_uint16_to_str code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_uint16_to_str.\n```c\nsize_t\nMHD_uint16_to_str (uint16_t val,\n                   char *buf,\n                   size_t buf_size)\n{\n  char *chr;  /**< pointer to the current printed digit */\n  /* The biggest printable number is 65535 */\n  uint16_t divisor = UINT16_C (10000);\n  int digit;\n\n  chr = buf;\n  digit = (int) (val / divisor);\n  mhd_assert (digit < 10);\n\n  /* Do not print leading zeros */\n  while ((0 == digit) && (1 < divisor))\n  {\n    divisor /= 10;\n    digit = (int) (val / divisor);\n    mhd_assert (digit < 10);\n  }\n\n  while (0 != buf_size)\n  {\n    *chr = (char) ((char) digit + '0');\n    chr++;\n    buf_size--;\n    if (1 == divisor)\n      return (size_t) (chr - buf);\n    val = (uint16_t) (val % divisor);\n    divisor /= 10;\n    digit = (int) (val / divisor);\n    mhd_assert (digit < 10);\n  }\n  return 0; /* The buffer is too small */\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe assignment 'val = (uint16_t) (val % divisor);' modifies the function parameter 'val'. Rule 17.8 disallows modifying function parameters (the pointer exception is not applicable here), so this is a violation. A fix is to use a local copy (e.g. 'uint16_t tmp = val;') and modify that instead.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is essentially correct: MISRA C 2023 Rule 17.8 prohibits modifying function parameters. In the provided code the assignment\n  val = (uint16_t) (val % divisor);\ndoes modify the value parameter val, so that is a violation. In addition, the code also decrements the value parameter buf_size (buf_size--), which is another violation of the same rule. The pointer parameter buf is not modified (a local pointer chr is used), so the pointer exception note is not applicable to val or buf_size.\n\nRecommended fixes: make local copies of the value parameters and modify those (for example uint16_t tmp = val; size_t remaining = buf_size;), and use the local copies in the algorithm. Alternatively, provide an appropriate MISRA-compliant justification if modifying parameters is deliberately intended (but typically the local-copy fix is preferred)."
}