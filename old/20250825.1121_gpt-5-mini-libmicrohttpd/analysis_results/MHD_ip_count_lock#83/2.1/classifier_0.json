{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.1 is: A project shall not contain unreachable code.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_ip_count_lock:\n```c\nstatic void\nMHD_ip_count_lock (struct MHD_Daemon *daemon)\n{\n  mhd_assert (NULL == daemon->master);\n#if defined(MHD_USE_POSIX_THREADS) || defined(MHD_USE_W32_THREADS)\n  MHD_mutex_lock_chk_ (&daemon->per_ip_connection_mutex);\n#else\n  (void) daemon;\n#endif\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function MHD_ip_count_lock:\n#define mhd_assert(ignore) ((void)0)\n...\n#define MHD_USE_POSIX_THREADS 1\n...\n#define MHD_mutex_lock_chk_(pmutex) do{if(!MHD_mutex_lock_(pmutex))MHD_PANIC(_(\"Failed to lock mutex.\\n\"));\\\n}while(0)\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\n#else\n  (void) daemon;\n#endif\n```\nFocus on the above code fragment and judge whether it violates the rule 2.1 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation in the shown configuration. The line \u201c(void) daemon;\u201d is inside the #else of a preprocessor conditional and, given the provided definition (#define MHD_USE_POSIX_THREADS 1), that #else branch is not compiled into this build; it is not unreachable code at runtime because it simply does not exist in the translation unit. The #else branch is intended for non-threaded builds to suppress an unused-parameter warning. (Note: if the project never compiles the non-threaded configuration in any build variant, then that branch would be dead across the whole project and could be treated as unreachable/obsolete code.)"
}