{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of send_upgrade_required:\n```c\nstatic enum MHD_Result\nsend_upgrade_required (struct MHD_Connection *con)\n{\n  struct MHD_Response *res;\n  enum MHD_Result ret;\n\n  res =\n    MHD_create_response_from_buffer_static (strlen (UPGRADE_REQUIRED_PAGE),\n                                            (const void *)\n                                            UPGRADE_REQUIRED_PAGE);\n  if (MHD_YES !=\n      MHD_add_response_header (res, MHD_HTTP_HEADER_SEC_WEBSOCKET_VERSION,\n                               WS_SEC_WEBSOCKET_VERSION))\n  {\n    MHD_destroy_response (res);\n    return MHD_NO;\n  }\n  ret = MHD_queue_response (con, MHD_HTTP_UPGRADE_REQUIRED, res);\n  MHD_destroy_response (res);\n  return ret;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function send_upgrade_required:\n#define UPGRADE_REQUIRED_PAGE \"<html>\\n\"\"<head>\\n\"\"<title>WebSocket chat</title>\\n\"\"</head>\\n\"\"<body>\\n\"\"Upgrade required\\n\"\"</body>\\n\"\"</html>\\n\"\n...\n#define WS_SEC_WEBSOCKET_VERSION \"13\"\n...\n#define MHD_HTTP_HEADER_SEC_WEBSOCKET_VERSION \"Sec-WebSocket-Version\"\n...\n#define MHD_HTTP_UPGRADE_REQUIRED 426\n...\nenum MHD_Result\n{\n  /**\n   * MHD result code for \"NO\".\n   */\n  MHD_NO = 0,\n\n  /**\n   * MHD result code for \"YES\".\n   */\n  MHD_YES = 1\n\n}\n...\nstruct MHD_Response\n...\nstruct MHD_Connection\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "res =\n    MHD_create_response_from_buffer_static (strlen (UPGRADE_REQUIRED_PAGE),\n                                            (const void *)\n                                            UPGRADE_REQUIRED_PAGE);",
    "if (MHD_YES !=\n      MHD_add_response_header (res, MHD_HTTP_HEADER_SEC_WEBSOCKET_VERSION,\n                               WS_SEC_WEBSOCKET_VERSION))\n  {\n    MHD_destroy_response (res);\n    return MHD_NO;\n  }",
    "ret = MHD_queue_response (con, MHD_HTTP_UPGRADE_REQUIRED, res);\n  MHD_destroy_response (res);\n  return ret;"
  ],
  "explanation": "I have flagged the three fragments above for investigation with respect to Rule 2.2 because they contain operations whose necessity or redundancy should be confirmed in the project context. Other parts of the function need not be investigated for dead-code under Rule 2.2 for the following reasons:\n\n- The call to MHD_create_response_from_buffer_static (the flagged fragment) constructs a response object that is subsequently used and later destroyed; the creation call has observable side effects (allocation/initialization of response) and is not dead.\n- The MHD_add_response_header call (included in the flagged if) returns a value that determines control flow; it has a side effect (modifies the response by adding a header) so it is not dead.\n- Both MHD_destroy_response invocations perform resource cleanup with observable effects; they are required in both normal and error paths and are not dead.\n- The strlen(UPGRADE_REQUIRED_PAGE) argument and use of the string literal/macros are compile-time/constant expressions or inputs to functions that affect behavior; they are not dead.\n- The enum values and macro definitions shown are declarations/constants and not executed code; Rule 2.2 concerns executed operations. Declarations and compile-time casts are not dead code per the rule.\n- There is no unreachable branch evident in this function (no code guarded by always-false conditions). Note also that initialization (of objects elsewhere) is not considered dead code per the rule's note.\n\nThe three fragments I reported should be reviewed to confirm whether any of the operations they contain are in fact executed but unnecessary (i.e. their removal would not change program behaviour)."
}