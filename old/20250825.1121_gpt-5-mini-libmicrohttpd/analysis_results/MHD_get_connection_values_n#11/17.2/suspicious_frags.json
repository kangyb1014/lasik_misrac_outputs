{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 17.2 is: Functions shall not call themselves, either directly or indirectly.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of MHD_get_connection_values_n:\n```c\n_MHD_EXTERN int\nMHD_get_connection_values_n (struct MHD_Connection *connection,\n                             enum MHD_ValueKind kind,\n                             MHD_KeyValueIteratorN iterator,\n                             void *iterator_cls)\n{\n  int ret;\n  struct MHD_HTTP_Req_Header *pos;\n\n  if (NULL == connection)\n    return -1;\n  ret = 0;\n\n  if (NULL == iterator)\n    for (pos = connection->rq.headers_received; NULL != pos; pos = pos->next)\n    {\n      if (0 != (kind & pos->kind))\n        ret++;\n    }\n  else\n    for (pos = connection->rq.headers_received; NULL != pos; pos = pos->next)\n      if (0 != (kind & pos->kind))\n      {\n        ret++;\n        if (MHD_NO == iterator (iterator_cls,\n                                pos->kind,\n                                pos->header,\n                                pos->header_size,\n                                pos->value,\n                                pos->value_size))\n          return ret;\n      }\n  return ret;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function MHD_get_connection_values_n:\ntypedef enum MHD_Result\n(*MHD_KeyValueIteratorN)(void *cls,\n                         enum MHD_ValueKind kind,\n                         const char *key,\n                         size_t key_size,\n                         const char *value,\n                         size_t value_size)\n...\ntypedef enum MHD_Result\n(*MHD_KeyValueIteratorN)(void *cls,\n                         enum MHD_ValueKind kind,\n                         const char *key,\n                         size_t key_size,\n                         const char *value,\n                         size_t value_size)\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "if (MHD_NO == iterator (iterator_cls,\n                                pos->kind,\n                                pos->header,\n                                pos->header_size,\n                                pos->value,\n                                pos->value_size))\n          return ret;",
    "_MHD_EXTERN int\nMHD_get_connection_values_n (struct MHD_Connection *connection,\n                             enum MHD_ValueKind kind,\n                             MHD_KeyValueIteratorN iterator,\n                             void *iterator_cls)",
    "typedef enum MHD_Result\n(*MHD_KeyValueIteratorN)(void *cls,\n                         enum MHD_ValueKind kind,\n                         const char *key,\n                         size_t key_size,\n                         const char *value,\n                         size_t value_size)"
  ],
  "explanation": "There is no direct call to MHD_get_connection_values_n within the function body, so no direct recursion. The only call site that could cause indirect recursion is the invocation of the function-pointer 'iterator' supplied by the caller; therefore the iterator call and the typedef of MHD_KeyValueIteratorN (and the function declaration so reviewers can see the signature) are the only fragments that need investigation for potential indirect self-calls. Other fragments (NULL checks, the for loops over connection->rq.headers_received, increments of ret, and simple returns) do not perform function calls that could lead to direct or indirect recursion and thus do not need investigation for Rule 17.2."
}