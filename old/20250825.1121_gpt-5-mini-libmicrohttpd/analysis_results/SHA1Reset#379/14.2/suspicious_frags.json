{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 14.2 is: A for loop shall be well-formed.\nThe three clauses of a for statement are the:\n1. First clause shall be empty or an expression whose set the value of the loop counter or define and intialize the loop counter.\n2. Second clause shall be an expression that has no persistent side effects, and shall use the loop counter and optionally loop control flags, and shall not use any other object that is modified in the for loop body.\n3.Third clause shall be an expression whose modify only the value of the loop counter, and shall not use objects that are modified in the for loop body.\n4. There shall only be one loop counter in a for loop, which shall not be modified in for loop body. A loop control flag is defined as single identifier denoting an object with Boolean type that is used in the second clause. The behaviour of a for loop body includes the behaviour of any functions called within that statement. \n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of SHA1Reset:\n```c\nstatic enum SHA1_RESULT\nSHA1Reset (struct SHA1Context *context)\n{\n  if (! context)\n  {\n    return SHA1_RESULT_NULL;\n  }\n  context->length_low = 0;\n  context->length_high = 0;\n  context->message_block_index = 0;\n  context->intermediate_hash[0] = 0x67452301;\n  context->intermediate_hash[1] = 0xEFCDAB89;\n  context->intermediate_hash[2] = 0x98BADCFE;\n  context->intermediate_hash[3] = 0x10325476;\n  context->intermediate_hash[4] = 0xC3D2E1F0;\n  context->computed = 0;\n  context->corrupted = 0;\n  return SHA1_RESULT_SUCCESS;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function SHA1Reset:\nstruct SHA1Context\n{\n  uint32_t intermediate_hash[SHA1HashSize / 4];\n  uint32_t length_low;\n  uint32_t length_high;\n  int_least16_t message_block_index;\n  unsigned char message_block[64];\n  int computed;\n  int corrupted;\n}\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "MISRA C 2023 Rule 14.2 concerns the well-formedness of for statements (three clauses and loop-counter/flag usage). The provided target function SHA1Reset and the related struct contain no for statements or any macro/inline code that could expand to a for loop. The function only performs null-pointer checking, simple assignments to structure members and a return; the struct definition contains only member declarations. Therefore there are no for-loop code fragments to investigate for compliance with Rule 14.2 in the supplied code. If other translation-unit code or macros (not provided) exist that might introduce for loops, those would need to be supplied for review."
}