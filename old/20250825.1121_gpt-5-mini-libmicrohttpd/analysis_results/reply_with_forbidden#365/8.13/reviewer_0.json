{
  "user_message": "An agent A claimed that the following reply_with_forbidden code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of reply_with_forbidden.\n```c\nstatic enum MHD_Result\nreply_with_forbidden (struct MHD_Connection *c)\n{\n  static const char page_content[] =\n    \"<html><head><title>Forbidden</title></head>\" \\\n    \"<body>You do not have access to this page.</body></html>\";\n  static const size_t page_content_len =\n    (sizeof(page_content) / sizeof(char)) - 1;\n  struct MHD_Response *resp;\n  enum MHD_Result ret;\n\n  resp = MHD_create_response_from_buffer_static (page_content_len, page_content)\n  ;\n  if (NULL == resp)\n    return MHD_NO;\n\n  /* Ignore possible error when adding the header as the reply will work even\n     without this header. */\n  (void) MHD_add_response_header (resp,\n                                  MHD_HTTP_HEADER_CONTENT_TYPE,\n                                  \"text/html\");\n\n  ret = MHD_queue_response (c, MHD_HTTP_FORBIDDEN, resp);\n  MHD_destroy_response (resp);\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe code passes a const-qualified object (static const char page_content[]) to MHD_create_response_from_buffer_static. If the function's parameter is a non-const pointer (e.g. void * or char *), this discards the const qualifier and thus violates MISRA C 2023 Rule 8.13. If, however, the function prototype declares the parameter as const (e.g. const void * or const char *), then there is no violation.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A's reasoning is correct. MISRA C:2023 Rule 8.13 requires that pointers refer to const-qualified types where possible. In the snippet page_content is declared as static const char[], so passing it to a function whose parameter type is a non-const pointer (e.g. void * or char *) would discard the const qualifier and therefore breach the intent of Rule 8.13. Whether the code actually violates the rule depends on the prototype of MHD_create_response_from_buffer_static: if its parameter is declared as const (for example const void * or const char *), there is no violation; if it is non-const, the call does violate the rule. To resolve the issue either use an API that accepts a const pointer or adapt the API/prototype to take a const-qualified pointer."
}