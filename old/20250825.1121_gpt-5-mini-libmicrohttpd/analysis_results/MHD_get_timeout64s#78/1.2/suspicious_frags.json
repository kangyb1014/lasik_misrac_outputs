{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of MHD_get_timeout64s:\n```c\n_MHD_EXTERN int64_t\nMHD_get_timeout64s (struct MHD_Daemon *daemon)\n{\n  uint64_t utimeout;\n  if (MHD_NO == MHD_get_timeout64 (daemon, &utimeout))\n    return -1;\n  if (INT64_MAX < utimeout)\n    return INT64_MAX;\n\n  return (int64_t) utimeout;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function MHD_get_timeout64s:\n#define _MHD_EXTERN __attribute__((visibility(\"default\")))extern\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "_MHD_EXTERN int64_t\nMHD_get_timeout64s (struct MHD_Daemon *daemon)",
    "#define _MHD_EXTERN __attribute__((visibility(\"default\")))extern"
  ],
  "explanation": "Only the lines that introduce or use the GCC/Clang __attribute__ syntax should be investigated for MISRA C:2023 Rule 1.2 (language extensions). The remaining code inside the function uses standard C constructs (int64_t, uint64_t, INT64_MAX, casts, struct pointers, return statements, and ordinary conditional expressions) which are not compiler language extensions. Macro names like MHD_NO and the call to MHD_get_timeout64 are ordinary identifiers/macros and do not themselves indicate use of a language extension. Therefore no other fragments need investigation for Rule 1.2."
}