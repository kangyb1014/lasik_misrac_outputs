{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 17.8 is: A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of SHA1ProcessMessageBlock:\n```c\nstatic void\nSHA1ProcessMessageBlock (struct SHA1Context *context)\n{\n  const uint32_t K[] = { 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xCA62C1D6 };\n  int i;\n  uint32_t temp;\n  uint32_t W[80];\n  uint32_t A, B, C, D, E;\n\n  for (i = 0; i < 16; i++)\n  {\n    W[i] = ((uint32_t) context->message_block[i * 4]) << 24;\n    W[i] |= ((uint32_t) context->message_block[i * 4 + 1]) << 16;\n    W[i] |= ((uint32_t) context->message_block[i * 4 + 2]) << 8;\n    W[i] |= context->message_block[i * 4 + 3];\n  }\n  for (i = 16; i < 80; i++)\n  {\n    W[i]\n      = SHA1CircularShift (1, W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]);\n  }\n  A = context->intermediate_hash[0];\n  B = context->intermediate_hash[1];\n  C = context->intermediate_hash[2];\n  D = context->intermediate_hash[3];\n  E = context->intermediate_hash[4];\n  for (i = 0; i < 20; i++)\n  {\n    temp = SHA1CircularShift (5, A) + ((B & C) | ((~B) & D)) + E + W[i]\n           + K[0];\n    E = D;\n    D = C;\n    C = SHA1CircularShift (30, B);\n    B = A;\n    A = temp;\n  }\n  for (i = 20; i < 40; i++)\n  {\n    temp = SHA1CircularShift (5, A) + (B ^ C ^ D) + E + W[i] + K[1];\n    E = D;\n    D = C;\n    C = SHA1CircularShift (30, B);\n    B = A;\n    A = temp;\n  }\n  for (i = 40; i < 60; i++)\n  {\n    temp = SHA1CircularShift (5, A) + ((B & C) | (B & D) | (C & D)) + E\n           + W[i] + K[2];\n    E = D;\n    D = C;\n    C = SHA1CircularShift (30, B);\n    B = A;\n    A = temp;\n  }\n  for (i = 60; i < 80; i++)\n  {\n    temp = SHA1CircularShift (5, A) + (B ^ C ^ D) + E + W[i] + K[3];\n    E = D;\n    D = C;\n    C = SHA1CircularShift (30, B);\n    B = A;\n    A = temp;\n  }\n  context->intermediate_hash[0] += A;\n  context->intermediate_hash[1] += B;\n  context->intermediate_hash[2] += C;\n  context->intermediate_hash[3] += D;\n  context->intermediate_hash[4] += E;\n  context->message_block_index = 0;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "Rule 17.8 forbids modifying a function parameter itself (e.g. assigning to the pointer variable), but permits modifying the object referred to by a pointer parameter. This function has a single parameter: 'struct SHA1Context *context'. There are no assignments to 'context' (no context = ..., no pointer arithmetic on context, no increment/decrement of the parameter). All modifications involve members of *context (reads from context->message_block into W[], updates to context->intermediate_hash[] and context->message_block_index), which is allowed by the rule. All other mutated identifiers are local variables (i, temp, W, A, B, C, D, E, K) or results of function calls; none are modifications of a parameter. Therefore there are no code fragments that need investigation for Rule 17.8 in this function."
}