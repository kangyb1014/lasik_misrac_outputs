{
  "user_message": "An agent A claimed that the following SHA1Input code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of SHA1Input.\n```c\nstatic enum SHA1_RESULT\nSHA1Input (struct SHA1Context *context, const unsigned char *message_array,\n           unsigned length)\n{\n  if (! length)\n  {\n    return SHA1_RESULT_SUCCESS;\n  }\n  if (! context || ! message_array)\n  {\n    return SHA1_RESULT_NULL;\n  }\n  if (context->computed)\n  {\n    context->corrupted = 1;\n    return SHA1_RESULT_STATE_ERROR;\n  }\n  if (context->corrupted)\n  {\n    return SHA1_RESULT_STATE_ERROR;\n  }\n  while (length-- && ! context->corrupted)\n  {\n    context->message_block[context->message_block_index++]\n      = (*message_array & 0xFF);\n    context->length_low += 8;\n    if (context->length_low == 0)\n    {\n      context->length_high++;\n      if (context->length_high == 0)\n      {\n        context->corrupted = 1;\n      }\n    }\n    if (context->message_block_index == 64)\n    {\n      SHA1ProcessMessageBlock (context);\n    }\n    message_array++;\n  }\n  return SHA1_RESULT_SUCCESS;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function parameter 'length' is modified by the post-decrement expression (length--) in the while loop condition. MISRA C 2023 Rule 17.8 forbids modifying function parameters, so this is a violation. (Fix: use a local copy, e.g. unsigned rem = length; while (rem-- && !context->corrupted) ...).\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Correct. MISRA C 2023 Rule 17.8 forbids modifying function parameters. In this function the parameter length is modified by the post-decrement in the while condition (length--) \u2014 that is a direct violation. Additionally, the pointer parameter message_array is incremented (message_array++), which modifies the pointer parameter itself and so also violates the rule (the object pointed to may be modified, but not the pointer parameter). A compliant fix is to use local copies, e.g. unsigned rem = length; const unsigned char *msg = message_array; while (rem-- && !context->corrupted) { ... msg++; } (or use an index). Note that modifying members of *context is allowed because the object pointed to is being modified, not the pointer parameter."
}