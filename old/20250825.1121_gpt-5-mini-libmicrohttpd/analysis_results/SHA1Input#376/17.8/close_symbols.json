{
  "user_message": "Target function code is:\n```c\nstatic enum SHA1_RESULT\nSHA1Input (struct SHA1Context *context, const unsigned char *message_array,\n           unsigned length)\n{\n  if (! length)\n  {\n    return SHA1_RESULT_SUCCESS;\n  }\n  if (! context || ! message_array)\n  {\n    return SHA1_RESULT_NULL;\n  }\n  if (context->computed)\n  {\n    context->corrupted = 1;\n    return SHA1_RESULT_STATE_ERROR;\n  }\n  if (context->corrupted)\n  {\n    return SHA1_RESULT_STATE_ERROR;\n  }\n  while (length-- && ! context->corrupted)\n  {\n    context->message_block[context->message_block_index++]\n      = (*message_array & 0xFF);\n    context->length_low += 8;\n    if (context->length_low == 0)\n    {\n      context->length_high++;\n      if (context->length_high == 0)\n      {\n        context->corrupted = 1;\n      }\n    }\n    if (context->message_block_index == 64)\n    {\n      SHA1ProcessMessageBlock (context);\n    }\n    message_array++;\n  }\n  return SHA1_RESULT_SUCCESS;\n}\n```\n\nStatic call graph of the target function is:\n```json\n{'SHA1Input': {'callees': ['SHA1ProcessMessageBlock'], 'callers': ['ws_get_accept_value']}, 'SHA1ProcessMessageBlock': {'callees': [], 'callers': ['SHA1PadMessage', 'SHA1Input']}, 'ws_get_accept_value': {'callees': ['SHA1Reset', 'SHA1Input', 'SHA1Result', 'BASE64Encode'], 'callers': ['ahc_cb']}}\n```\n\n\nList additional symbols that are required to analyze the target function to determine if the target function code violates the following MISRA C rule:\nA function parameter should not be modified. Note that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\nThe list will be included in the prompt for the next agent, so be concise and clear.\nExplain why each symbol is required in the analysis of the target function for the MISRA C rule.\n",
  "close_symbols": [
    "struct SHA1Context (full definition)",
    "prototype/declaration of SHA1Input as seen in the header (to confirm parameter types/qualifiers)",
    "enum SHA1_RESULT (definition)"
  ],
  "explanation": "1) struct SHA1Context (full definition): Required to verify which objects are being modified through the context pointer (e.g. message_block, message_block_index, length_low/high, computed, corrupted). MISRA permits modifying the object pointed to by a pointer parameter but forbids modifying the pointer parameter itself; the struct definition shows that the code updates fields of *context (allowed) and that context itself is not being reassigned (relevant to the rule).  \n2) prototype/declaration of SHA1Input (signature in the header): Required to confirm the exact parameter declarations and qualifiers (in particular that message_array is declared as const unsigned char * and that message_array is indeed a function parameter). This is necessary to determine whether message_array++ in the body modifies the pointer parameter (which would violate the rule) rather than some macro/alias or different symbol.  \n3) enum SHA1_RESULT (definition): Included so the analyzer has the complete symbol set for the function (return constants) and can distinguish return-value related macros/types from parameter names; while not directly required to detect pointer modification, it is a small necessary symbol to fully interpret the function interface during MISRA rule analysis."
}