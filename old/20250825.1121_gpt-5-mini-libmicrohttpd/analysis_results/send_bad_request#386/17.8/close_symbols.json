{
  "user_message": "Target function code is:\n```c\nstatic enum MHD_Result\nsend_bad_request (struct MHD_Connection *con)\n{\n  struct MHD_Response *res;\n  enum MHD_Result ret;\n\n  res =\n    MHD_create_response_from_buffer_static (strlen (BAD_REQUEST_PAGE),\n                                            (const void *) BAD_REQUEST_PAGE);\n  ret = MHD_queue_response (con, MHD_HTTP_BAD_REQUEST, res);\n  MHD_destroy_response (res);\n  return ret;\n}\n```\n\nStatic call graph of the target function is:\n```json\n{'send_bad_request': {'callees': ['MHD_create_response_from_buffer_static', 'MHD_queue_response', 'MHD_destroy_response'], 'callers': ['ahc_cb']}, 'MHD_create_response_from_buffer_static': {'callees': ['MHD_create_response_from_buffer_with_free_callback_cls'], 'callers': ['transmit_error_response_len', 'main', 'ahc_echo', 'answer_to_connection', 'serve_simple_form', 'not_found_page', 'create_response', 'reply_with_page_not_found', 'reply_with_auth_required', 'reply_with_forbidden', 'reply_with_area1_pages', 'reply_with_area2_pages', 'reply_with_main_page', 'reply_with_method_not_supported', 'send_chat_page', 'send_bad_request', 'send_upgrade_required', 'create_response_object', 'answer_unique_tiny_response', 'answer_unique_dyn_response', 'send_page']}, 'MHD_queue_response': {'callees': ['MHD_DLOG', 'is_reply_body_needed', 'MHD_increment_response_rc', 'MHD_connection_handle_idle', 'MHD_update_last_activity_'], 'callers': ['transmit_error_response_len', 'queue_auth_required_response3_inner', 'MHD_queue_basic_auth_required_response3', 'ahc_echo', 'answer_to_connection', 'serve_simple_form', 'fill_v1_form', 'fill_v1_v2_form', 'not_found_page', 'create_response', 'return_directory_response', 'generate_page', 'reply_with_page_not_found', 'reply_with_forbidden', 'reply_with_area1_pages', 'reply_with_area2_pages', 'reply_with_main_page', 'reply_with_method_not_supported', 'send_chat_page', 'send_bad_request', 'send_upgrade_required', 'ahc_cb', 'answer_shared_response', 'answer_single_response', 'answer_unique_empty_response', 'answer_unique_tiny_response', 'answer_unique_dyn_response', 'send_page']}, 'MHD_destroy_response': {'callees': ['__builtin_unreachable'], 'callers': ['MHD_connection_close_', 'transmit_error_response_len', 'cleanup_connection', 'connection_reset', 'MHD_connection_handle_idle', 'thread_main_handle_connection', 'MHD_cleanup_connections', 'MHD_create_response_for_upgrade', 'main', 'ahc_echo', 'answer_to_connection', 'serve_simple_form', 'fill_v1_form', 'fill_v1_v2_form', 'not_found_page', 'create_response', 'update_cached_response', 'generate_page', 'reply_with_page_not_found', 'reply_with_auth_required', 'reply_with_forbidden', 'reply_with_area1_pages', 'reply_with_area2_pages', 'reply_with_main_page', 'reply_with_method_not_supported', 'send_chat_page', 'send_bad_request', 'send_upgrade_required', 'ahc_cb', 'init_data', 'deinit_data', 'answer_unique_empty_response', 'answer_unique_tiny_response', 'answer_unique_dyn_response', 'send_page']}, 'ahc_cb': {'callees': ['MHD_lookup_connection_value', 'is_websocket_request', 'send_chat_page', 'send_bad_request', 'send_upgrade_required', 'MHD_lookup_connection_value_n', 'ws_get_accept_value', 'MHD_create_response_for_upgrade', 'MHD_add_response_header', 'MHD_destroy_response', 'MHD_queue_response'], 'callers': []}}\n```\n\n\nList additional symbols that are required to analyze the target function to determine if the target function code violates the following MISRA C rule:\nA function parameter should not be modified. Note that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\nThe list will be included in the prompt for the next agent, so be concise and clear.\nExplain why each symbol is required in the analysis of the target function for the MISRA C rule.\n",
  "close_symbols": [
    "MHD_queue_response (declaration/signature)",
    "MHD_create_response_from_buffer_static (declaration/signature)",
    "MHD_destroy_response (declaration/signature)",
    "struct MHD_Connection (type definition)",
    "struct MHD_Response (type definition)",
    "enum MHD_Result (definition)",
    "MHD_HTTP_BAD_REQUEST (macro/constant)",
    "BAD_REQUEST_PAGE (definition)",
    "strlen (declaration)"
  ],
  "explanation": "You must confirm whether the parameter 'con' (type: struct MHD_Connection * ) is ever modified as a function parameter. To do that you need:\n\n- MHD_queue_response (declaration/signature): send_bad_request passes 'con' to this function. Verify its prototype takes a struct MHD_Connection * (by value) rather than a pointer-to-pointer or a macro that could reassign the caller's parameter. This directly determines whether the call could modify the parameter variable itself.\n\n- MHD_create_response_from_buffer_static (declaration/signature): included to ensure this call does not accept or mutate 'con' (it does not in the shown code, but check prototype in case of macro/inline definitions with side effects).\n\n- MHD_destroy_response (declaration/signature): verify it does not accept or mutate 'con' (defensive check for macros/inline implementations).\n\n- struct MHD_Connection (type definition): to confirm whether any unusual semantics/macros/overloads in the API might reinterpret the type or provide functions/macros that could modify the caller's pointer (also to check for any API functions that take pointers-to-this-type).\n\n- struct MHD_Response (type definition): to understand what is passed to queue/destroy functions and to rule out any hidden macro behavior that could affect 'con'.\n\n- enum MHD_Result (definition): to understand return types; not directly about modifying 'con' but necessary to fully inspect the called functions' signatures and behaviors.\n\n- MHD_HTTP_BAD_REQUEST (macro/constant): to ensure no macro expansion side-effects (defensive).\n\n- BAD_REQUEST_PAGE (definition): to ensure this symbol is a plain string/const (no macro/function side-effects that could touch 'con').\n\n- strlen (declaration): to ensure the call to strlen(BAD_REQUEST_PAGE) has no unexpected macro redefinition with side-effects.\n\nIn short: the primary items to inspect are the declarations/definitions of the three called functions and the types of the parameters passed (struct MHD_Connection * and struct MHD_Response *). The other symbols are included defensively to catch any macro redefinitions or unusual API patterns that could cause the caller's parameter variable 'con' to be modified (which would be a MISRA violation)."
}