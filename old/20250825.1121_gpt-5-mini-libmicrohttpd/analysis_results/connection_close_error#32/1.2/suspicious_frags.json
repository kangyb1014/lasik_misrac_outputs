{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of connection_close_error:\n```c\nstatic void\nconnection_close_error (struct MHD_Connection *connection,\n                        const char *emsg)\n{\n  connection->stop_with_error = true;\n  connection->discard_request = true;\n#ifdef HAVE_MESSAGES\n  if (NULL != emsg)\n    MHD_DLOG (connection->daemon,\n              \"%s\\n\",\n              emsg);\n#else  /* ! HAVE_MESSAGES */\n  (void) emsg; /* Mute compiler warning. */\n#endif /* ! HAVE_MESSAGES */\n  MHD_connection_close_ (connection,\n                         MHD_REQUEST_TERMINATED_WITH_ERROR);\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [],
  "explanation": "No compiler-specific language extensions are used in the provided fragment. Specifically:\n\n- There are no GCC/Clang/MSVC extension constructs such as __attribute__, __asm__, __builtin_*, typeof, statement-expressions ({ ... }), __extension__, or inline assembly.\n- Preprocessor conditionals (#ifdef / #else / #endif) and the (void) emsg cast are standard C patterns, not extensions (the cast is a portable way to silence unused-parameter warnings).\n- Use of true/false is a standard C boolean idiom when stdbool.h is used; this is not a compiler extension (the fragment alone does not show any nonstandard boolean keyword usage).\n- Identifiers and macros (MHD_DLOG, MHD_connection_close_, MHD_REQUEST_TERMINATED_WITH_ERROR) are user/library names; their presence does not imply a language extension in this fragment.\n\nTherefore there are no code fragments in this function that warrant investigation for MISRA C 2023 Rule 1.2 (use of language extensions). If extensions appear in macros or other translation-unit code (e.g., definitions of MHD_DLOG or MHD_connection_close_), those would need inspection, but they are not present in the supplied fragment."
}