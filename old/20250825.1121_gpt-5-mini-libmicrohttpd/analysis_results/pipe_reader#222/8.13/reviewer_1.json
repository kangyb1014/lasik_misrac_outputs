{
  "user_message": "An agent A claimed that the following pipe_reader code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of pipe_reader.\n```c\nstatic ssize_t\npipe_reader (void *cls,\n             uint64_t pos,\n             char *buf,\n             size_t max)\n{\n  struct MHD_Response *response = cls;\n  ssize_t n;\n\n  (void) pos;\n\n#ifndef _WIN32\n  if (SSIZE_MAX < max)\n    max = SSIZE_MAX;\n  n = read (response->fd,\n            buf,\n            (MHD_SCKT_SEND_SIZE_) max);\n#else  /* _WIN32 */\n  if (UINT_MAX < max)\n    max = INT_MAX;\n  n = read (response->fd,\n            buf,\n            (unsigned int) max);\n#endif /* _WIN32 */\n\n  if (0 == n)\n    return MHD_CONTENT_READER_END_OF_STREAM;\n  if (n < 0)\n    return MHD_CONTENT_READER_END_WITH_ERROR;\n  return n;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function assigns the incoming cls (void *) to a non-const pointer 'struct MHD_Response *response' even though the code only reads response->fd and does not modify the pointed-to object. Per MISRA C 2023 Rule 8.13, the pointer should be const-qualified when possible (e.g. use 'const struct MHD_Response *response' and, if feasible, change the parameter to 'const void *cls').\n</scenario>\n<additional code>Here are the definitions of symbols that are close to the target function pipe_reader:\n#define MHD_CONTENT_READER_END_WITH_ERROR ((ssize_t)-2)\n</additional code>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. In pipe_reader the incoming cls is assigned to a non-const pointer (struct MHD_Response *response) even though the function only reads response->fd and does not modify the pointed-to object. MISRA C 2023 Rule 8.13 requires that pointers point to const-qualified types whenever possible. A simple fix is to make the local pointer const (e.g. const struct MHD_Response *response = cls;). Changing the function parameter to const void *cls would be preferable but may not be possible if the function implements a required callback prototype; in that case making only the local pointer const still satisfies the intent of Rule 8.13. Thus the reported violation is valid."
}