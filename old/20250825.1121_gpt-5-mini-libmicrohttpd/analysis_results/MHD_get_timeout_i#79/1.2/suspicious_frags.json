{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of MHD_get_timeout_i:\n```c\n_MHD_EXTERN int\nMHD_get_timeout_i (struct MHD_Daemon *daemon)\n{\n#if SIZEOF_INT >= SIZEOF_INT64_T\n  return MHD_get_timeout64s (daemon);\n#else  /* SIZEOF_INT < SIZEOF_INT64_T */\n  const int64_t to64 = MHD_get_timeout64s (daemon);\n  if (INT_MAX >= to64)\n    return (int) to64;\n  return INT_MAX;\n#endif /* SIZEOF_INT < SIZEOF_INT64_T */\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function MHD_get_timeout_i:\n#define _MHD_EXTERN __attribute__((visibility(\"default\")))extern\n...\n#define SIZEOF_INT 4\n...\n#define SIZEOF_INT64_T 8\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "#define _MHD_EXTERN __attribute__((visibility(\"default\")))extern",
    "_MHD_EXTERN int\nMHD_get_timeout_i (struct MHD_Daemon *daemon)\n{"
  ],
  "explanation": "Other fragments in the provided code do not appear to use compiler language extensions and therefore do not need investigation for MISRA C 2023 Rule 1.2: - Use of int64_t and INT_MAX are from standard headers (stdint.h, limits.h) and are standard C types/macros. - The conditional compilation (#if SIZEOF_INT >= SIZEOF_INT64_T / #else / #endif) and the SIZEOF_INT / SIZEOF_INT64_T macro constants are standard preprocessor usage, not language extensions. - The cast (int) to64 and the integer comparison are standard C operations. - No other compiler-specific constructs (inline assembly, typeof, statement expressions, nonstandard storage-class specifiers beyond standard 'extern', etc.) are present in the shown code. Therefore only the fragments above warrant further investigation for use of compiler-specific language extensions."
}