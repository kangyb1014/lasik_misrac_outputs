{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of handle_req_cookie_no_space:\n```c\nstatic void\nhandle_req_cookie_no_space (struct MHD_Connection *c)\n{\n  unsigned int err_code;\n\n  err_code = get_no_space_err_status_code (c,\n                                           MHD_PROC_RECV_COOKIE,\n                                           NULL,\n                                           0);\n  transmit_error_response_static (c,\n                                  err_code,\n                                  ERR_MSG_REQUEST_HEADER_WITH_COOKIES_TOO_BIG);\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "  transmit_error_response_static (c,\n                                  err_code,\n                                  ERR_MSG_REQUEST_HEADER_WITH_COOKIES_TOO_BIG);",
    "  err_code = get_no_space_err_status_code (c,\n                                           MHD_PROC_RECV_COOKIE,\n                                           NULL,\n                                           0);",
    "static void\nhandle_req_cookie_no_space (struct MHD_Connection *c)"
  ],
  "explanation": "The rule targets pointer declarations/uses that could or should be const-qualified. In this function the only pointer occurrences are: the function parameter 'struct MHD_Connection *c' (declaration), the call to get_no_space_err_status_code where c and a NULL pointer are passed (the NULL is part of that call and may correspond to a non-const parameter in the callee), and the call that passes ERR_MSG_REQUEST_HEADER_WITH_COOKIES_TOO_BIG (a string literal/macro pointer) to transmit_error_response_static. There are no other pointer declarations or pointer variables in this fragment (err_code is an unsigned int, the function return type is void, and no other pointer arithmetic or pointer variables appear), so no other lines need investigation for Rule 8.13 in this code snippet."
}