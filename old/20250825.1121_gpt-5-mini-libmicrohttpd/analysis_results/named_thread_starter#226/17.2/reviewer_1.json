{
  "user_message": "An agent A claimed that the following named_thread_starter code violates the MISRA C 2023 rule 17.2.\n<misra_rule>\nMISRA C 2023 Rule 17.2 is Functions shall not call themselves, either directly or indirectly.\n\n</misra_rule>\n<target_code>\nHere is the original code of named_thread_starter.\n```c\nstatic MHD_THRD_RTRN_TYPE_ MHD_THRD_CALL_SPEC_\nnamed_thread_starter (void *data)\n{\n  struct MHD_named_helper_param_ *const param =\n    (struct MHD_named_helper_param_ *) data;\n  void *arg;\n  MHD_THREAD_START_ROUTINE_ thr_func;\n\n  if (NULL == data)\n    return (MHD_THRD_RTRN_TYPE_) 0;\n\n  MHD_set_cur_thread_name_ (param->name);\n\n  arg = param->arg;\n  thr_func = param->start_routine;\n  free (data);\n\n  return thr_func (arg);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIf param->start_routine holds the address of named_thread_starter (i.e. the wrapper was erroneously passed as the \u2018real\u2019 start routine), the statement return thr_func(arg); will invoke named_thread_starter indirectly (recursive call). This indirect self-call would violate MISRA C 2023 Rule 17.2.\n</scenario>\n<additional code>Here are the definitions of symbols that are close to the target function named_thread_starter:\n#define MHD_set_cur_thread_name_(n) MHD_set_thread_name_(pthread_self(),(n))\n...\nstruct MHD_named_helper_param_\n{\n  /**\n   * Real thread start routine\n   */\n  MHD_THREAD_START_ROUTINE_ start_routine;\n\n  /**\n   * Argument for thread start routine\n   */\n  void *arg;\n\n  /**\n   * Name for thread\n   */\n  const char *name;\n}\n...\ntypedef MHD_THRD_RTRN_TYPE_\n(MHD_THRD_CALL_SPEC_ *MHD_THREAD_START_ROUTINE_)(void *cls)\n</additional code>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. named_thread_starter fetches a start routine from runtime data (param->start_routine), stores it in thr_func and then invokes it. There is nothing in the function or the provided definitions that guarantees param->start_routine cannot hold the address of named_thread_starter itself, so the call return thr_func(arg); can result in an indirect recursive call. MISRA C 2023 Rule 17.2 forbids functions calling themselves, directly or indirectly; therefore, unless there is an external, provable invariant (or an explicit runtime check) that prevents param->start_routine being named_thread_starter, this code violates Rule 17.2."
}