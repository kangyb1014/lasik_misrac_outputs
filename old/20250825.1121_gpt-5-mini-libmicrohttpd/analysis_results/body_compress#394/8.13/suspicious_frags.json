{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of body_compress:\n```c\nstatic enum MHD_Result\nbody_compress (void **buf,\n               size_t *buf_size)\n{\n  Bytef *cbuf;\n  uLongf cbuf_size;\n  int ret;\n\n  cbuf_size = compressBound ((uLong) * buf_size);\n  cbuf = malloc (cbuf_size);\n  if (NULL == cbuf)\n    return MHD_NO;\n  ret = compress (cbuf,\n                  &cbuf_size,\n                  (const Bytef *) *buf,\n                  (uLong) * buf_size);\n  if ((Z_OK != ret) ||\n      (cbuf_size >= *buf_size))\n  {\n    /* compression failed */\n    free (cbuf);\n    return MHD_NO;\n  }\n  free (*buf);\n  *buf = (void *) cbuf;\n  *buf_size = (size_t) cbuf_size;\n  return MHD_YES;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function body_compress:\nenum MHD_Result\n{\n  /**\n   * MHD result code for \"NO\".\n   */\n  MHD_NO = 0,\n\n  /**\n   * MHD result code for \"YES\".\n   */\n  MHD_YES = 1\n\n}\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "static enum MHD_Result\nbody_compress (void **buf,\n               size_t *buf_size)",
    "Bytef *cbuf;",
    "free (*buf);",
    "*buf = (void *) cbuf;",
    "ret = compress (cbuf,\n                  &cbuf_size,\n                  (const Bytef *) *buf,\n                  (uLong) * buf_size);"
  ],
  "explanation": "The rest of the code fragments (calls to compressBound, malloc and checks for NULL, use of cbuf_size, the return-value handling and freeing of cbuf on failure, the size casts and comparisons, and the final assignments to buf_size and return codes) do not present concerns with respect to MISRA C:2023 Rule 8.13 (pointer should point to a const-qualified type whenever possible). They are either non-pointer declarations/usages, memory-allocation/error-handling logic, or pointer uses where const qualification is not applicable because the function intentionally modifies or reassigns the pointee (e.g. updating *buf and *buf_size, writing compressed data into cbuf). Therefore they need not be investigated for Rule 8.13."
}