{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of add_session_cookie:\n```c\nstatic void\nadd_session_cookie (struct Session *session,\n                    struct MHD_Response *response)\n{\n  char cstr[256];\n  snprintf (cstr,\n            sizeof (cstr),\n            \"%s=%s\",\n            COOKIE_NAME,\n            session->sid);\n  if (MHD_NO ==\n      MHD_add_response_header (response,\n                               MHD_HTTP_HEADER_SET_COOKIE,\n                               cstr))\n  {\n    fprintf (stderr,\n             \"Failed to set session cookie header!\\n\");\n  }\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nif (MHD_NO ==\n      MHD_add_response_header (response,\n                               MHD_HTTP_HEADER_SET_COOKIE,\n                               cstr))\n\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation in this fragment as written: cstr is a mutable array whose address is passed to MHD_add_response_header, and the libmicrohttpd prototype for MHD_add_response_header takes const char * for the header and value (i.e. const-qualified pointers), so no non-const pointer is introduced. This satisfies Rule 8.13. (If, instead, MHD_add_response_header were declared to take char * for the header/value, that would violate Rule 8.13 because the function parameter should be const char * when the function does not modify the pointed-to data.)"
}