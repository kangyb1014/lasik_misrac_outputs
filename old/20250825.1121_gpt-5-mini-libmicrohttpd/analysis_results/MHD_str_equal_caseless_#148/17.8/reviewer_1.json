{
  "user_message": "An agent A claimed that the following MHD_str_equal_caseless_ code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_str_equal_caseless_.\n```c\nint\nMHD_str_equal_caseless_ (const char *str1,\n                         const char *str2)\n{\n  while (0 != (*str1))\n  {\n    const char c1 = *str1;\n    const char c2 = *str2;\n    if (charsequalcaseless (c1, c2))\n    {\n      str1++;\n      str2++;\n    }\n    else\n      return 0;\n  }\n  return 0 == (*str2);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIn MHD_str_equal_caseless_ the parameter pointer 'str1' (declared as const char *str1) is incremented with 'str1++;', which modifies the pointer parameter itself. Rule 17.8 forbids modifying function parameters (the pointer may not be reassigned even though the pointed-to object may be changed). This constitutes a violation.\n</scenario>\n<additional code>Here are the definitions of symbols that are close to the target function MHD_str_equal_caseless_:\n_MHD_static_inline bool\ncharsequalcaseless (const char c1, const char c2)\n{\n  return ( (c1 == c2) ||\n           (isasciiupper (c1) ?\n            ((c1 - 'A' + 'a') == c2) :\n            ((c1 == (c2 - 'A' + 'a')) && isasciiupper (c2))) );\n}\n...\n_MHD_static_inline bool\nisasciiupper (char c)\n{\n  return (c >= 'A') && (c <= 'Z');\n}\n</additional code>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct. MISRA C 2023 Rule 17.8 forbids modifying function parameters; while the pointee may be modified via a pointer parameter, the pointer object itself shall not be changed. In MHD_str_equal_caseless_ the parameters str1 and str2 are pointer parameters (const char *), and the code does str1++ and str2++, which reassigns/modifies those parameter variables. That directly violates Rule 17.8. To comply, iterate using local copies (e.g. const char *p1 = str1; const char *p2 = str2; and increment p1/p2) or use an index variable instead."
}