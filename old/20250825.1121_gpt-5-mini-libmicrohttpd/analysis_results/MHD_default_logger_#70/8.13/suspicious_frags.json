{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of MHD_default_logger_:\n```c\nstatic void\nMHD_default_logger_ (void *cls,\n                     const char *fm,\n                     va_list ap)\n{\n  vfprintf ((FILE *) cls, fm, ap);\n#ifdef _DEBUG\n  fflush ((FILE *) cls);\n#endif /* _DEBUG */\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "fflush ((FILE *) cls);",
    "vfprintf ((FILE *) cls, fm, ap);",
    "MHD_default_logger_ (void *cls,"
  ],
  "explanation": "The only pointer-bearing parameters/uses in this function are 'cls' (declared as void * and cast to FILE *) and the casts where 'cls' is converted to FILE *. MISRA Rule 8.13 concerns pointer types that should be const-qualified when possible. 'fm' is declared as const char * (already const-qualified) and needs no further inspection. 'ap' is a va_list (not a pointer type subject to this rule). The casts to (FILE *) and the void * parameter are therefore the relevant places to investigate to confirm whether 'cls' could or should be a pointer to const (or whether the non-const use is justified because the FILE object is modified by vfprintf/fflush). No other fragments in the function involve pointer types that could be const-qualified, so they do not require investigation."
}