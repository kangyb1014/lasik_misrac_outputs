{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_default_logger_:\n```c\nstatic void\nMHD_default_logger_ (void *cls,\n                     const char *fm,\n                     va_list ap)\n{\n  vfprintf ((FILE *) cls, fm, ap);\n#ifdef _DEBUG\n  fflush ((FILE *) cls);\n#endif /* _DEBUG */\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nMHD_default_logger_ (void *cls,\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "The parameter cls is cast to (FILE *) and passed to vfprintf which operates on (and may modify) the FILE object (stream). Because the function uses the pointer to a mutable FILE, it cannot reasonably be const-qualified. Rule 8.13 would be violated if cls could be declared as pointing to a const-qualified type but is not; that is not the case here."
}