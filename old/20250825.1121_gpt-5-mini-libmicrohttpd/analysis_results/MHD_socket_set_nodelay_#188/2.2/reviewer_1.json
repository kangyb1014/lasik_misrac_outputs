{
  "user_message": "An agent A claimed that the following MHD_socket_set_nodelay_ code violates the MISRA C 2023 rule 2.2.\n<misra_rule>\nMISRA C 2023 Rule 2.2 is A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_socket_set_nodelay_.\n```c\nint\nMHD_socket_set_nodelay_ (MHD_socket sock,\n                         bool on)\n{\n#ifdef TCP_NODELAY\n  {\n    const MHD_SCKT_OPT_BOOL_ off_val = 0;\n    const MHD_SCKT_OPT_BOOL_ on_val = 1;\n    /* Disable Nagle's algorithm for normal buffering */\n    return setsockopt (sock,\n                       IPPROTO_TCP,\n                       TCP_NODELAY,\n                       (const void *) ((on) ? &on_val : &off_val),\n                       sizeof (on_val));\n  }\n#else\n  (void) sock;\n  return 0;\n#endif /* TCP_NODELAY */\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIn the #else branch (when TCP_NODELAY is not defined) the statement '(void) sock;' is an expression statement with no runtime effect. Removing that cast/statement does not change program behaviour, so it constitutes dead code and therefore violates MISRA C 2023 Rule 2.2.\n</scenario>\n<additional code>Here are the definitions of symbols that are close to the target function MHD_socket_set_nodelay_:\ntypedef int MHD_SCKT_OPT_BOOL_\n...\ntypedef int MHD_socket\n</additional code>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The claim is not correct. The line \u201c(void) sock;\u201d is the common, intentional idiom to mark a parameter as used when that parameter is not needed in a particular conditional compilation branch; it prevents compiler diagnostics about an unused parameter. Rule 2.2 is concerned with executed operations whose removal does not affect program behaviour. The cast-to-void has no runtime side\u2011effects, but its purpose is to affect compile\u2011time diagnostics (and to document the intentional unused-ness). In practice MISRA guidance accepts this idiom as the appropriate way to indicate an unused parameter in conditional compilation branches; the presence of the statement is purposeful and not accidental dead code. Therefore the reporter\u2019s assertion that it violates MISRA C:2023 Rule 2.2 is not correct."
}