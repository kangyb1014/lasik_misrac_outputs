{
  "user_message": "An agent A claimed that the following MHD_add_response_entry_no_alloc_ code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_add_response_entry_no_alloc_.\n```c\nbool\nMHD_add_response_entry_no_alloc_ (struct MHD_Response *response,\n                                  enum MHD_ValueKind kind,\n                                  char *header,\n                                  size_t header_len,\n                                  char *content,\n                                  size_t content_len)\n{\n  struct MHD_HTTP_Res_Header *hdr;\n\n  mhd_assert (0 != header_len);\n  mhd_assert (0 != content_len);\n  if (NULL == (hdr = MHD_calloc_ (1, sizeof (struct MHD_HTTP_Res_Header))))\n    return false;\n\n  hdr->header = header;\n  hdr->header_size = header_len;\n  hdr->value = content;\n  hdr->value_size = content_len;\n  hdr->kind = kind;\n  _MHD_insert_header_last (response, hdr);\n\n  return true; /* Success exit point */\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function takes a pointer 'char *header' (and similarly 'char *content') but never modifies the pointed-to data; it merely stores the pointer in the response header structure. According to MISRA C 2023 Rule 8.13, these should be declared as pointers to const (e.g. 'const char *header') whenever possible. Thus the use of 'char *header' is a violation unless the data is intentionally writable elsewhere.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A's report is correct in the sense that, within the shown function, the pointers 'header' and 'content' are not used to modify the pointed-to objects \u2014 they are simply stored in the response header structure. MISRA C 2023 Rule 8.13 requires pointers to point to const-qualified types whenever possible, so the function parameters should be declared as 'const char *header' and 'const char *content' (and the corresponding members of struct MHD_HTTP_Res_Header should likewise be const-qualified) unless there is a deliberate need for mutability elsewhere. The code as shown therefore violates Rule 8.13 unless there is external, program-wide justification (for example, other code expects to modify the data via the stored pointer or the struct members are required to be non-const)."
}