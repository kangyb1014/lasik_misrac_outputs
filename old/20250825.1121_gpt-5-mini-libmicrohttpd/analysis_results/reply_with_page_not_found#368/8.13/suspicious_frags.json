{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of reply_with_page_not_found:\n```c\nstatic enum MHD_Result\nreply_with_page_not_found (struct MHD_Connection *c)\n{\n  static const char page_content[] =\n    \"<html><head><title>Page Not Found</title></head>\" \\\n    \"<body>The requested page not found.</body></html>\";\n  static const size_t page_content_len =\n    (sizeof(page_content) / sizeof(char)) - 1;\n  struct MHD_Response *resp;\n  enum MHD_Result ret;\n\n  resp = MHD_create_response_from_buffer_static (page_content_len,\n                                                 page_content);\n  if (NULL == resp)\n    return MHD_NO;\n\n  /* Ignore possible error when adding the header as the reply will work even\n     without this header. */\n  (void) MHD_add_response_header (resp,\n                                  MHD_HTTP_HEADER_CONTENT_TYPE,\n                                  \"text/html\");\n\n  ret = MHD_queue_response (c, MHD_HTTP_NOT_FOUND, resp);\n  MHD_destroy_response (resp);\n  return ret;\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "static const char page_content[] =\n    \"<html><head><title>Page Not Found</title></head>\" \\\n    \"<body>The requested page not found.</body></html>\";",
    "static enum MHD_Result\nreply_with_page_not_found (struct MHD_Connection *c)",
    "resp = MHD_create_response_from_buffer_static (page_content_len,\n                                                 page_content);",
    "(void) MHD_add_response_header (resp,\n                                  MHD_HTTP_HEADER_CONTENT_TYPE,\n                                  \"text/html\");"
  ],
  "explanation": "Other fragments are not flagged because they do not present obvious const-qualification issues relative to MISRA C Rule 8.13 in the given context: - The page_content_len definition is a size_t constant (no pointer involved). - The local pointer declarations (struct MHD_Response *resp; enum MHD_Result ret;) are used with library functions that typically require non-const pointers (response creation, modification, destruction), so qualifying them const would likely be inappropriate. - Calls that pass resp to MHD_queue_response and MHD_destroy_response, and the use of MHD_HTTP_HEADER_CONTENT_TYPE as an argument, follow the expected API usage where non-const pointers are typically required; there is no clear evidence in this snippet that they could/should be const-qualified. - The static storage duration qualifiers are deliberate and appropriate for the static data shown. The listed suspicious fragments are those where constness may be violated (passing const data to external APIs or accepting a non-const pointer parameter) and therefore warrant investigation."
}