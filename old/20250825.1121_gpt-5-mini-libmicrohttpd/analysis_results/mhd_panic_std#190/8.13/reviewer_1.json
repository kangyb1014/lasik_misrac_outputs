{
  "user_message": "An agent A claimed that the following mhd_panic_std code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of mhd_panic_std.\n```c\n_MHD_NORETURN static void\nmhd_panic_std (void *cls,\n               const char *file,\n               unsigned int line,\n               const char *reason)\n{\n  (void) cls; /* Mute compiler warning. */\n#ifdef HAVE_MESSAGES\n  fprintf (stderr,\n           _ (\"Fatal error in GNU libmicrohttpd %s:%u: %s\\n\"),\n           file,\n           line,\n           reason);\n#else  /* ! HAVE_MESSAGES */\n  (void) file;   /* Mute compiler warning. */\n  (void) line;   /* Mute compiler warning. */\n  (void) reason; /* Mute compiler warning. */\n#endif\n  abort ();\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'cls' is declared as 'void *cls' but is not used or modified in the function (it is cast to void to mute a warning). According to Rule 8.13 it should be const-qualified when possible \u2014 i.e. declared as 'const void *cls' \u2014 so the current declaration violates the rule.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "Agent A is incorrect. Rule 8.13 recommends that pointers should point to const-qualified types when that is possible, but \u201cwhen possible\u201d is constrained by the required API and function-pointer compatibility. mhd_panic_std\u2019s first parameter is an opaque context pointer (cls) and the function is clearly written to match an external callback prototype that expects void * (not const void *). Changing the parameter to const void * would change the function type and likely break compatibility with the callback type expected by the library. The other pointer parameters that can be const already are const (file, reason). Therefore there is no MISRA 8.13 violation here: const-qualification is not possible without breaking the required API/compatibility, so the report is not correct."
}