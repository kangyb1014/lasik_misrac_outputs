{
  "user_message": "An agent A claimed that the following not_found_page code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of not_found_page.\n```c\nstatic enum MHD_Result\nnot_found_page (const void *cls,\n                const char *mime,\n                struct Session *session,\n                struct MHD_Connection *connection)\n{\n  enum MHD_Result ret;\n  struct MHD_Response *response;\n  (void) cls;     /* Unused. Silent compiler warning. */\n  (void) session; /* Unused. Silent compiler warning. */\n\n  /* unsupported HTTP method */\n  response =\n    MHD_create_response_from_buffer_static (strlen (NOT_FOUND_ERROR),\n                                            (const void *) NOT_FOUND_ERROR);\n  if (NULL == response)\n    return MHD_NO;\n  ret = MHD_queue_response (connection,\n                            MHD_HTTP_NOT_FOUND,\n                            response);\n  if (MHD_YES !=\n      MHD_add_response_header (response,\n                               MHD_HTTP_HEADER_CONTENT_ENCODING,\n                               mime))\n  {\n    fprintf (stderr,\n             \"Failed to set content encoding header!\\n\");\n  }\n  MHD_destroy_response (response);\n  return ret;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'struct Session *session' is not const-qualified even though it is unused and not modified in not_found_page. To comply with MISRA C 2023 Rule 8.13 it should be declared as 'const struct Session *session' (unless the function signature must match an external API/callback type that requires a non-const pointer).\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A\u2019s report is essentially correct. MISRA C:2023 Rule 8.13 states that a pointer should point to a const-qualified type whenever possible. In the shown function the parameter 'struct Session *session' is never used or modified, so declaring it as 'const struct Session *session' would satisfy the rule. The only valid exception is when the function must match an external API/callback prototype that requires a non-const pointer; in that case keeping the non-const parameter is justified and the deviation should be documented.\n\nTherefore, unless not_found_page is required to conform to an external callback/signature that mandates a non-const 'struct Session *', this is a violation of Rule 8.13. If it must match an external API, then no violation (but a justification/comment should be added). Recommended fix: change the parameter to 'const struct Session *session' when possible or document the deviation if the signature is fixed by an external API."
}