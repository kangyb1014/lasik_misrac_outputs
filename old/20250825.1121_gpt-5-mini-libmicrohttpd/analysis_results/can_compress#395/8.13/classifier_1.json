{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of can_compress:\n```c\nstatic enum MHD_Result\ncan_compress (struct MHD_Connection *con)\n{\n  const char *ae;\n  const char *de;\n\n  ae = MHD_lookup_connection_value (con,\n                                    MHD_HEADER_KIND,\n                                    MHD_HTTP_HEADER_ACCEPT_ENCODING);\n  if (NULL == ae)\n    return MHD_NO;\n  if (0 == strcmp (ae,\n                   \"*\"))\n    return MHD_YES;\n  de = strstr (ae,\n               \"deflate\");\n  if (NULL == de)\n    return MHD_NO;\n  if (((de == ae) ||\n       (de[-1] == ',') ||\n       (de[-1] == ' ')) &&\n      ((de[strlen (\"deflate\")] == '\\0') ||\n       (de[strlen (\"deflate\")] == ',') ||\n       (de[strlen (\"deflate\")] == ';')))\n    return MHD_YES;\n  return MHD_NO;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function can_compress:\nstruct MHD_Connection\n...\n#define MHD_HTTP_HEADER_ACCEPT_ENCODING \"Accept-Encoding\"\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nstatic enum MHD_Result\ncan_compress (struct MHD_Connection *con)\n{\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": true,
  "scenario": "The function parameter is declared as 'struct MHD_Connection *con' but the function does not modify the pointed-to object. Per MISRA C 2023 Rule 8.13 this should be 'const struct MHD_Connection *con' (or otherwise const-qualified) so the pointer points to a const-qualified type. Local pointers to strings are already const-qualified (const char *ae, *de). If a non-const prototype of MHD_lookup_connection_value prevents changing the parameter, document that exception; otherwise change the parameter to const."
}