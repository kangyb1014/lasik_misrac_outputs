{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of dir_reader:\n```c\nstatic ssize_t\ndir_reader (void *cls, uint64_t pos, char *buf, size_t max)\n{\n  DIR *dir = cls;\n  struct dirent *e;\n  int res;\n\n  if (max < 512)\n    return 0;\n  (void) pos; /* 'pos' is ignored as function return next one single entry per call. */\n  do\n  {\n    e = readdir (dir);\n    if (e == NULL)\n      return MHD_CONTENT_READER_END_OF_STREAM;\n  } while (e->d_name[0] == '.');\n  res = snprintf (buf, max,\n                  \"<a href=\\\"/%s\\\">%s</a><br>\",\n                  e->d_name,\n                  e->d_name);\n  if (0 >= res)\n    return MHD_CONTENT_READER_END_WITH_ERROR;\n  if (max < (size_t) res)\n    return MHD_CONTENT_READER_END_WITH_ERROR;\n  return (ssize_t) res;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function dir_reader:\n#define MHD_CONTENT_READER_END_OF_STREAM ((ssize_t)-1)\n...\n#define MHD_CONTENT_READER_END_WITH_ERROR ((ssize_t)-2)\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\n(void) pos; /* 'pos' is ignored as function return next one single entry per call. */\n```\nFocus on the above code fragment and judge whether it violates the rule 2.2 or not.\n</target_code>\n",
  "is_rule_violated": true,
  "scenario": "The statement '(void) pos;' is an executed no-op used to silence an \"unused parameter\" warning. Removing this statement does not change program behaviour, therefore it constitutes dead code under MISRA C 2023 Rule 2.2."
}