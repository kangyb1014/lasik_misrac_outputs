{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 21.17 is: Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of send_chat_page:\n```c\nstatic enum MHD_Result\nsend_chat_page (struct MHD_Connection *con)\n{\n  struct MHD_Response *res;\n  enum MHD_Result ret;\n\n  res = MHD_create_response_from_buffer_static (strlen (CHAT_PAGE),\n                                                (const void *) CHAT_PAGE);\n  ret = MHD_queue_response (con, MHD_HTTP_OK, res);\n  MHD_destroy_response (res);\n  return ret;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are related to the target function send_chat_page:\n#define CHAT_PAGE \"<html>\\n\"\"<head>\\n\"\"<title>WebSocket chat</title>\\n\"\"<script>\\n\"\"document.addEventListener('DOMContentLoaded', function() {\\n\"\"  const ws = new WebSocket('ws:/\"\"/' + window.location.host);\\n\"\"  const btn = document.getElementById('send');\\n\"\"  const msg = document.getElementById('msg');\\n\"\"  const log = document.getElementById('log');\\n\"\"  ws.onopen = function() {\\n\"\"    log.value += 'Connected\\\\n';\\n\"\"  };\\n\"\"  ws.onclose = function() {\\n\"\"    log.value += 'Disconnected\\\\n';\\n\"\"  };\\n\"\"  ws.onmessage = function(ev) {\\n\"\"    log.value += ev.data + '\\\\n';\\n\"\"  };\\n\"\"  btn.onclick = function() {\\n\"\"    log.value += '<You>: ' + msg.value + '\\\\n';\\n\"\"    ws.send(msg.value);\\n\"\"  };\\n\"\"  msg.onkeyup = function(ev) {\\n\"\"    if (ev.keyCode === 13) {\\n\"\"      ev.preventDefault();\\n\"\"      ev.stopPropagation();\\n\"\"      btn.click();\\n\"\"      msg.value = '';\\n\"\"    }\\n\"\"  };\\n\"\"});\\n\"\"</script>\\n\"\"</head>\\n\"\"<body>\\n\"\"<input type='text' id='msg' autofocus/>\\n\"\"<input type='button' id='send' value='Send' /><br /><br />\\n\"\"<textarea id='log' rows='20' cols='28'></textarea>\\n\"\"</body>\\n\"\"</html>\"\n...\n_MHD_EXTERN struct MHD_Response *\nMHD_create_response_from_buffer_static (size_t size,\n                                        const void *buffer)\n{\n  return MHD_create_response_from_buffer_with_free_callback_cls (size,\n                                                                 buffer,\n                                                                 NULL,\n                                                                 NULL);\n}\n</additional code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "res = MHD_create_response_from_buffer_static (strlen (CHAT_PAGE),\n                                                (const void *) CHAT_PAGE);",
    "#define CHAT_PAGE \"<html>\\n\"\"<head>\\n\"\"<title>WebSocket chat</title>\\n\"\"<script>\\n\"\"document.addEventListener('DOMContentLoaded', function() {\\n\"\"  const ws = new WebSocket('ws:/\"\"/' + window.location.host);\\n\"\"  const btn = document.getElementById('send');\\n\"\"  const msg = document.getElementById('msg');\\n\"\"  const log = document.getElementById('log');\\n\"\"  ws.onopen = function() {\\n\"\"    log.value += 'Connected\\\\n';\\n\"\"  };\\n\"\"  ws.onclose = function() {\\n\"\"    log.value += 'Disconnected\\\\n';\\n\"\"  };\\n\"\"  ws.onmessage = function(ev) {\\n\"\"    log.value += ev.data + '\\\\n';\\n\"\"  };\\n\"\"  btn.onclick = function() {\\n\"\"    log.value += '<You>: ' + msg.value + '\\\\n';\\n\"\"    ws.send(msg.value);\\n\"\"  };\\n\"\"  msg.onkeyup = function(ev) {\\n\"\"    if (ev.keyCode === 13) {\\n\"\"      ev.preventDefault();\\n\"\"      ev.stopPropagation();\\n\"\"      btn.click();\\n\"\"      msg.value = '';\\n\"\"    }\\n\"\"  };\\n\"\"});\\n\"\"</script>\\n\"\"</head>\\n\"\"<body>\\n\"\"<input type='text' id='msg' autofocus/>\\n\"\"<input type='button' id='send' value='Send' /><br /><br />\\n\"\"<textarea id='log' rows='20' cols='28'></textarea>\\n\"\"</body>\\n\"\"</html>\""
  ],
  "explanation": "Only the above fragments need investigation for MISRA C 2023 Rule 21.17 because they involve use of a <string.h> routine (strlen) applied to the CHAT_PAGE storage. Other code in the snippet does not call any string.h functions: the calls to MHD_queue_response and MHD_destroy_response do not perform string handling, and the MHD_create_response_from_buffer_static wrapper shown only forwards the buffer and size (it contains no string.h usage in the provided code). The CHAT_PAGE content is a compile-time string literal (concatenated adjacent literals), so there are no dynamic or user-supplied buffers elsewhere to inspect in this excerpt; thus other lines need not be investigated for this specific rule."
}