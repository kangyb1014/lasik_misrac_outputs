{
  "user_message": "An agent A claimed that the following MHD_add_to_fd_set_ code violates the MISRA C 2023 rule 17.8.\n<misra_rule>\nMISRA C 2023 Rule 17.8 is A function parameter should not be modified.\nNote that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_add_to_fd_set_.\n```c\nint\nMHD_add_to_fd_set_ (MHD_socket fd,\n                    fd_set *set,\n                    MHD_socket *max_fd,\n                    int fd_setsize)\n{\n  if ( (NULL == set) ||\n       (MHD_INVALID_SOCKET == fd) )\n    return 0;\n\n#ifndef HAS_FD_SETSIZE_OVERRIDABLE\n  (void) fd_setsize;  /* Mute compiler warning */\n  fd_setsize = (int) FD_SETSIZE; /* Help compiler to optimise */\n#endif /* ! HAS_FD_SETSIZE_OVERRIDABLE */\n\n  if (! MHD_SCKT_FD_FITS_FDSET_SETSIZE_ (fd,\n                                         set,\n                                         fd_setsize))\n    return 0;\n  MHD_SCKT_ADD_FD_TO_FDSET_SETSIZE_ (fd,\n                                     set,\n                                     fd_setsize);\n  if ( (NULL != max_fd) &&\n       ( (fd > *max_fd) ||\n         (MHD_INVALID_SOCKET == *max_fd) ) )\n    *max_fd = fd;\n  return ! 0;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function parameter 'fd_setsize' (an int passed by value) is assigned to: 'fd_setsize = (int) FD_SETSIZE;'. MISRA C 2023 Rule 17.8 prohibits modifying function parameters. This assignment therefore violates Rule 17.8. Use a local variable (e.g. 'int local_fd_setsize = (int)FD_SETSIZE;') instead of writing to the parameter.\n</scenario>\n<additional code>Here are the definitions of symbols that are close to the target function MHD_add_to_fd_set_:\n#define MHD_SCKT_FD_FITS_FDSET_SETSIZE_(fd, pset, setsize) ((fd)<((MHD_socket)(setsize)))\n...\n#define MHD_SCKT_ADD_FD_TO_FDSET_SETSIZE_(fd, pset, setsize) FD_SET((fd),(pset))\n...\n#define MHD_INVALID_SOCKET (-1)\n</additional code>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "Agent A is correct. The code assigns to the value parameter fd_setsize (fd_setsize = (int) FD_SETSIZE;). MISRA C 2023 Rule 17.8 states that function parameters shall not be modified; the exception in the rule only permits modifying the object referred to by a pointer parameter (not applicable here). Changing a by-value parameter like fd_setsize is therefore a violation. The recommended fix is to use a local variable (e.g. int local_fd_setsize = (int)FD_SETSIZE;) and use that local in subsequent calls, leaving the parameter unmodified."
}