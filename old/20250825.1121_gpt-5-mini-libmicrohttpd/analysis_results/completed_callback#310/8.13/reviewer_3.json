{
  "user_message": "An agent A claimed that the following completed_callback code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of completed_callback.\n```c\nstatic void\ncompleted_callback (void *cls,\n                    struct MHD_Connection *connection,\n                    void **req_cls,\n                    enum MHD_RequestTerminationCode toe)\n{\n  struct timeval *tv = *req_cls;\n  struct timeval tve;\n  uint64_t delta;\n  (void) cls;         /* Unused. Silent compiler warning. */\n  (void) connection;  /* Unused. Silent compiler warning. */\n  (void) toe;         /* Unused. Silent compiler warning. */\n\n  if (NULL == tv)\n    return;\n  gettimeofday (&tve, NULL);\n\n  delta = ((uint64_t) (tve.tv_sec - tv->tv_sec)) * 1000000LL\n          + (uint64_t) tve.tv_usec - (uint64_t) tv->tv_usec;\n  if (delta < SMALL)\n    small_deltas[delta]++;\n  else\n    fprintf (stdout, \"D: %\" PRIu64 \" 1\\n\", delta);\n  free (tv);\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe parameter 'struct MHD_Connection *connection' is not const-qualified even though the function does not modify the pointed-to object (it is unused and only cast to void). According to MISRA C 2023 Rule 8.13, the pointer should be to a const-qualified type (e.g. 'const struct MHD_Connection *connection') unless the non-const signature is required by an external API (e.g. callback prototype). No such justification is present in the fragment, so this is a violation.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "Agent A's report is not correct. The pointer parameter 'struct MHD_Connection *connection' is part of the callback signature required by the external library (libmicrohttpd) and thus cannot be changed to 'const struct MHD_Connection *' without breaking the required prototype. MISRA's guidance to use const where possible does not require changing externally mandated function signatures; such externally imposed non-const prototypes are an accepted justification for not const-qualifying the parameter. (Also, the function explicitly marks the parameter unused via (void) connection; so it does not attempt to modify the pointed object.) If the project requires explicit documentation of deviations from MISRA, add a comment noting that the signature matches the library callback prototype."
}