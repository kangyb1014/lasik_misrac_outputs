{
  "user_message": "Target function code is:\n```c\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n\n  (void) con;  /* Unused. Silent compiler warning. */\n\n  return ((upg_header != NULL) && (con_header != NULL)\n          && (0 == strcmp (upg_header, WS_UPGRADE_VALUE))\n          && (NULL != strstr (con_header, \"Upgrade\")))\n         ? MHD_YES\n         : MHD_NO;\n}\n```\n\nStatic call graph of the target function is:\n```json\n{'is_websocket_request': {'callees': [], 'callers': ['ahc_cb']}, 'ahc_cb': {'callees': ['MHD_lookup_connection_value', 'is_websocket_request', 'send_chat_page', 'send_bad_request', 'send_upgrade_required', 'MHD_lookup_connection_value_n', 'ws_get_accept_value', 'MHD_create_response_for_upgrade', 'MHD_add_response_header', 'MHD_destroy_response', 'MHD_queue_response'], 'callers': []}}\n```\n\n\nList additional symbols that are required to analyze the target function to determine if the target function code violates the following MISRA C rule:\nA function parameter should not be modified. Note that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\nThe list will be included in the prompt for the next agent, so be concise and clear.\nExplain why each symbol is required in the analysis of the target function for the MISRA C rule.\n",
  "close_symbols": [
    "strcmp",
    "strstr",
    "WS_UPGRADE_VALUE",
    "NULL",
    "struct MHD_Connection",
    "enum MHD_Result",
    "MHD_YES",
    "MHD_NO"
  ],
  "explanation": "- strcmp: verify its prototype takes const char * arguments and does not modify the pointer parameters or the pointed-to objects (ensures calls here cannot constitute modification of upg_header).\n- strstr: verify its prototype takes const char * arguments and does not modify its arguments (ensures calls here cannot constitute modification of con_header).\n- WS_UPGRADE_VALUE: confirm this symbol is a string literal or const char * (not a macro or expression that could perform assignments or otherwise modify a parameter).\n- NULL: confirm the macro/definition used for null-pointer checks (ensures comparisons like upg_header != NULL are standard pointer checks and that NULL is not a side-effecting macro).\n- struct MHD_Connection: type of parameter 'con' to confirm there are no hidden semantics that would cause the parameter pointer itself to be modified by the (void) cast or by other platform-specific attributes.\n- enum MHD_Result and MHD_YES / MHD_NO: confirm these are simple enum/constants used as return values (to ensure no macros or functions with side effects are hiding under these names).\n\nThese symbols are required to ensure none of the used functions/macros/types introduce side effects that would amount to modifying the function parameters (the pointer variables themselves), which is what the MISRA rule forbids."
}