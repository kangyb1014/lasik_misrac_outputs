{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.1 is: A project shall not contain unreachable code.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of get_m_algo:\n```c\nstatic enum MHD_DigestAuthMultiAlgo3\nget_m_algo (void)\n{\n  if (force_md5)\n    return MHD_DIGEST_AUTH_MULT_ALGO3_MD5;\n  else if (force_sha256)\n    return MHD_DIGEST_AUTH_MULT_ALGO3_SHA256;\n  else if (force_sha512_256)\n    return MHD_DIGEST_AUTH_MULT_ALGO3_SHA512_256;\n\n  /* No forced algorithm selection, let MHD to use default */\n  return MHD_DIGEST_AUTH_MULT_ALGO3_ANY_NON_SESSION;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nelse if (force_sha512_256)\n    return MHD_DIGEST_AUTH_MULT_ALGO3_SHA512_256;\n```\nFocus on the above code fragment and judge whether it violates the rule 2.1 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "Not inherently violated. The else-if branch is reachable when force_md5==false, force_sha256==false and force_sha512_256==true. A specific violation scenario would be if one of the earlier conditions is a compile\u2011time constant true (or otherwise guaranteed true), making the later branch unreachable \u2014 e.g. if force_md5 is defined as a compile\u2011time constant 1 (#define force_md5 1 or static const int force_md5 = 1), then the else if (force_sha512_256) branch can never be reached and Rule 2.1 would be violated."
}