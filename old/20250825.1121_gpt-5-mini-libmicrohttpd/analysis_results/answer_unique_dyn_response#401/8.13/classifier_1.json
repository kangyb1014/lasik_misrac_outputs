{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of answer_unique_dyn_response:\n```c\nstatic enum MHD_Result\nanswer_unique_dyn_response (void *cls,\n                            struct MHD_Connection *connection,\n                            const char *url,\n                            const char *method,\n                            const char *version,\n                            const char *upload_data,\n                            size_t *upload_data_size,\n                            void **req_cls)\n{\n  static int marker = 0;\n  struct MHD_Response *r;\n  enum MHD_Result ret;\n  (void) cls;  /* Unused */\n  (void) url; (void) version; /* Unused */\n  (void) upload_data; (void) upload_data_size; /* Unused */\n\n  if (NULL == *req_cls)\n  {\n    /* The fist call */\n    *req_cls = (void *) &marker;\n    /* Do not send reply yet. No error. */\n    return MHD_YES;\n  }\n  if ((0 != strcmp (method, MHD_HTTP_METHOD_GET)) &&\n      (0 != strcmp (method, MHD_HTTP_METHOD_HEAD)))\n    return MHD_NO; /* Unsupported method, close connection */\n\n#if MHD_VERSION >= 0x00097701\n  r = MHD_create_response_from_buffer_static (body_dyn_size,\n                                              body_dyn);\n#else  /* MHD_VERSION < 0x00097701 */\n  r = MHD_create_response_from_buffer (body_dyn_size,\n                                       (void *) body_dyn,\n                                       MHD_RESPMEM_PERSISTENT);\n#endif /* MHD_VERSION < 0x00097701 */\n  ret = MHD_queue_response (connection, MHD_HTTP_OK, r);\n  MHD_destroy_response (r);\n  return ret;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function answer_unique_dyn_response:\nstatic char *body_dyn = NULL\n...\nstatic size_t body_dyn_size\n...\n#define MHD_HTTP_METHOD_GET \"GET\"\n...\n#define MHD_HTTP_METHOD_HEAD \"HEAD\"\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nstatic char *body_dyn = NULL\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": true,
  "scenario": "The object body_dyn is declared as 'static char *body_dyn = NULL' but in the shown code it is used only as a read-only response buffer (passed to MHD_create_response_from_buffer_static / MHD_create_response_from_buffer and even cast to (void *) to satisfy a non-const API). If body_dyn is not modified anywhere else, it should be declared as 'static const char *body_dyn' so the pointer points to a const-qualified type. Leaving it as 'char *' when it is used read-only violates MISRA C 2023 Rule 8.13. (If body_dyn is actually modified elsewhere, then const qualification would not be possible and there is no violation.)"
}