{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_digest_auth_check_digest:\n```c\n_MHD_EXTERN int\nMHD_digest_auth_check_digest (struct MHD_Connection *connection,\n                              const char *realm,\n                              const char *username,\n                              const uint8_t digest[MHD_MD5_DIGEST_SIZE],\n                              unsigned int nonce_timeout)\n{\n  return MHD_digest_auth_check_digest2 (connection,\n                                        realm,\n                                        username,\n                                        digest,\n                                        MHD_MD5_DIGEST_SIZE,\n                                        nonce_timeout,\n                                        MHD_DIGEST_ALG_MD5);\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\n_MHD_EXTERN int\n```\nFocus on the above code fragment and judge whether it violates the rule 1.2 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation in the shown fragment: _MHD_EXTERN is an identifier (macro) and its use here does not itself constitute a language extension. A violation would occur if the macro expands to a compiler-specific extension (for example __declspec(dllexport), __attribute__((...)), or any non-standard keyword documented as an extension by the compiler). Inspect the header where _MHD_EXTERN is defined; if it expands to only standard storage-class specifiers (e.g. extern) there is no Rule 1.2 violation, but if it expands to a documented compiler extension then Rule 1.2 is violated."
}