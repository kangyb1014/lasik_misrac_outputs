{
  "user_message": "<misra_rule>\nThe target MISRA C 2023 Rule 1.2 is: Language extensions should not be used.\nYou should report only when the code uses any language compiler extensions that are explicitly stated as an extension in compiler documentations.\n</misra_rule>\n<instruction>\nOther agents will judge whether the code follows the MISRA C 2023 guidelines.\nThey will investigate the code fragments you give.\nYour job is to find code fragments in the code that should be investigated to check whether the code follows the MISRA C rule.\n</instruction>\n<response format>\nProvide your answer with these fields.\n- suspicious_frags: The list of suspicious code fragments in the code.\nIt should contain only the code fragments exists in the code. If you do not find any suspicious code fragments, return an empty list for suspicious_frags\n- explanation: The explanation of why other code fragments should NOT be investigated.\nIt is very important to not miss any suspicious code fragments, so please give a sufficient explanation why other code fragments should not be investigated.\nDO NOT give any explanation for the selected suspicious code fragments.\n</response format>\n<target_code>\nHere is the code of MHD_digest_auth_check_digest:\n```c\n_MHD_EXTERN int\nMHD_digest_auth_check_digest (struct MHD_Connection *connection,\n                              const char *realm,\n                              const char *username,\n                              const uint8_t digest[MHD_MD5_DIGEST_SIZE],\n                              unsigned int nonce_timeout)\n{\n  return MHD_digest_auth_check_digest2 (connection,\n                                        realm,\n                                        username,\n                                        digest,\n                                        MHD_MD5_DIGEST_SIZE,\n                                        nonce_timeout,\n                                        MHD_DIGEST_ALG_MD5);\n}\n```\n</target_code>\nPlease find suspicious code fragments in the code and report them. Other agents can not investigate other fragments that you do not report, so it is very important to find all suspicious fragments without missing any. Report the suspicious fragments AS MUCH AS POSSIBLE.",
  "suspicious_frags": [
    "_MHD_EXTERN int"
  ],
  "explanation": "I only flagged the _MHD_EXTERN token because it is a macro name that commonly expands to compiler-specific storage-class/visibility attributes (for example __attribute__((...)) or __declspec(...)) which are explicit language extensions in many compiler documentations and therefore must be investigated. All other code in the snippet is standard C: the function definition and call, use of standard integer type uint8_t, the array-style parameter declaration digest[MHD_MD5_DIGEST_SIZE] (in a parameter list this is equivalent to a pointer and is standard C), the use of macro constants MHD_MD5_DIGEST_SIZE and MHD_DIGEST_ALG_MD5, and the parameter types/ordering do not by themselves indicate any compiler extension. Consequently they do not need investigation for Rule 1.2 based on the provided snippet."
}