{
  "user_message": "An agent A claimed that the following MHD_digest_auth_calc_userhash_hex code violates the MISRA C 2023 rule 21.17.\n<misra_rule>\nMISRA C 2023 Rule 21.17 is Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_digest_auth_calc_userhash_hex.\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_digest_auth_calc_userhash_hex (enum MHD_DigestAuthAlgo3 algo3,\n                                   const char *username,\n                                   const char *realm,\n                                   char *userhash_hex,\n                                   size_t hex_buf_size)\n{\n  uint8_t userhash_bin[MAX_DIGEST];\n  size_t digest_size;\n\n  digest_size = digest_get_hash_size (algo3);\n  if (digest_size * 2 + 1 > hex_buf_size)\n    return MHD_NO;\n  if (MHD_NO == MHD_digest_auth_calc_userhash (algo3, username, realm,\n                                               userhash_bin, MAX_DIGEST))\n    return MHD_NO;\n\n  MHD_bin_to_hex_z (userhash_bin, digest_size, userhash_hex);\n  return MHD_YES;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nPotential buffer overflow: userhash_bin is declared with size MAX_DIGEST but the code does not check that digest_size (obtained from digest_get_hash_size(algo3)) is <= MAX_DIGEST. If digest_size > MAX_DIGEST, the subsequent call MHD_digest_auth_calc_userhash(algo3, username, realm, userhash_bin, MAX_DIGEST) or later MHD_bin_to_hex_z(userhash_bin, digest_size, userhash_hex) could cause writes/reads beyond the userhash_bin bounds (e.g. via memcpy/memmove inside those functions), violating Rule 21.17.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct unless there is an external, documented invariant that digest_get_hash_size(algo3) can never exceed MAX_DIGEST. In this function there is no explicit check that digest_size <= MAX_DIGEST. Later MHD_bin_to_hex_z(userhash_bin, digest_size, ...) will read digest_size bytes from userhash_bin, which only has MAX_DIGEST bytes; if digest_size > MAX_DIGEST that is an out\u2011of\u2011bounds access (and if MHD_bin_to_hex_z or the prior call use memcpy/related <string.h> functions, that would violate MISRA C 2023 Rule 21.17). The code relies on an implicit contract (that digest_size <= MAX_DIGEST or that MHD_digest_auth_calc_userhash will detect and fail when the buffer is too small). If no such contract is guaranteed by the surrounding code/documentation, the reported violation is valid."
}