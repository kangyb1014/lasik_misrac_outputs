{
  "user_message": "An agent A claimed that the following MHD_digest_auth_calc_userhash_hex code violates the MISRA C 2023 rule 21.17.\n<misra_rule>\nMISRA C 2023 Rule 21.17 is Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<target_code>\nHere is the original code of MHD_digest_auth_calc_userhash_hex.\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_digest_auth_calc_userhash_hex (enum MHD_DigestAuthAlgo3 algo3,\n                                   const char *username,\n                                   const char *realm,\n                                   char *userhash_hex,\n                                   size_t hex_buf_size)\n{\n  uint8_t userhash_bin[MAX_DIGEST];\n  size_t digest_size;\n\n  digest_size = digest_get_hash_size (algo3);\n  if (digest_size * 2 + 1 > hex_buf_size)\n    return MHD_NO;\n  if (MHD_NO == MHD_digest_auth_calc_userhash (algo3, username, realm,\n                                               userhash_bin, MAX_DIGEST))\n    return MHD_NO;\n\n  MHD_bin_to_hex_z (userhash_bin, digest_size, userhash_hex);\n  return MHD_YES;\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nIf digest_get_hash_size(algo3) can return a value greater than MAX_DIGEST (for example an algorithm producing 64 bytes while MAX_DIGEST is 32), then the call to MHD_digest_auth_calc_userhash(userhash_bin, MAX_DIGEST) may result in that function writing more than MAX_DIGEST bytes into userhash_bin (likely via memcpy/memmove inside), causing an out\u2011of\u2011bounds access. The code does not check that the computed digest size fits within MAX_DIGEST before calling, so a buffer overflow scenario can occur.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The report is correct as a potential MISRA 21.17 violation. The function computes digest_size = digest_get_hash_size(algo3) but never checks that digest_size <= MAX_DIGEST before calling MHD_digest_auth_calc_userhash(..., userhash_bin, MAX_DIGEST). If digest_get_hash_size can return a value greater than MAX_DIGEST, the callee may write digest_size bytes into userhash_bin (for example via memcpy/memmove inside the digest routine), causing an out\u2011of\u2011bounds write. MISRA C 2023 Rule 21.17 forbids such uses of string/memory functions that can access beyond object bounds. Note: if the implementation/spec of digest_get_hash_size and MHD_digest_auth_calc_userhash provide a documented/invariant guarantee that digest_size will never exceed MAX_DIGEST (and the callee respects the provided buffer size), then there is no violation; but absent such a documented guarantee or an explicit check in this function, the code as written is potentially non\u2011compliant and the report is justified."
}