{
  "user_message": "An agent A claimed that the following MHD_run_from_select code violates the MISRA C 2023 rule 8.13.\n<misra_rule>\nMISRA C 2023 Rule 8.13 is A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<target_code>\nHere is the original code of MHD_run_from_select.\n```c\n_MHD_EXTERN enum MHD_Result\nMHD_run_from_select (struct MHD_Daemon *daemon,\n                     const fd_set *read_fd_set,\n                     const fd_set *write_fd_set,\n                     const fd_set *except_fd_set)\n{\n  return MHD_run_from_select2 (daemon,\n                               read_fd_set,\n                               write_fd_set,\n                               except_fd_set,\n#ifdef HAS_FD_SETSIZE_OVERRIDABLE\n                               daemon->fdset_size_set_by_app ?\n                               ((unsigned int) daemon->fdset_size) :\n                               ((unsigned int) _MHD_SYS_DEFAULT_FD_SETSIZE)\n#else  /* ! HAS_FD_SETSIZE_OVERRIDABLE */\n                               ((unsigned int) _MHD_SYS_DEFAULT_FD_SETSIZE)\n#endif /* ! HAS_FD_SETSIZE_OVERRIDABLE */\n                               );\n}\n```\n</target_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false). True means there is a violation.\n</response format>\n<scenario>\nThe agent A provided the following violation scenario:\nThe function parameter 'struct MHD_Daemon *daemon' is not const-qualified even though the function only reads fields from it (daemon->fdset_size_set_by_app and daemon->fdset_size) and forwards it to MHD_run_from_select2. If neither MHD_run_from_select nor the callee modify the pointed-to object, the parameter should be declared 'const struct MHD_Daemon *daemon'.\n</scenario>\n\n<instruction>\nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": false,
  "explanation": "The report is not sufficiently supported. MISRA Rule 8.13 recommends that pointers point to const-qualified types when possible, but whether the rule is violated here depends on the wider context \u2014 in particular the signature and usage of MHD_run_from_select2 and the public API constraints. The shown function only reads fields from daemon and forwards the same pointer to MHD_run_from_select2. If MHD_run_from_select2 (or other callers) requires a non-const struct MHD_Daemon * (i.e. may modify it or the API was designed as non-const), the parameter in this wrapper cannot be changed to const without changing the callee/API or performing an unsafe cast. The agent's claim assumes that neither this function nor MHD_run_from_select2 ever modify the object, but that assumption is not proven by the snippet. Without inspecting MHD_run_from_select2 and the public API, you cannot conclude a definite Rule 8.13 violation. Therefore the report as given is not correct."
}