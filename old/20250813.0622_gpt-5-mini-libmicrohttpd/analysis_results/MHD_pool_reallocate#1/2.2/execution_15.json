{
  "result": "success",
  "message": "MHD_pool_reallocate ENTRY: pool=0x564dfcac9ae0, old=(nil), old_size=0, new_size=32576, pool->pos=64, pool->end=32640, pool->size=32768\nassert check: pool->end >= pool->pos => 1\nassert check: pool->size >= pool->end - pool->pos => 1\nassert check: old != NULL || old_size == 0 => 1\nassert check: pool->size >= old_size => 1\nassert check: pool->pos == ROUND_TO_ALIGN(pool->pos) => 1\nALLOCATE PATH: asize=32576, pool->pos=64, pool->end=32640, pool->end - pool->pos=32576\nALLOCATED new block: returning new_blc=0x564dfcac9b50, new_size=32576, updated pool->pos=32640\nMHD_pool_reallocate ENTRY: pool=0x564dfcac9ae0, old=(nil), old_size=0, new_size=32576, pool->pos=64, pool->end=32640, pool->size=32768\nassert check: pool->end >= pool->pos => 1\nassert check: pool->size >= pool->end - pool->pos => 1\nassert check: old != NULL || old_size == 0 => 1\nassert check: pool->size >= old_size => 1\nassert check: pool->pos == ROUND_TO_ALIGN(pool->pos) => 1\nALLOCATE PATH: asize=32576, pool->pos=64, pool->end=32640, pool->end - pool->pos=32576\nALLOCATED new block: returning new_blc=0x564dfcac9b50, new_size=32576, updated pool->pos=32640\nMHD_pool_reallocate ENTRY: pool=0x564dfcac9ae0, old=(nil), old_size=0, new_size=32576, pool->pos=64, pool->end=32640, pool->size=32768\nassert check: pool->end >= pool->pos => 1\nassert check: pool->size >= pool->end - pool->pos => 1\nassert check: old != NULL || old_size == 0 => 1\nassert check: pool->size >= old_size => 1\nassert check: pool->pos == ROUND_TO_ALIGN(pool->pos) => 1\nALLOCATE PATH: asize=32576, pool->pos=64, pool->end=32640, pool->end - pool->pos=32576\nALLOCATED new block: returning new_blc=0x564dfcad2f70, new_size=32576, updated pool->pos=32640\nMHD_pool_reallocate ENTRY: pool=0x7f2dec000de0, old=(nil), old_size=0, new_size=32576, pool->pos=64, pool->end=32640, pool->size=32768\nassert check: pool->end >= pool->pos => 1\nassert check: pool->size >= pool->end - pool->pos => 1\nassert check: old != NULL || old_size == 0 => 1\nassert check: pool->size >= old_size => 1\nassert check: pool->pos == ROUND_TO_ALIGN(pool->pos) => 1\nALLOCATE PATH: asize=32576, pool->pos=64, pool->end=32640, pool->end - pool->pos=32576\nALLOCATED new block: returning new_blc=0x7f2dec000e50, new_size=32576, updated pool->pos=32640\nMHD_pool_reallocate ENTRY: pool=0x7f2dec000de0, old=(nil), old_size=0, new_size=32576, pool->pos=64, pool->end=32640, pool->size=32768\nassert check: pool->end >= pool->pos => 1\nassert check: pool->size >= pool->end - pool->pos => 1\nassert check: old != NULL || old_size == 0 => 1\nassert check: pool->size >= old_size => 1\nassert check: pool->pos == ROUND_TO_ALIGN(pool->pos) => 1\nALLOCATE PATH: asize=32576, pool->pos=64, pool->end=32640, pool->end - pool->pos=32576\nALLOCATED new block: returning new_blc=0x7f2dec000e50, new_size=32576, updated pool->pos=32640\nMHD_pool_reallocate ENTRY: pool=0x7f2dec000de0, old=(nil), old_size=0, new_size=32576, pool->pos=64, pool->end=32640, pool->size=32768\nassert check: pool->end >= pool->pos => 1\nassert check: pool->size >= pool->end - pool->pos => 1\nassert check: old != NULL || old_size == 0 => 1\nassert check: pool->size >= old_size => 1\nassert check: pool->pos == ROUND_TO_ALIGN(pool->pos) => 1\nALLOCATE PATH: asize=32576, pool->pos=64, pool->end=32640, pool->end - pool->pos=32576\nALLOCATED new block: returning new_blc=0x7f2dec000e50, new_size=32576, updated pool->pos=32640\nMHD_pool_reallocate ENTRY: pool=0x7f2dec000de0, old=(nil), old_size=0, new_size=32576, pool->pos=64, pool->end=32640, pool->size=32768\nassert check: pool->end >= pool->pos => 1\nassert check: pool->size >= pool->end - pool->pos => 1\nassert check: old != NULL || old_size == 0 => 1\nassert check: pool->size >= old_size => 1\nassert check: pool->pos == ROUND_TO_ALIGN(pool->pos) => 1\nALLOCATE PATH: asize=32576, pool->pos=64, pool->end=32640, pool->end - pool->pos=32576\nALLOCATED new block: returning new_blc=0x7f2dec000e50, new_size=32576, updated pool->pos=32640\nMHD_pool_reallocate ENTRY: pool=0x7f2df0000cd0, old=(nil), old_size=0, new_size=32576, pool->pos=64, pool->end=32640, pool->size=32768\nassert check: pool->end >= "
}