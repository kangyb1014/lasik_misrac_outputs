{
  "user_message": "An agent A claimed that the following is_websocket_request code violates the MISRA C 2023 rule 2.2.\n<misra_rule>\nMISRA C 2023 Rule 2.2 is A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code..\n</misra_rule>\n<target_code>\nHere is the original code of is_websocket_request.\n```c\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n\n  (void) con;  /* Unused. Silent compiler warning. */\n\n  return ((upg_header != NULL) && (con_header != NULL)\n          && (0 == strcmp (upg_header, WS_UPGRADE_VALUE))\n          && (NULL != strstr (con_header, \"Upgrade\")))\n         ? MHD_YES\n         : MHD_NO;\n}\n```\n</target_code>\n<scenario>\nThe agent A provided the following violation scenario:The statement '(void) con;' in is_websocket_request is a no-op expression statement used only to silence an \"unused parameter\" warning. It has no side-effects and removing it would not change program behaviour, so it constitutes dead code under Rule 2.2.\n</scenario>\n<test_code>\nAlso, the agent A provided the following modified code that prints out the log to support their scenario:\n```c\nstatic void probe_log_ws(const char *label,\n                         struct MHD_Connection *con,\n                         const char *upg_header,\n                         const char *con_header,\n                         int decision)\n{\n  FILE *f = fopen(\"/tmp/logs/482.txt\", \"a\");\n  if (f == NULL)\n    return;\n\n  fprintf(f, \"[%s] enter: con=%p, upg_header=%s, con_header=%s\\n\",\n          label,\n          (void *) con,\n          upg_header ? upg_header : \"(null)\",\n          con_header ? con_header : \"(null)\");\n\n  /* Record which parts were used to determine the result. Note: 'con' is\n     not used in the decision below (this is the point of the reported\n     violation). */\n  int upg_nonnull = (upg_header != NULL);\n  int conhdr_nonnull = (con_header != NULL);\n  int upg_cmp = (upg_nonnull && (0 == strcmp(upg_header, WS_UPGRADE_VALUE)));\n  int con_contains_upgrade = (conhdr_nonnull && (NULL != strstr(con_header, \"Upgrade\")));\n\n  fprintf(f, \"[%s] computed: upg_nonnull=%d, conhdr_nonnull=%d, upg_cmp=%d, con_contains_Upgrade=%d\\n\",\n          label,\n          upg_nonnull,\n          conhdr_nonnull,\n          upg_cmp,\n          con_contains_upgrade);\n\n  /* Explicitly note that the 'con' parameter is not used to compute the\n     return value (helps reproduce evidence that '(void) con;' is a no-op). */\n  fprintf(f, \"[%s] note: parameter 'con' is not used in decision computation\\n\", label);\n\n  fprintf(f, \"[%s] final_result=%s\\n\", label, decision ? \"MHD_YES\" : \"MHD_NO\");\n  fclose(f);\n}\n\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n  (void) con;  /* Unused. Silent compiler warning. */\n\n  /* Preserve original logic as much as possible while adding probes. */\n  int upg_nonnull = (upg_header != NULL);\n  int conhdr_nonnull = (con_header != NULL);\n  int upg_cmp = (upg_nonnull && (0 == strcmp(upg_header, WS_UPGRADE_VALUE)));\n  int con_contains_upgrade = (conhdr_nonnull && (NULL != strstr(con_header, \"Upgrade\")));\n\n  int decision = (upg_nonnull && conhdr_nonnull && upg_cmp && con_contains_upgrade) ? 1 : 0;\n\n  /* Log control path and state so other agents can reproduce evidence that\n     '(void) con;' is a no-op expression statement and that 'con' is not used\n     in the decision computation. */\n  probe_log_ws(\"is_websocket_request\", con, upg_header, con_header, decision);\n\n  return decision ? MHD_YES : MHD_NO;\n}\n\n```\nThe test code was compiled successfully, but the test log is empty for is_websocket_request. The test suite might not cover this function or the test code might be not suitable to print important information.\n</test_code>\n<response format>\nProvide your answer with these fields.\n- explanation: your evaluation of the scenario provided by the agent A.\n- is_report_correct: whether the report is correct or not (true/false)\n</response format>\n<instruction>   \nJudge whether the report is correct or not.\n</instruction>\n",
  "is_report_correct": true,
  "explanation": "The agent A report is correct. The statement \u201c(void) con;\u201d is an executed no\u2011op expression statement that has no side effects; removing it would not change the program\u2019s runtime behaviour. By the rule\u2019s own definition (\u201cAny operation that is executed but whose removal would not affect program behaviour constitutes dead code\u201d), that statement is dead code and therefore falls foul of MISRA C 2023 Rule 2.2. (The test harness and probe code do not change this fact; the absence of logging only shows the function may not have been exercised during the test run.)\n\nIf the intent is only to suppress a compiler warning about an unused parameter, prefer one of the compliant options: remove the unused parameter from the function signature, omit the parameter name in the definition, use a documented compiler\u2011specific attribute for an unused parameter, or apply an accepted project deviation for the suppression idiom rather than leaving a no\u2011op expression in production code."
}