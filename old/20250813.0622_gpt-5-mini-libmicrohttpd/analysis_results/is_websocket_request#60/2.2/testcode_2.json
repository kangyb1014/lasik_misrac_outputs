{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n\nAnother agent reported that the target code violated the Rule 2.2.\nHere is the comment from the agent.\n<violation scenario>\nThe statement '(void) con;' in is_websocket_request is a no-op expression statement used only to silence an \"unused parameter\" warning. It has no side-effects and removing it would not change program behaviour, so it constitutes dead code under Rule 2.2.\n</violation scenario>\n\nYour job is to insert logging code to capture the control flow and state information of the program.\nInsert logging code so that other agents can reproduce and get evidence for the violation scenario.\n<response format>\n- test_code: a modified is_websocket_request code that contains useful probe functions that print useful logs to a file \"/tmp/logs/482.txt\". The logs should contain the control path and state information of the violation scenario. If test code is not required to validate the scenario, you can leave this blank.\nHere are the constraints for the test code:\n- The test code MUST preserve the original logic of is_websocket_request as much as possible.\nYou CAN just insert probe functions to the original code.\n- DO NOT introduce new violations to demonstrate your scenario.\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- You MUST NOT define the main function.\n- You MUST NOT define macros.\n</response format>\n<target_code>\nHere is the code of is_websocket_request:\n```c\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n\n  (void) con;  /* Unused. Silent compiler warning. */\n\n  return ((upg_header != NULL) && (con_header != NULL)\n          && (0 == strcmp (upg_header, WS_UPGRADE_VALUE))\n          && (NULL != strstr (con_header, \"Upgrade\")))\n         ? MHD_YES\n         : MHD_NO;\n}\n```\n</target_code>\nPlease provide the modified is_websocket_request code.\n",
  "test_code": "#include <stdio.h>\n#include <string.h>\n\n/* Probe function: logs control flow and state to /tmp/logs/482.txt. */\nstatic void probe_log_ws(const char *label,\n                         struct MHD_Connection *con,\n                         const char *upg_header,\n                         const char *con_header,\n                         int decision)\n{\n  FILE *f = fopen(\"/tmp/logs/482.txt\", \"a\");\n  if (f == NULL)\n    return;\n\n  fprintf(f, \"[%s] enter: con=%p, upg_header=%s, con_header=%s\\n\",\n          label,\n          (void *) con,\n          upg_header ? upg_header : \"(null)\",\n          con_header ? con_header : \"(null)\");\n\n  /* Record which parts were used to determine the result. Note: 'con' is\n     not used in the decision below (this is the point of the reported\n     violation). */\n  int upg_nonnull = (upg_header != NULL);\n  int conhdr_nonnull = (con_header != NULL);\n  int upg_cmp = (upg_nonnull && (0 == strcmp(upg_header, WS_UPGRADE_VALUE)));\n  int con_contains_upgrade = (conhdr_nonnull && (NULL != strstr(con_header, \"Upgrade\")));\n\n  fprintf(f, \"[%s] computed: upg_nonnull=%d, conhdr_nonnull=%d, upg_cmp=%d, con_contains_Upgrade=%d\\n\",\n          label,\n          upg_nonnull,\n          conhdr_nonnull,\n          upg_cmp,\n          con_contains_upgrade);\n\n  /* Explicitly note that the 'con' parameter is not used to compute the\n     return value (helps reproduce evidence that '(void) con;' is a no-op). */\n  fprintf(f, \"[%s] note: parameter 'con' is not used in decision computation\\n\", label);\n\n  fprintf(f, \"[%s] final_result=%s\\n\", label, decision ? \"MHD_YES\" : \"MHD_NO\");\n  fclose(f);\n}\n\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n  (void) con;  /* Unused. Silent compiler warning. */\n\n  /* Preserve original logic as much as possible while adding probes. */\n  int upg_nonnull = (upg_header != NULL);\n  int conhdr_nonnull = (con_header != NULL);\n  int upg_cmp = (upg_nonnull && (0 == strcmp(upg_header, WS_UPGRADE_VALUE)));\n  int con_contains_upgrade = (conhdr_nonnull && (NULL != strstr(con_header, \"Upgrade\")));\n\n  int decision = (upg_nonnull && conhdr_nonnull && upg_cmp && con_contains_upgrade) ? 1 : 0;\n\n  /* Log control path and state so other agents can reproduce evidence that\n     '(void) con;' is a no-op expression statement and that 'con' is not used\n     in the decision computation. */\n  probe_log_ws(\"is_websocket_request\", con, upg_header, con_header, decision);\n\n  return decision ? MHD_YES : MHD_NO;\n}\n"
}