{
  "result": "success",
  "message": "ENTER add_response_entry_n: response=0x5647a43f92a0 kind=1 header=0x564793d3e0b9 header_len=13 content=0x564793d3e0b0 content_len=8\nCHECK: memchr(header, '\\t', 13) with header=0x564793d3e0b9\nRESULT: memchr(header, '\\t') -> (nil)\nCHECK: memchr(header, ' ', 13) with header=0x564793d3e0b9\nRESULT: memchr(header, ' ') -> (nil)\nCHECK: memchr(header, '\\r', 13) with header=0x564793d3e0b9\nRESULT: memchr(header, '\\r') -> (nil)\nCHECK: memchr(header, '\\n', 13) with header=0x564793d3e0b9\nRESULT: memchr(header, '\\n') -> (nil)\nCHECK: memchr(content, '\\r', 8) with content=0x564793d3e0b0\nRESULT: memchr(content, '\\r') -> (nil)\nCHECK: memchr(content, '\\n', 8) with content=0x564793d3e0b0\nRESULT: memchr(content, '\\n') -> (nil)\nALL CHECKS PASSED -> calling MHD_add_response_entry_no_check_()\nMHD_add_response_entry_no_check_ returned 1\nENTER add_response_entry_n: response=0x5647a43f92a0 kind=1 header=0x564793d3e0b9 header_len=13 content=0x564793d3e0de content_len=8\nCHECK: memchr(header, '\\t', 13) with header=0x564793d3e0b9\nRESULT: memchr(header, '\\t') -> (nil)\nCHECK: memchr(header, ' ', 13) with header=0x564793d3e0b9\nRESULT: memchr(header, ' ') -> (nil)\nCHECK: memchr(header, '\\r', 13) with header=0x564793d3e0b9\nRESULT: memchr(header, '\\r') -> (nil)\nCHECK: memchr(header, '\\n', 13) with header=0x564793d3e0b9\nRESULT: memchr(header, '\\n') -> (nil)\nCHECK: memchr(content, '\\r', 8) with content=0x564793d3e0de\nRESULT: memchr(content, '\\r') -> (nil)\nCHECK: memchr(content, '\\n', 8) with content=0x564793d3e0de\nRESULT: memchr(content, '\\n') -> (nil)\nALL CHECKS PASSED -> calling MHD_add_response_entry_no_check_()\nMHD_add_response_entry_no_check_ returned 1\nENTER add_response_entry_n: response=0x5647a43f92a0 kind=1 header=0x564793d3e0b9 header_len=13 content=0x564793d3e118 content_len=8\nCHECK: memchr(header, '\\t', 13) with header=0x564793d3e0b9\nRESULT: memchr(header, '\\t') -> (nil)\nCHECK: memchr(header, ' ', 13) with header=0x564793d3e0b9\nRESULT: memchr(header, ' ') -> (nil)\nCHECK: memchr(header, '\\r', 13) with header=0x564793d3e0b9\nRESULT: memchr(header, '\\r') -> (nil)\nCHECK: memchr(header, '\\n', 13) with header=0x564793d3e0b9\nRESULT: memchr(header, '\\n') -> (nil)\nCHECK: memchr(content, '\\r', 8) with content=0x564793d3e118\nRESULT: memchr(content, '\\r') -> (nil)\nCHECK: memchr(content, '\\n', 8) with content=0x564793d3e118\nRESULT: memchr(content, '\\n') -> (nil)\nALL CHECKS PASSED -> calling MHD_add_response_entry_no_check_()\nMHD_add_response_entry_no_check_ returned 1\nENTER add_response_entry_n: response=0x5647a43f92a0 kind=1 header=0x564793d3eb9b header_len=4 content=0x564793d3eb7d content_len=29\nCHECK: memchr(header, '\\t', 4) with header=0x564793d3eb9b\nRESULT: memchr(header, '\\t') -> (nil)\nCHECK: memchr(header, ' ', 4) with header=0x564793d3eb9b\nRESULT: memchr(header, ' ') -> (nil)\nCHECK: memchr(header, '\\r', 4) with header=0x564793d3eb9b\nRESULT: memchr(header, '\\r') -> (nil)\nCHECK: memchr(header, '\\n', 4) with header=0x564793d3eb9b\nRESULT: memchr(header, '\\n') -> (nil)\nCHECK: memchr(content, '\\r', 29) with content=0x564793d3eb7d\nRESULT: memchr(content, '\\r') -> (nil)\nCHECK: memchr(content, '\\n', 29) with content=0x564793d3eb7d\nRESULT: memchr(content, '\\n') -> (nil)\nALL CHECKS PASSED -> calling MHD_add_response_entry_no_check_()\nMHD_add_response_entry_no_check_ returned 1\nENTER add_response_entry_n: response=0x5647a43f92a0 kind=1 header=0x564793d3eb9b header_len=4 content=0x564793d3ebe0 content_len=29\nCHECK: memchr(header, '\\t', 4) with header=0x564793d3eb9b\nRESULT: memchr(header, '\\t') -> (nil)\nCHECK: memchr(header, ' ', 4) with header=0x564793d3eb9b\nRESULT: memchr(header, ' ') -> (nil)\nCHECK: memchr(header, '\\r', 4) with header=0x564793d3eb9b\nRESULT: memchr(header, '\\r') -> (nil)\nCHECK: memchr(header, '\\n', 4) with header=0x564793d3eb9b\nRESULT: memchr(header, '\\n') -> (nil)\nCHECK: memchr(content, '\\r', 29) with content=0x564793d3ebe0\nRESULT: memchr(content, '\\r') -> (nil)\nCHECK: memchr(content, '\\n', 29) with content=0x564793d3ebe0\nRESULT: memchr(content, '\\n') -> (nil)\nALL CHECKS PASSED -> calling MHD_add_response_entry_no_check_()\nMHD_add_response_entry_n"
}