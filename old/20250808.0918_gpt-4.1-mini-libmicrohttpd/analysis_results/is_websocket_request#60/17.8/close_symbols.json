{
  "user_message": "Target function code is:\n```c\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n\n  (void) con;  /* Unused. Silent compiler warning. */\n\n  return ((upg_header != NULL) && (con_header != NULL)\n          && (0 == strcmp (upg_header, WS_UPGRADE_VALUE))\n          && (NULL != strstr (con_header, \"Upgrade\")))\n         ? MHD_YES\n         : MHD_NO;\n}\n```\n\nStatic call graph of the target function is:\n```json\n{'is_websocket_request': {'callees': [], 'callers': ['ahc_cb']}, 'ahc_cb': {'callees': ['MHD_lookup_connection_value', 'is_websocket_request', 'send_chat_page', 'send_bad_request', 'send_upgrade_required', 'MHD_lookup_connection_value_n', 'ws_get_accept_value', 'MHD_create_response_for_upgrade', 'MHD_add_response_header', 'MHD_destroy_response', 'MHD_queue_response'], 'callers': []}}\n```\n\n\nList additional symbols that are required to analyze the target function to determine if the target function code violates the following MISRA C rule:\nA function parameter should not be modified. Note that the object referred to by a pointer parameter may be modified, but the pointer itself shall not be modified.\nThe list will be included in the prompt for the next agent, so be concise and clear.\nExplain why each symbol is required in the analysis of the target function for the MISRA C rule.\n",
  "close_symbols": [
    "strcmp",
    "strstr",
    "WS_UPGRADE_VALUE",
    "MHD_YES",
    "MHD_NO"
  ],
  "explanation": "To analyze whether the target function violates the MISRA C rule about modification of function parameters, it is important to consider all operations involving the parameters 'upg_header' and 'con_header'. The function uses 'strcmp' and 'strstr' to compare strings referenced by these pointers, but these functions do not modify their arguments; understanding their behavior confirms no modification occurs. The macro or constant 'WS_UPGRADE_VALUE' is used in comparison with 'upg_header', so its definition is relevant to understand if any implicit modifications or casts may occur. The enumerated values 'MHD_YES' and 'MHD_NO' are return values and do not affect parameter modification, but including them clarifies the function's return path. There is no modification of the pointer parameters themselves; their usage is only to read data. Including these symbols ensures a comprehensive analysis of parameter usage in the function."
}