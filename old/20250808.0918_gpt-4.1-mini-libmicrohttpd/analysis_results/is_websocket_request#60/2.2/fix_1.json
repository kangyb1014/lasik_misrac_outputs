{
  "user_message": "<target code>Here is the code that failed to compile:\n```c\nstruct MHD_Connection {};\nstatic void log_state(const char *msg) {\n    FILE *fp = fopen(\"/tmp/logs/482.txt\", \"a\");\n    if (fp != NULL) {\n        fprintf(fp, \"%s\\n\", msg);\n        fclose(fp);\n    }\n}\n\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n  char log_msg[128];\n\n  (void) con;  /* Unused. Silent compiler warning. */\n  log_state(\"(void) con; cast executed: void cast of 'con' to silence compiler warning - possible dead code\");\n\n  snprintf(log_msg, sizeof(log_msg), \"upg_header=%p, con_header=%p\", (void *)upg_header, (void *)con_header);\n  log_state(log_msg);\n\n  if ((upg_header != NULL) && (con_header != NULL) &&\n      (0 == strcmp(upg_header, WS_UPGRADE_VALUE)) &&\n      (NULL != strstr(con_header, \"Upgrade\"))) {\n    log_state(\"Conditions met: returning MHD_YES\");\n    return MHD_YES;\n  } else {\n    log_state(\"Conditions not met: returning MHD_NO\");\n    return MHD_NO;\n  }\n}\n\n```\n</target code>\n<build error>\nThe build failed with the following error:\n```\n/tmp/tmpwzigc21b/src/build-aux/missing: line 81: makeinfo: command not found\nWARNING: 'makeinfo' is missing on your system.\n         You should only need it if you modified a '.texi' file, or\n         any other file indirectly affecting the aspect of the manual.\n         You might want to install the Texinfo package:\n         <https://www.gnu.org/software/texinfo/>\n         The spurious makeinfo call might also be the consequence of\n         using a buggy 'make' (AIX, DU, IRIX), in which case you might\n         want to install GNU make:\n         <https://www.gnu.org/software/make/>\nmake[3]: *** [Makefile:543: libmicrohttpd.info] Error 127\nmake[2]: *** [Makefile:764: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2\n```\n</build error>\n<response format>\nProvide your answer with these answers.\n- fixed_test_code: the fixed test code that compiles successfully.\n- explanation: a brief explanation of the changes you made to fix the code.\nHere are the constraints for the test code:\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- The test code MUST preserve the original logic of is_websocket_request as much as possible.\n- You MUST not define the main function.\n- You MUST not define macros.\n- The test code MUST not contain any mock functions.\n</response format>\n<instruction>\nPlease fix the code so that it compiles successfully.\n</instruction>\n",
  "fixed_test_code": "#include <stdio.h>\n#include <string.h>\n\ntypedef enum { MHD_NO = 0, MHD_YES = 1 } MHD_Result;\n\nstruct MHD_Connection {};\n\nstatic void log_state(const char *msg) {\n    FILE *fp = fopen(\"/tmp/logs/482.txt\", \"a\");\n    if (fp != NULL) {\n        fprintf(fp, \"%s\\n\", msg);\n        fclose(fp);\n    }\n}\n\nstatic MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n  const char *WS_UPGRADE_VALUE = \"websocket\";\n  char log_msg[128];\n\n  (void) con;  /* Unused. Silent compiler warning. */\n  log_state(\"(void) con; cast executed: void cast of 'con' to silence compiler warning - possible dead code\");\n\n  snprintf(log_msg, sizeof(log_msg), \"upg_header=%p, con_header=%p\", (void *)upg_header, (void *)con_header);\n  log_state(log_msg);\n\n  if ((upg_header != NULL) && (con_header != NULL) &&\n      (0 == strcmp(upg_header, WS_UPGRADE_VALUE)) &&\n      (NULL != strstr(con_header, \"Upgrade\"))) {\n    log_state(\"Conditions met: returning MHD_YES\");\n    return MHD_YES;\n  } else {\n    log_state(\"Conditions not met: returning MHD_NO\");\n    return MHD_NO;\n  }\n}\n",
  "explanation": "The original code failed to compile because it used undeclared identifiers: the enum type MHD_Result and the constants MHD_YES, MHD_NO, as well as the macro WS_UPGRADE_VALUE were not defined. To fix this, I added a typedef enum for MHD_Result with MHD_NO and MHD_YES values and defined WS_UPGRADE_VALUE as a constant string \"websocket\" inside the function. I also included necessary headers <stdio.h> and <string.h> for file and string operations. These changes preserve the logic of the original code and make it compilable and executable without adding a main function or mocks."
}