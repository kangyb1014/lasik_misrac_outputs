{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_set_panic_func:\n```c\n_MHD_EXTERN void\nMHD_set_panic_func (MHD_PanicCallback cb,\n                    void *cls)\n{\n  if ((MHD_PanicCallback) NULL != cb)\n    mhd_panic = cb;\n  else\n    mhd_panic = &mhd_panic_std;\n\n  mhd_panic_cls = cls;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nmhd_panic_cls = cls;\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": true,
  "scenario": "Assuming mhd_panic_cls is declared as 'void *' and the parameter 'cls' is 'void *' (as shown), the pointer is not const-qualified even though the function only stores the context pointer and does not modify the pointee. According to MISRA C 2023 Rule 8.13, the pointer should point to a const-qualified type whenever possible (e.g. use 'const void *cls' and 'const void *mhd_panic_cls'). Therefore this assignment 'mhd_panic_cls = cls;' violates Rule 8.13."
}