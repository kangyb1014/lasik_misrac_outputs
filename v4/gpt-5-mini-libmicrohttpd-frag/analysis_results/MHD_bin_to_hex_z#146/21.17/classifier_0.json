{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 21.17 is: Use of the string handling functions from <string.h> shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters.\nThis rule strictly applies to the Standard Library functions in <string.h> such as memcpy, memmove, memset, memcmp, strcpy, strncpy, strcat, strncat, strlen, and strspn.\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of MHD_bin_to_hex_z:\n```c\nsize_t\nMHD_bin_to_hex_z (const void *bin,\n                  size_t size,\n                  char *hex)\n{\n  size_t res;\n\n  res = MHD_bin_to_hex (bin, size, hex);\n  hex[res] = 0;\n\n  return res;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nres = MHD_bin_to_hex (bin, size, hex);\n```\nFocus on the above code fragment and judge whether it violates the rule 21.17 or not.\n</target_code>\n",
  "is_rule_violated": true,
  "scenario": "If MHD_bin_to_hex writes N characters into the buffer pointed to by hex (for example, converting size bytes to 2*size hex characters) and returns N without NUL-terminating, then MHD_bin_to_hex_z executes hex[res] = 0. If the caller provided a buffer of exactly N bytes (e.g. 2*size) with no extra space for the terminating NUL, that write is one past the end of the object and thus an out\u2011of\u2011bounds access. Because the fragment does not ensure the hex buffer has room for the terminating NUL, this can violate MISRA C 2023 Rule 21.17."
}