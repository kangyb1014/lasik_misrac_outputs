{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 8.13 is: A pointer should point to a const-qualified type whenever possible.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of OS_TimeBasePthreadEntry:\n```c\nstatic void *OS_TimeBasePthreadEntry(void *arg)\n{\n    OS_VoidPtrValueWrapper_t local_arg;\n\n    /* cppcheck-suppress unreadVariable // intentional use of other union member */\n    local_arg.opaque_arg = arg;\n    OS_TimeBase_CallbackThread(local_arg.id);\n\n    return NULL;\n}\n```\n</target_code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\nstatic void *OS_TimeBasePthreadEntry(void *arg)\n```\nFocus on the above code fragment and judge whether it violates the rule 8.13 or not.\n</target_code>\n",
  "is_rule_violated": true,
  "scenario": "The function parameter 'arg' is declared as void * but is used only as an input (it is stored into a local union member and used to extract an id; the function does not modify the pointee). Therefore the pointer could and should be declared const void *arg. As written the code accepts a non-const pointer and may require discarding a const qualifier elsewhere (assignment into a non-const union member), which violates MISRA C 2023 Rule 8.13."
}