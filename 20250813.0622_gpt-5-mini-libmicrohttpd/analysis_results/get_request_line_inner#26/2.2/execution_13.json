{
  "result": "success",
  "message": "[entry] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=0, proc_pos=0\n[before_asserts_initial] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=0, proc_pos=0\n[before_assert_method_or_receiving] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=0, proc_pos=0\n[after_assert_method_or_receiving] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=0, proc_pos=0\n[read_buffer_empty_return] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=0, proc_pos=0\n[entry] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=0\n[before_asserts_initial] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=0\n[before_assert_method_or_receiving] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=0\n[after_assert_method_or_receiving] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=0\n[skip_empty_lines_start] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=0\n[skip_empty_lines_done] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=0\n[state_set_receiving] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=0\n[end_not_enough_data] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=1\n[entry] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=1\n[before_asserts_initial] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=1\n[before_assert_method_or_receiving] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=1\n[after_assert_method_or_receiving] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=1\n[state_set_receiving] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=1\n[end_not_enough_data] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=1, proc_pos=1\n[entry] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=0, proc_pos=0\n[before_asserts_initial] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=0, proc_pos=0\n[before_assert_method_or_receiving] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=0, proc_pos=0\n[after_assert_method_or_receiving] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=0, proc_pos=0\n[read_buffer_empty_return] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=0, proc_pos=0\n[entry] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=2, proc_pos=0\n[before_asserts_initial] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=2, proc_pos=0\n[before_assert_method_or_receiving] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=2, proc_pos=0\n[after_assert_method_or_receiving] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=2, proc_pos=0\n[skip_empty_lines_start] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=2, proc_pos=0\n[skip_empty_lines_done] state=0, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=2, proc_pos=0\n[state_set_receiving] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=2, proc_pos=0\n[end_not_enough_data] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=2, proc_pos=2\n[entry] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=2, proc_pos=2\n[before_asserts_initial] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=2, proc_pos=2\n[before_assert_method_or_receiving] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offset=2, proc_pos=2\n[after_assert_method_or_receiving] state=1, rq.method=(nil), rq.url=(nil), rq.http_mthd=0, read_buffer_offse"
}