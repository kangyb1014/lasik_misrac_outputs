{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.2 is: A project shall not contain dead code.\nAny operation that is executed but whose removal would not affect program behaviour constitutes dead code. Notes:\n1. The behaviour of an embedded sytem is often determined not just by the nature of its actions, but also by the time at which they occur.\n2. unreachable code is not dead code, as it cannot be executed.\n3.Initialization is not the same as an assignment operation and is therfore not a candidate for dead code.\n</misra_rule>\n\nAnother agent reported that the target code violated the Rule 2.2.\nHere is the comment from the agent.\n<violation scenario>\nIn ahc_cb the statement \u201c(void) upload_data_size;\u201d is an expression statement with no side\u2011effects whose removal would not affect program behaviour (it only suppresses an unused\u2011parameter warning). According to Rule 2.2 this is dead code and therefore violates the rule.\n</violation scenario>\n\nYour job is to insert logging code to capture the control flow and state information of the program.\nInsert logging code so that other agents can reproduce and get evidence for the violation scenario.\n<response format>\n- test_code: a modified is_websocket_request code that contains useful probe functions that print useful logs to a file \"/tmp/logs/482.txt\". The logs should contain the control path and state information of the violation scenario. If test code is not required to validate the scenario, you can leave this blank.\nHere are the constraints for the test code:\n- The test code MUST preserve the original logic of is_websocket_request as much as possible.\nYou CAN just insert probe functions to the original code.\n- DO NOT introduce new violations to demonstrate your scenario.\n- The test code MUST be compilable and executable.\n- The test code MUST include line breaks.\n- You MUST NOT define the main function.\n- You MUST NOT define macros.\n</response format>\n<target_code>\nHere is the code of is_websocket_request:\n```c\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n\n  (void) con;  /* Unused. Silent compiler warning. */\n\n  return ((upg_header != NULL) && (con_header != NULL)\n          && (0 == strcmp (upg_header, WS_UPGRADE_VALUE))\n          && (NULL != strstr (con_header, \"Upgrade\")))\n         ? MHD_YES\n         : MHD_NO;\n}\n```\n</target_code>\nPlease provide the modified is_websocket_request code.\n",
  "test_code": "#include <stdio.h>\n#include <string.h>\n\n/* Probe writer: append diagnostic logs describing the call and decision\n * to /tmp/logs/482.txt. This preserves the original logic while\n * recording control flow and state needed to reproduce the scenario.\n */\nstatic void is_websocket_log_probe(const struct MHD_Connection *con,\n                                   const char *upg_header,\n                                   const char *con_header,\n                                   int is_ws)\n{\n    FILE *f = fopen(\"/tmp/logs/482.txt\", \"a\");\n    if (f == NULL) {\n        return; /* best-effort logging; do not affect program flow */\n    }\n\n    fprintf(f, \"is_websocket_request ENTER: con=%p, upg_header=%p, con_header=%p\\n\",\n            (const void *)con, (const void *)upg_header, (const void *)con_header);\n    fprintf(f, \"is_websocket_request STRINGS: upg_header=\\\"%s\\\", con_header=\\\"%s\\\"\\n\",\n            upg_header ? upg_header : \"(NULL)\", con_header ? con_header : \"(NULL)\");\n    fprintf(f, \"is_websocket_request DECISION: is_websocket=%d\\n---\\n\", is_ws);\n    fclose(f);\n}\n\nstatic enum MHD_Result\nis_websocket_request (struct MHD_Connection *con, const char *upg_header,\n                      const char *con_header)\n{\n  /* Preserve original behavior while logging inputs and the branch taken.\n   * Note: (void) con; removed because the probe uses the parameter for logging.\n   */\n\n  int is_ws = ((upg_header != NULL) && (con_header != NULL)\n               && (0 == strcmp (upg_header, WS_UPGRADE_VALUE))\n               && (NULL != strstr (con_header, \"Upgrade\")))\n              ? 1 : 0;\n\n  /* Log parameters and the computed decision so other agents can reproduce\n   * and gather evidence for the reported violation scenario. */\n  is_websocket_log_probe(con, upg_header, con_header, is_ws);\n\n  return is_ws ? MHD_YES : MHD_NO;\n}\n"
}