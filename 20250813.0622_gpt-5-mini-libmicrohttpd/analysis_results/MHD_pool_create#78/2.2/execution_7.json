{
  "result": "success",
  "message": "MHD_pool_create: entry max=32768\nafter alloc_size=0, alloc_size=0\nafter malloc pool=0x555deb6450b0\nchoose not to mmap: max=32768 memory=MAP_FAILED\nfallback malloc alloc_size=32768 memory=0x555deb6450e0 is_mmap=false\nbefore final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb6450e0 pos=0 end=32768 size=32768 is_mmap=0\nabout to execute: mhd_assert(0 < alloc_size)\nafter final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb6450e0 pos=0 end=32768 size=32768 is_mmap=0\nnote: if mhd_assert is defined as ((void)0) this call is a no-op and its removal would not change behavior\nMHD_pool_create: entry max=32768\nafter alloc_size=0, alloc_size=0\nafter malloc pool=0x555deb6450b0\nchoose not to mmap: max=32768 memory=MAP_FAILED\nfallback malloc alloc_size=32768 memory=0x555deb646340 is_mmap=false\nbefore final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb646340 pos=0 end=32768 size=32768 is_mmap=0\nabout to execute: mhd_assert(0 < alloc_size)\nafter final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb646340 pos=0 end=32768 size=32768 is_mmap=0\nnote: if mhd_assert is defined as ((void)0) this call is a no-op and its removal would not change behavior\nMHD_pool_create: entry max=32768\nafter alloc_size=0, alloc_size=0\nafter malloc pool=0x555deb6450b0\nchoose not to mmap: max=32768 memory=MAP_FAILED\nfallback malloc alloc_size=32768 memory=0x555deb646590 is_mmap=false\nbefore final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb646590 pos=0 end=32768 size=32768 is_mmap=0\nabout to execute: mhd_assert(0 < alloc_size)\nafter final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb646590 pos=0 end=32768 size=32768 is_mmap=0\nnote: if mhd_assert is defined as ((void)0) this call is a no-op and its removal would not change behavior\nMHD_pool_create: entry max=32768\nafter alloc_size=0, alloc_size=0\nafter malloc pool=0x555deb6450b0\nchoose not to mmap: max=32768 memory=MAP_FAILED\nfallback malloc alloc_size=32768 memory=0x555deb6467e0 is_mmap=false\nbefore final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb6467e0 pos=0 end=32768 size=32768 is_mmap=0\nabout to execute: mhd_assert(0 < alloc_size)\nafter final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb6467e0 pos=0 end=32768 size=32768 is_mmap=0\nnote: if mhd_assert is defined as ((void)0) this call is a no-op and its removal would not change behavior\nMHD_pool_create: entry max=32768\nafter alloc_size=0, alloc_size=0\nafter malloc pool=0x555deb6450b0\nchoose not to mmap: max=32768 memory=MAP_FAILED\nfallback malloc alloc_size=32768 memory=0x555deb646a30 is_mmap=false\nbefore final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb646a30 pos=0 end=32768 size=32768 is_mmap=0\nabout to execute: mhd_assert(0 < alloc_size)\nafter final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb646a30 pos=0 end=32768 size=32768 is_mmap=0\nnote: if mhd_assert is defined as ((void)0) this call is a no-op and its removal would not change behavior\nMHD_pool_create: entry max=32768\nafter alloc_size=0, alloc_size=0\nafter malloc pool=0x555deb6450b0\nchoose not to mmap: max=32768 memory=MAP_FAILED\nfallback malloc alloc_size=32768 memory=0x555deb646c80 is_mmap=false\nbefore final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb646c80 pos=0 end=32768 size=32768 is_mmap=0\nabout to execute: mhd_assert(0 < alloc_size)\nafter final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb646c80 pos=0 end=32768 size=32768 is_mmap=0\nnote: if mhd_assert is defined as ((void)0) this call is a no-op and its removal would not change behavior\nMHD_pool_create: entry max=32768\nafter alloc_size=0, alloc_size=0\nafter malloc pool=0x555deb6450b0\nchoose not to mmap: max=32768 memory=MAP_FAILED\nfallback malloc alloc_size=32768 memory=0x555deb646ed0 is_mmap=false\nbefore final mhd_assert: alloc_size=32768 pool=0x555deb6450b0 memory=0x555deb646ed0 pos=0 end=32768 size=32768 is_mmap=0\nabout to execute: mhd_assert(0 < alloc_size)\nafter final mhd_assert: alloc_size=32768 pool=0x555deb6450b0"
}