{
  "result": "success",
  "message": "ENTER MHD_pool_create: max=32768\nmalloc(sizeof(struct MemoryPool)) => pool=0x558d722f90b0\nbranch: small allocation or < 4/3 page, set pool->memory = MAP_FAILED\npool->memory == MAP_FAILED, falling back to malloc\nROUND_TO_ALIGN(max) => alloc_size=32768\nmalloc(32768) for pool->memory => 0x558d722f90e0\nused malloc fallback, pool->is_mmap=false\npool final state: pos=0, end=32768, size=32768, memory=0x558d722f90e0\nEXIT MHD_pool_create returning pool=0x558d722f90b0\nENTER MHD_pool_create: max=32768\nmalloc(sizeof(struct MemoryPool)) => pool=0x558d722f90b0\nbranch: small allocation or < 4/3 page, set pool->memory = MAP_FAILED\npool->memory == MAP_FAILED, falling back to malloc\nROUND_TO_ALIGN(max) => alloc_size=32768\nmalloc(32768) for pool->memory => 0x558d722fa340\nused malloc fallback, pool->is_mmap=false\npool final state: pos=0, end=32768, size=32768, memory=0x558d722fa340\nEXIT MHD_pool_create returning pool=0x558d722f90b0\nENTER MHD_pool_create: max=32768\nmalloc(sizeof(struct MemoryPool)) => pool=0x558d722f90b0\nbranch: small allocation or < 4/3 page, set pool->memory = MAP_FAILED\npool->memory == MAP_FAILED, falling back to malloc\nROUND_TO_ALIGN(max) => alloc_size=32768\nmalloc(32768) for pool->memory => 0x558d722fa590\nused malloc fallback, pool->is_mmap=false\npool final state: pos=0, end=32768, size=32768, memory=0x558d722fa590\nEXIT MHD_pool_create returning pool=0x558d722f90b0\nENTER MHD_pool_create: max=32768\nmalloc(sizeof(struct MemoryPool)) => pool=0x558d722f90b0\nbranch: small allocation or < 4/3 page, set pool->memory = MAP_FAILED\npool->memory == MAP_FAILED, falling back to malloc\nROUND_TO_ALIGN(max) => alloc_size=32768\nmalloc(32768) for pool->memory => 0x558d722fa7e0\nused malloc fallback, pool->is_mmap=false\npool final state: pos=0, end=32768, size=32768, memory=0x558d722fa7e0\nEXIT MHD_pool_create returning pool=0x558d722f90b0\nENTER MHD_pool_create: max=32768\nmalloc(sizeof(struct MemoryPool)) => pool=0x558d722f90b0\nbranch: small allocation or < 4/3 page, set pool->memory = MAP_FAILED\npool->memory == MAP_FAILED, falling back to malloc\nROUND_TO_ALIGN(max) => alloc_size=32768\nmalloc(32768) for pool->memory => 0x558d722faa30\nused malloc fallback, pool->is_mmap=false\npool final state: pos=0, end=32768, size=32768, memory=0x558d722faa30\nEXIT MHD_pool_create returning pool=0x558d722f90b0\nENTER MHD_pool_create: max=32768\nmalloc(sizeof(struct MemoryPool)) => pool=0x558d722f90b0\nbranch: small allocation or < 4/3 page, set pool->memory = MAP_FAILED\npool->memory == MAP_FAILED, falling back to malloc\nROUND_TO_ALIGN(max) => alloc_size=32768\nmalloc(32768) for pool->memory => 0x558d722fac80\nused malloc fallback, pool->is_mmap=false\npool final state: pos=0, end=32768, size=32768, memory=0x558d722fac80\nEXIT MHD_pool_create returning pool=0x558d722f90b0\nENTER MHD_pool_create: max=32768\nmalloc(sizeof(struct MemoryPool)) => pool=0x558d722f90b0\nbranch: small allocation or < 4/3 page, set pool->memory = MAP_FAILED\npool->memory == MAP_FAILED, falling back to malloc\nROUND_TO_ALIGN(max) => alloc_size=32768\nmalloc(32768) for pool->memory => 0x558d722faed0\nused malloc fallback, pool->is_mmap=false\npool final state: pos=0, end=32768, size=32768, memory=0x558d722faed0\nEXIT MHD_pool_create returning pool=0x558d722f90b0\nENTER MHD_pool_create: max=32768\nmalloc(sizeof(struct MemoryPool)) => pool=0x558d722f90b0\nbranch: small allocation or < 4/3 page, set pool->memory = MAP_FAILED\npool->memory == MAP_FAILED, falling back to malloc\nROUND_TO_ALIGN(max) => alloc_size=32768\nmalloc(32768) for pool->memory => 0x558d722fb120\nused malloc fallback, pool->is_mmap=false\npool final state: pos=0, end=32768, size=32768, memory=0x558d722fb120\nEXIT MHD_pool_create returning pool=0x558d722f90b0\nENTER MHD_pool_create: max=32768\nmalloc(sizeof(struct MemoryPool)) => pool=0x558d722f90b0\nbranch: small allocation or < 4/3 page, set pool->memory = MAP_FAILED\npool->memory == MAP_FAILED, falling back to malloc\nROUND_TO_ALIGN(max) => alloc_size=32768\nmalloc(32768) for pool->memory => 0x558d722fb120\nused malloc fallback, pool->is_mmap=false\npool final state: pos=0, end=32768, size=32768, me"
}