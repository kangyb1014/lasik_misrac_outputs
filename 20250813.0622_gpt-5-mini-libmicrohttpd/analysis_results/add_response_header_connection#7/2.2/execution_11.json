{
  "result": "success",
  "message": "add_response_header_connection: entry: response=0x55c3ead0b2a0, value=0x55c3e999b18c\nvalue_str=a,b,c,d,e, flags_auto=0x0\nbranch: no_connection_hdr: hdr_lookup=(nil), flags_auto=0x0\nabout to mhd_assert: NULL == MHD_get_response_element_n_(...) -> 1\nabout to mhd_assert: 0 == (response->flags_auto & MHD_RAF_HAS_CONNECTION_CLOSE) -> 1\nafter header handling: hdr=(nil), old_value_len=0, already_has_close=0\nvalue_len=9\nnorm_len(initial)=14\nallocating buf_size=14\nafter MHD_str_remove_token_caseless_: value_has_close=0, norm_len_s=13\nabout to mhd_assert: 0 <= norm_len_s -> 1\nbefore remove_keep_alive: norm_len=13\nafter remove_keep_alive: norm_len=13\nabout to mhd_assert: position check: pos=0, old_value_len=0, value_has_close=0, already_has_close=0, expected_pos_when_close=7\nafter adding new value: pos=13\nabout to final mhd_assert: buf_size > pos -> buf_size=14, pos=13 -> 1\ninserted new header: new_hdr=0x55c3ead0b680, header=Connection, value=a, b, c, d, e, flags_auto=0x1\nadd_response_header_connection: entry: response=0x55c3ead0b2a0, value=0x55c3e999b22f\nvalue_str=i,k,l,m,n,o,p,close, flags_auto=0x0\nbranch: no_connection_hdr: hdr_lookup=(nil), flags_auto=0x0\nabout to mhd_assert: NULL == MHD_get_response_element_n_(...) -> 1\nabout to mhd_assert: 0 == (response->flags_auto & MHD_RAF_HAS_CONNECTION_CLOSE) -> 1\nafter header handling: hdr=(nil), old_value_len=0, already_has_close=0\nvalue_len=19\nnorm_len(initial)=29\nallocating buf_size=29\nafter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=19\nabout to mhd_assert: 0 <= norm_len_s -> 1\nbefore remove_keep_alive: norm_len=19\nafter remove_keep_alive: norm_len=19\nabout to mhd_assert: buf_size >= old_value_len + norm_len + close_len + 1 -> buf_size=29, old_value_len=0, norm_len=19\ninserted close token: pos=5\nabout to mhd_assert: position check: pos=7, old_value_len=0, value_has_close=1, already_has_close=0, expected_pos_when_close=7\nafter adding new value: pos=26\nabout to final mhd_assert: buf_size > pos -> buf_size=29, pos=26 -> 1\ninserted new header: new_hdr=0x55c3ead0b6f0, header=Connection, value=close, i, k, l, m, n, o, p, flags_auto=0x3\nadd_response_header_connection: entry: response=0x55c3ead0b2a0, value=0x55c3e999b2eb\nvalue_str=1,2,3,4,5,6,7,close, flags_auto=0x0\nbranch: no_connection_hdr: hdr_lookup=(nil), flags_auto=0x0\nabout to mhd_assert: NULL == MHD_get_response_element_n_(...) -> 1\nabout to mhd_assert: 0 == (response->flags_auto & MHD_RAF_HAS_CONNECTION_CLOSE) -> 1\nafter header handling: hdr=(nil), old_value_len=0, already_has_close=0\nvalue_len=19\nnorm_len(initial)=29\nallocating buf_size=29\nafter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=19\nabout to mhd_assert: 0 <= norm_len_s -> 1\nbefore remove_keep_alive: norm_len=19\nafter remove_keep_alive: norm_len=19\nabout to mhd_assert: buf_size >= old_value_len + norm_len + close_len + 1 -> buf_size=29, old_value_len=0, norm_len=19\ninserted close token: pos=5\nabout to mhd_assert: position check: pos=7, old_value_len=0, value_has_close=1, already_has_close=0, expected_pos_when_close=7\nafter adding new value: pos=26\nabout to final mhd_assert: buf_size > pos -> buf_size=29, pos=26 -> 1\ninserted new header: new_hdr=0x55c3ead0b730, header=Connection, value=close, 1, 2, 3, 4, 5, 6, 7, flags_auto=0x3\nadd_response_header_connection: entry: response=0x55c3ead0b2a0, value=0x55c3e999b31a\nvalue_str=8,9,close, flags_auto=0x3\nbranch: has_connection_hdr: hdr=0x55c3ead0b730, hdr->value=0x55c3ead0b6c0, hdr->value_size=26, already_has_close=1, memcmp_close=1\nabout to mhd_assert: already_has_close == (0 == memcmp(hdr->value, \"close\", 5)) -> 1\nabout to mhd_assert: NULL != hdr -> 1\nafter header handling: hdr=0x55c3ead0b730, old_value_len=28, already_has_close=1\nvalue_len=9\nnorm_len(initial)=14\nallocating buf_size=42\nafter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=4\nabout to mhd_assert: 0 <= norm_len_s -> 1\nbefore remove_keep_alive: norm_len=4\nafter remove_keep_alive: norm_len=4\nadded old header value: pos=26\nabout to mhd_assert: position check: pos=28, old_value_len=28, value_has_close=1, already_has_clos"
}