{
  "result": "success",
  "message": "[enter] add_response_header_connection: value=0x55b45297c18c value_str='a,b,c,d,e'\n[no-hdr] expecting no header: get_response_element returns (nil) flags_auto=0x00000000\n[sizes] old_value_len=0 value_len=9\n[sizes] preliminary norm_len=14\n[sizes] buf_size=14\n[token-remove] value_has_close=0 norm_len_s=13\n[token-remove] norm_len after cast=13\n[normalise] norm_len after removing keep-alive=13\n[add-new] advanced pos by norm_len=13 now pos=13\n[final] buf pos=94233023574032 buf_size=94233023574880 buf=\n[final] buf_preview='a, b, c, d, e' (len=13)\n[insert] new header inserted new_hdr=0x55b455e57680 response->flags_auto=0x00000001 returning MHD_YES\n[enter] add_response_header_connection: value=0x55b45297c22f value_str='i,k,l,m,n,o,p,close'\n[no-hdr] expecting no header: get_response_element returns (nil) flags_auto=0x00000000\n[sizes] old_value_len=0 value_len=19\n[sizes] preliminary norm_len=29\n[sizes] buf_size=29\n[token-remove] value_has_close=1 norm_len_s=19\n[token-remove] norm_len after cast=19\n[normalise] norm_len after removing keep-alive=19\n[add-close] preparing to add 'close' token buf_size=29 old_value_len=0 norm_len=19\n[add-close] inserted 'close' at pos=5\n[add-new] advanced pos by norm_len=19 now pos=26\n[final] buf pos=94233023574032 buf_size=94233023575744 buf=\n[final] buf_preview='close, i, k, l, m, n, o, p' (len=26)\n[insert] new header inserted new_hdr=0x55b455e576f0 response->flags_auto=0x00000003 returning MHD_YES\n[enter] add_response_header_connection: value=0x55b45297c2eb value_str='1,2,3,4,5,6,7,close'\n[no-hdr] expecting no header: get_response_element returns (nil) flags_auto=0x00000000\n[sizes] old_value_len=0 value_len=19\n[sizes] preliminary norm_len=29\n[sizes] buf_size=29\n[token-remove] value_has_close=1 norm_len_s=19\n[token-remove] norm_len after cast=19\n[normalise] norm_len after removing keep-alive=19\n[add-close] preparing to add 'close' token buf_size=29 old_value_len=0 norm_len=19\n[add-close] inserted 'close' at pos=5\n[add-new] advanced pos by norm_len=19 now pos=26\n[final] buf pos=94233023574032 buf_size=94233023575744 buf=\n[final] buf_preview='close, 1, 2, 3, 4, 5, 6, 7' (len=26)\n[insert] new header inserted new_hdr=0x55b455e57730 response->flags_auto=0x00000003 returning MHD_YES\n[enter] add_response_header_connection: value=0x55b45297c31a value_str='8,9,close'\n[assert-check] already_has_close=1 memcmp(hdr->value, 'close',5) == 0 ?1 hdr=0x55b455e57730 hdr->value=0x55b455e576c0\n[assert-check] hdr_nonnull=1\n[sizes] old_value_len=28 value_len=9\n[sizes] preliminary norm_len=14\n[sizes] buf_size=42\n[token-remove] value_has_close=1 norm_len_s=4\n[token-remove] norm_len after cast=4\n[normalise] norm_len after removing keep-alive=4\n[add-old] copied old header value hdr=0x55b455e57730 hdr->value_size=26 new pos=26\n[add-new] advanced pos by norm_len=4 now pos=32\n[final] buf pos=94233023574032 buf_size=94233023575792 buf=\n[final] buf_preview='close, 1, 2, 3, 4, 5, 6, 7, 8, 9' (len=32)\n[update] updated existing hdr=0x55b455e57730 hdr->value_size=32 response->flags_auto=0x00000003 returning MHD_YES\n[enter] add_response_header_connection: value=0x55b45297c3f1 value_str='10,12'\n[assert-check] already_has_close=1 memcmp(hdr->value, 'close',5) == 0 ?1 hdr=0x55b455e57730 hdr->value=0x55b455e576f0\n[assert-check] hdr_nonnull=1\n[sizes] old_value_len=19 value_len=5\n[sizes] preliminary norm_len=8\n[sizes] buf_size=27\n[token-remove] value_has_close=0 norm_len_s=6\n[token-remove] norm_len after cast=6\n[normalise] norm_len after removing keep-alive=6\n[add-old] copied old header value hdr=0x55b455e57730 hdr->value_size=17 new pos=17\n[add-new] advanced pos by norm_len=6 now pos=25\n[final] buf pos=94233023574032 buf_size=94233023575744 buf=\n[final] buf_preview='close, 2, 4, 6, 8, 10, 12' (len=25)\n[update] updated existing hdr=0x55b455e57730 hdr->value_size=25 response->flags_auto=0x00000003 returning MHD_YES\n[enter] add_response_header_connection: value=0x55b45297c4b3 value_str='close'\n[assert-check] already_has_close=0 memcmp(hdr->value, 'close',5) == 0 ?0 hdr=0x55b455e57730 hdr->value=0x55b455e576c0\n[assert-check] hdr_nonnull=1\n[size"
}