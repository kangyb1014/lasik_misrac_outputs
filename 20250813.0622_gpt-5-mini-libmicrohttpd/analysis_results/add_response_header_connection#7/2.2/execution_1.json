{
  "result": "success",
  "message": "ENTER add_response_header_connection: response=0x56408e2ed2a0, value='a,b,c,d,e'\nASSERT CHECK 3: MHD_get_response_element_n_ returned (nil) (expected NULL)\nASSERT CHECK 4: (response->flags_auto & MHD_RAF_HAS_CONNECTION_CLOSE) == 0 => 1\nvalue_len=9, old_value_len=0\nAfter MHD_str_remove_token_caseless_: value_has_close=0, norm_len_s=13\nASSERT CHECK 5: (0 <= norm_len_s) => 1\nASSERT CHECK 6: position invariant: value_has_close=0, already_has_close=0, old_value_len=0, pos=0, expr=1\nBefore null-terminate: buf_size=14, pos=13\nInserted new header: header='Connection', value='a, b, c, d, e', value_size=13, flags_auto=0x1\nENTER add_response_header_connection: response=0x56408e2ed2a0, value='i,k,l,m,n,o,p,close'\nASSERT CHECK 3: MHD_get_response_element_n_ returned (nil) (expected NULL)\nASSERT CHECK 4: (response->flags_auto & MHD_RAF_HAS_CONNECTION_CLOSE) == 0 => 1\nvalue_len=19, old_value_len=0\nAfter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=19\nASSERT CHECK 5: (0 <= norm_len_s) => 1\nAbout to insert 'close' token: buf_size=29, old_value_len=0, norm_len=19, required_min=27\nASSERT CHECK 6: position invariant: value_has_close=1, already_has_close=0, old_value_len=0, pos=7, expr=1\nBefore null-terminate: buf_size=29, pos=26\nInserted new header: header='Connection', value='close, i, k, l, m, n, o, p', value_size=26, flags_auto=0x3\nENTER add_response_header_connection: response=0x56408e2ed2a0, value='1,2,3,4,5,6,7,close'\nASSERT CHECK 3: MHD_get_response_element_n_ returned (nil) (expected NULL)\nASSERT CHECK 4: (response->flags_auto & MHD_RAF_HAS_CONNECTION_CLOSE) == 0 => 1\nvalue_len=19, old_value_len=0\nAfter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=19\nASSERT CHECK 5: (0 <= norm_len_s) => 1\nAbout to insert 'close' token: buf_size=29, old_value_len=0, norm_len=19, required_min=27\nASSERT CHECK 6: position invariant: value_has_close=1, already_has_close=0, old_value_len=0, pos=7, expr=1\nBefore null-terminate: buf_size=29, pos=26\nInserted new header: header='Connection', value='close, 1, 2, 3, 4, 5, 6, 7', value_size=26, flags_auto=0x3\nENTER add_response_header_connection: response=0x56408e2ed2a0, value='8,9,close'\nASSERT CHECK 1: hdr=0x56408e2ed730, hdr->value='close, 1, 2, 3, 4, 5, 6, 7', hdr->value_size=26, already_has_close=1, memcmp_res=0, expr=1\nASSERT CHECK 2: (NULL != hdr) => 1\nvalue_len=9, old_value_len=28\nAfter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=4\nASSERT CHECK 5: (0 <= norm_len_s) => 1\nASSERT CHECK 6: position invariant: value_has_close=1, already_has_close=1, old_value_len=28, pos=28, expr=1\nBefore null-terminate: buf_size=42, pos=32\nUpdating existing header: old_value='close, 1, 2, 3, 4, 5, 6, 7', old_value_size=26 -> new_value='close, 1, 2, 3, 4, 5, 6, 7, 8, 9', new_value_size=32\nEXIT add_response_header_connection: return MHD_YES, response->flags_auto=0x3\nENTER add_response_header_connection: response=0x56408e2ed2a0, value='10,12'\nASSERT CHECK 1: hdr=0x56408e2ed730, hdr->value='close, 2, 4, 6, 8', hdr->value_size=17, already_has_close=1, memcmp_res=0, expr=1\nASSERT CHECK 2: (NULL != hdr) => 1\nvalue_len=5, old_value_len=19\nAfter MHD_str_remove_token_caseless_: value_has_close=0, norm_len_s=6\nASSERT CHECK 5: (0 <= norm_len_s) => 1\nASSERT CHECK 6: position invariant: value_has_close=0, already_has_close=1, old_value_len=19, pos=19, expr=1\nBefore null-terminate: buf_size=27, pos=25\nUpdating existing header: old_value='close, 2, 4, 6, 8', old_value_size=17 -> new_value='close, 2, 4, 6, 8, 10, 12', new_value_size=25\nEXIT add_response_header_connection: return MHD_YES, response->flags_auto=0x3\nENTER add_response_header_connection: response=0x56408e2ed2a0, value='close'\nASSERT CHECK 1: hdr=0x56408e2ed730, hdr->value='2, 4, 6', hdr->value_size=7, already_has_close=0, memcmp_res=-49, expr=1\nASSERT CHECK 2: (NULL != hdr) => 1\nvalue_len=5, old_value_len=9\nAfter MHD_str_remove_token_caseless_: value_has_close=1, norm_len_s=0\nASSERT CHECK 5: (0 <= norm_len_s) => 1\nAbout to insert 'close' token: buf_size=17, old_value_len=9, norm_len=0, required_min=17\nBefore null-terminate: buf_"
}