{
  "result": "success",
  "message": "ENTER add_response_header_connection: response=0x55d0355ae2a0, value=0x55d024c5418c\nBRANCH: no existing Connection header\nSTATE before normalization: value_len=9, old_value_len=0\nALLOC: buf_size=14, norm_len=14\nEXECUTED: constant if (1) block entered (this is the redundant test reported)\nNORMALIZE: norm_len_s=13, value_has_close=0\nCHECK: upgrade_handler=(nil), value_has_close=0\nREMOVE: removing keep-alive tokens from normalized buffer, norm_len before=13\nREMOVE: norm_len after=13\nAPPEND: added normalized tokens, norm_len=13, pos=13\nFINAL: resulting header value='a, b, c, d, e', pos=13, buf_size=14\nSUCCESS: inserted new Connection header, new_hdr=0x55d0355ae680, flags_auto=0x1\nENTER add_response_header_connection: response=0x55d0355ae2a0, value=0x55d024c5422f\nBRANCH: no existing Connection header\nSTATE before normalization: value_len=19, old_value_len=0\nALLOC: buf_size=29, norm_len=29\nEXECUTED: constant if (1) block entered (this is the redundant test reported)\nNORMALIZE: norm_len_s=19, value_has_close=1\nCHECK: upgrade_handler=(nil), value_has_close=1\nREMOVE: removing keep-alive tokens from normalized buffer, norm_len before=19\nREMOVE: norm_len after=19\nMODIFY: inserting close token: buf_size=29, old_value_len=0, norm_len=19\nAPPEND: added normalized tokens, norm_len=19, pos=26\nFINAL: resulting header value='close, i, k, l, m, n, o, p', pos=26, buf_size=29\nSUCCESS: inserted new Connection header, new_hdr=0x55d0355ae6f0, flags_auto=0x3\nENTER add_response_header_connection: response=0x55d0355ae2a0, value=0x55d024c542eb\nBRANCH: no existing Connection header\nSTATE before normalization: value_len=19, old_value_len=0\nALLOC: buf_size=29, norm_len=29\nEXECUTED: constant if (1) block entered (this is the redundant test reported)\nNORMALIZE: norm_len_s=19, value_has_close=1\nCHECK: upgrade_handler=(nil), value_has_close=1\nREMOVE: removing keep-alive tokens from normalized buffer, norm_len before=19\nREMOVE: norm_len after=19\nMODIFY: inserting close token: buf_size=29, old_value_len=0, norm_len=19\nAPPEND: added normalized tokens, norm_len=19, pos=26\nFINAL: resulting header value='close, 1, 2, 3, 4, 5, 6, 7', pos=26, buf_size=29\nSUCCESS: inserted new Connection header, new_hdr=0x55d0355ae730, flags_auto=0x3\nENTER add_response_header_connection: response=0x55d0355ae2a0, value=0x55d024c5431a\nBRANCH: response already has Connection header: hdr=0x55d0355ae730, already_has_close=1\nSTATE before normalization: value_len=9, old_value_len=28\nALLOC: buf_size=42, norm_len=14\nEXECUTED: constant if (1) block entered (this is the redundant test reported)\nNORMALIZE: norm_len_s=4, value_has_close=1\nCHECK: upgrade_handler=(nil), value_has_close=1\nREMOVE: removing keep-alive tokens from normalized buffer, norm_len before=4\nREMOVE: norm_len after=4\nAPPEND: added old header tokens, new pos=26\nAPPEND: added normalized tokens, norm_len=4, pos=32\nFINAL: resulting header value='close, 1, 2, 3, 4, 5, 6, 7, 8, 9', pos=32, buf_size=42\nUPDATE: replacing existing header value (hdr=0x55d0355ae730), old_value_size=26 -> new pos=32\nSUCCESS: updated existing Connection header (hdr=0x55d0355ae730), flags_auto=0x3\nENTER add_response_header_connection: response=0x55d0355ae2a0, value=0x55d024c543f1\nBRANCH: response already has Connection header: hdr=0x55d0355ae730, already_has_close=1\nSTATE before normalization: value_len=5, old_value_len=19\nALLOC: buf_size=27, norm_len=8\nEXECUTED: constant if (1) block entered (this is the redundant test reported)\nNORMALIZE: norm_len_s=6, value_has_close=0\nCHECK: upgrade_handler=(nil), value_has_close=0\nREMOVE: removing keep-alive tokens from normalized buffer, norm_len before=6\nREMOVE: norm_len after=6\nAPPEND: added old header tokens, new pos=17\nAPPEND: added normalized tokens, norm_len=6, pos=25\nFINAL: resulting header value='close, 2, 4, 6, 8, 10, 12', pos=25, buf_size=27\nUPDATE: replacing existing header value (hdr=0x55d0355ae730), old_value_size=17 -> new pos=25\nSUCCESS: updated existing Connection header (hdr=0x55d0355ae730), flags_auto=0x3\nENTER add_response_header_connection: response=0x55d0355ae2a0, value=0x55d024c544b3\nBRANCH: res"
}