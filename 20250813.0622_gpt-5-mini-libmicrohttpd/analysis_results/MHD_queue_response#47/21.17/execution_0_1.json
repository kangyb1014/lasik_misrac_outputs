{
  "result": "compile_failed",
  "message": "connection.c:7860:16: error: redefinition of 'struct ThreadId'\n 7860 | typedef struct ThreadId { int id; } ThreadId;\n      |                ^~~~~~~~\nconnection.c:7859:8: note: originally defined here\n 7859 | struct ThreadId { int id; };\n      |        ^~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:38:\n../../src/include/microhttpd.h:550:35: error: expected declaration specifiers or '...' before '(' token\n  550 | #define MHD_ICY_FLAG ((uint32_t) (((uint32_t) 1) << 31))\n      |                                   ^\nconnection.c:7868:20: note: in expansion of macro 'MHD_ICY_FLAG'\n 7868 | const unsigned int MHD_ICY_FLAG = 0x80000000u;\n      |                    ^~~~~~~~~~~~\n../../src/include/microhttpd.h:337:46: error: expected identifier or '(' before numeric constant\n  337 | #define MHD_HTTP_SWITCHING_PROTOCOLS         101\n      |                                              ^~~\nconnection.c:7869:20: note: in expansion of macro 'MHD_HTTP_SWITCHING_PROTOCOLS'\n 7869 | const unsigned int MHD_HTTP_SWITCHING_PROTOCOLS = 101;\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:7870:20: error: 'MHD_HTTP_VER_1_0' redeclared as different kind of symbol\n 7870 | const unsigned int MHD_HTTP_VER_1_0 = 0x0100;\n      |                    ^~~~~~~~~~~~~~~~\nIn file included from connection.c:38:\ninternal.h:860:3: note: previous definition of 'MHD_HTTP_VER_1_0' with type 'enum MHD_HTTP_Version'\n  860 |   MHD_HTTP_VER_1_0 = 2,\n      |   ^~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:38:\n../../src/include/microhttpd.h:344:46: error: expected identifier or '(' before numeric constant\n  344 | #define MHD_HTTP_OK                          200\n      |                                              ^~~\nconnection.c:7871:20: note: in expansion of macro 'MHD_HTTP_OK'\n 7871 | const unsigned int MHD_HTTP_OK = 200;\n      |                    ^~~~~~~~~~~\n../../src/include/microhttpd.h:352:46: error: expected identifier or '(' before numeric constant\n  352 | #define MHD_HTTP_NO_CONTENT                  204\n      |                                              ^~~\nconnection.c:7872:20: note: in expansion of macro 'MHD_HTTP_NO_CONTENT'\n 7872 | const unsigned int MHD_HTTP_NO_CONTENT = 204;\n      |                    ^~~~~~~~~~~~~~~~~~~\n../../src/include/microhttpd.h:374:46: error: expected identifier or '(' before numeric constant\n  374 | #define MHD_HTTP_NOT_MODIFIED                304\n      |                                              ^~~\nconnection.c:7873:20: note: in expansion of macro 'MHD_HTTP_NOT_MODIFIED'\n 7873 | const unsigned int MHD_HTTP_NOT_MODIFIED = 304;\n      |                    ^~~~~~~~~~~~~~~~~~~~~\nconnection.c:7874:20: error: 'MHD_HTTP_MTHD_CONNECT' redeclared as different kind of symbol\n 7874 | const unsigned int MHD_HTTP_MTHD_CONNECT = 0x10;\n      |                    ^~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:38:\ninternal.h:927:3: note: previous definition of 'MHD_HTTP_MTHD_CONNECT' with type 'enum MHD_HTTP_Method'\n  927 |   MHD_HTTP_MTHD_CONNECT = 6,\n      |   ^~~~~~~~~~~~~~~~~~~~~\nconnection.c:7875:20: error: 'MHD_RF_HEAD_ONLY_RESPONSE' redeclared as different kind of symbol\n 7875 | const unsigned int MHD_RF_HEAD_ONLY_RESPONSE = 0x1;\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:38:\n../../src/include/microhttpd.h:3887:3: note: previous definition of 'MHD_RF_HEAD_ONLY_RESPONSE' with type 'enum MHD_ResponseFlags'\n 3887 |   MHD_RF_HEAD_ONLY_RESPONSE = 1 << 4\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:7876:20: error: 'MHD_RF_HTTP_1_0_COMPATIBLE_STRICT' redeclared as different kind of symbol\n 7876 | const unsigned int MHD_RF_HTTP_1_0_COMPATIBLE_STRICT = 0x2;\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:38:\n../../src/include/microhttpd.h:3827:3: note: previous definition of 'MHD_RF_HTTP_1_0_COMPATIBLE_STRICT' with type 'enum MHD_ResponseFlags'\n 3827 |   MHD_RF_HTTP_1_0_COMPATIBLE_STRICT = 1 << 0,\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:7877:20: error: 'MHD_RF_HTTP_1_0_SERVER' redeclared as different kind of symbol\n 7877 | const unsigned int MHD_RF_HTTP_1_0_SERVER = 0x4;\n      |                    ^~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:38:\n../../src/include/microhttpd.h:3848:3: note: previous definition of 'MHD_RF_HTTP_1_0_SERVER' with type 'enum MHD_ResponseFlags'\n 3848 |   MHD_RF_HTTP_1_0_SERVER = 1 << 1,\n      |   ^~~~~~~~~~~~~~~~~~~~~~\nconnection.c:7878:20: error: 'MHD_RAF_HAS_CONTENT_LENGTH' redeclared as different kind of symbol\n 7878 | const unsigned int MHD_RAF_HAS_CONTENT_LENGTH = 0x1;\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:38:\ninternal.h:410:3: note: previous definition of 'MHD_RAF_HAS_CONTENT_LENGTH' with type 'enum MHD_ResponseAutoFlags'\n  410 |   MHD_RAF_HAS_CONTENT_LENGTH = 1 << 3,    /**< Has \"Content-Length\" header */\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:7879:20: error: 'MHD_RF_INSANITY_HEADER_CONTENT_LENGTH' redeclared as different kind of symbol\n 7879 | const unsigned int MHD_RF_INSANITY_HEADER_CONTENT_LENGTH = 0x8;\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:38:\n../../src/include/microhttpd.h:3862:3: note: previous definition of 'MHD_RF_INSANITY_HEADER_CONTENT_LENGTH' with type 'enum MHD_ResponseFlags'\n 3862 |   MHD_RF_INSANITY_HEADER_CONTENT_LENGTH = 1 << 2,\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:34,\n                 from connection.c:38:\n../../src/include/microhttpd.h:584:38: error: expected identifier or '(' before string constant\n  584 | #define MHD_HTTP_HEADER_CONNECTION   \"Connection\"\n      |                                      ^~~~~~~~~~~~\nconnection.c:7880:13: note: in expansion of macro 'MHD_HTTP_HEADER_CONNECTION'\n 7880 | const char *MHD_HTTP_HEADER_CONNECTION = \"Connection\";\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:38:\ninternal.h:2558:4: error: expected identifier or '(' before numeric constant\n 2558 |   (0 != (d->options & (MHD_USE_INTERNAL_POLLING_THREAD)))\n      |    ^\nconnection.c:7881:13: note: in expansion of macro 'MHD_D_IS_USING_THREADS_'\n 7881 | extern bool MHD_D_IS_USING_THREADS_(struct MHD_Daemon *);\n      |             ^~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:60,\n                 from connection.c:38:\nmhd_threads.h:499:48: error: expected ')' before '.' token\n  499 |      MHD_thread_ID_is_current_thread_((hndl_id).ID)\n      |                                                ^\nmhd_threads.h:312:6: note: in definition of macro 'MHD_thread_ID_is_valid_'\n  312 |    ((ID_var).valid)\n      |      ^~~~~~\nmhd_threads.h:499:6: note: in expansion of macro 'MHD_thread_ID_is_current_thread_'\n  499 |      MHD_thread_ID_is_current_thread_((hndl_id).ID)\n      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:7882:13: note: in expansion of macro 'MHD_thread_handle_ID_is_current_thread_'\n 7882 | extern bool MHD_thread_handle_ID_is_current_thread_(ThreadId);\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nmhd_threads.h:312:13: error: expected ')' before '.' token\n  312 |    ((ID_var).valid)\n      |             ^\nmhd_threads.h:322:6: note: in expansion of macro 'MHD_thread_ID_is_valid_'\n  322 |     (MHD_thread_ID_is_valid_(ID_var) && \\\n      |      ^~~~~~~~~~~~~~~~~~~~~~~\nmhd_threads.h:499:6: note: in expansion of macro 'MHD_thread_ID_is_current_thread_'\n  499 |      MHD_thread_ID_is_current_thread_((hndl_id).ID)\n      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:7882:13: note: in expansion of macro 'MHD_thread_handle_ID_is_current_thread_'\n 7882 | extern bool MHD_thread_handle_ID_is_current_thread_(ThreadId);\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nmhd_threads.h:322:38: error: expected ')' before '&&' token\n  322 |     (MHD_thread_ID_is_valid_(ID_var) && \\\n      |                                      ^~\nmhd_threads.h:499:6: note: in expansion of macro 'MHD_thread_ID_is_current_thread_'\n  499 |      MHD_thread_ID_is_current_thread_((hndl_id).ID)\n      |      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:7882:13: note: in expansion of macro 'MHD_thread_handle_ID_is_current_thread_'\n 7882 | extern bool MHD_thread_handle_ID_is_current_thread_(ThreadId);\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:44:\nmhd_str.h:155:32: error: expected declaration specifiers or '...' before '(' token\n  155 |   MHD_str_has_token_caseless_ ((str),(tkn),MHD_STATICSTR_LEN_ (tkn))\n      |                                ^\nconnection.c:7883:13: note: in expansion of macro 'MHD_str_has_s_token_caseless_'\n 7883 | extern bool MHD_str_has_s_token_caseless_(const char *, const char *);\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nmhd_str.h:155:38: error: expected declaration specifiers or '...' before '(' token\n  155 |   MHD_str_has_token_caseless_ ((str),(tkn),MHD_STATICSTR_LEN_ (tkn))\n      |                                      ^\nconnection.c:7883:13: note: in expansion of macro 'MHD_str_has_s_token_caseless_'\n 7883 | extern bool MHD_str_has_s_token_caseless_(const char *, const char *);\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:65,\n                 from connection.c:38:\nmhd_str_types.h:33:35: error: expected declaration specifiers or '...' before '(' token\n   33 | #define MHD_STATICSTR_LEN_(macro) (sizeof(macro) / sizeof(char) - 1)\n      |                                   ^\nmhd_str.h:155:44: note: in expansion of macro 'MHD_STATICSTR_LEN_'\n  155 |   MHD_str_has_token_caseless_ ((str),(tkn),MHD_STATICSTR_LEN_ (tkn))\n      |                                            ^~~~~~~~~~~~~~~~~~\nconnection.c:7883:13: note: in expansion of macro 'MHD_str_has_s_token_caseless_'\n 7883 | extern bool MHD_str_has_s_token_caseless_(const char *, const char *);\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:38:\ninternal.h:890:59: error: expected ')' before '==' token\n  890 | #define MHD_IS_HTTP_VER_1_1_COMPAT(ver) (MHD_HTTP_VER_1_1 == (ver) || \\\n      |                                                           ^~\nconnection.c:7884:13: note: in expansion of macro 'MHD_IS_HTTP_VER_1_1_COMPAT'\n 7884 | extern bool MHD_IS_HTTP_VER_1_1_COMPAT(unsigned int);\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~~~\nconnection.c:7885:13: error: 'MHD_resp_sender_std' redeclared as different kind of symbol\n 7885 | extern void MHD_resp_sender_std(void);\n      |             ^~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:38:\ninternal.h:1261:3: note: previous definition of 'MHD_resp_sender_std' with type 'enum MHD_resp_sender_'\n 1261 |   MHD_resp_sender_std = 0,\n      |   ^~~~~~~~~~~~~~~~~~~\nconnection.c:7886:13: error: 'MHD_resp_sender_sendfile' redeclared as different kind of symbol\n 7886 | extern void MHD_resp_sender_sendfile(void);\n      |             ^~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from connection.c:38:\ninternal.h:1262:3: note: previous definition of 'MHD_resp_sender_sendfile' with type 'enum MHD_resp_sender_'\n 1262 |   MHD_resp_sender_sendfile\n      |   ^~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from internal.h:35,\n                 from connection.c:38:\nmhd_assert.h:45:32: error: expected identifier or '(' before 'void'\n   45 | #  define mhd_assert(ignore) ((void) 0)\n      |                                ^~~~\nconnection.c:7887:13: note: in expansion of macro 'mhd_assert'\n 7887 | extern void mhd_assert(int cond);\n      |             ^~~~~~~~~~\nmhd_assert.h:45:38: error: expected ')' before numeric constant\n   45 | #  define mhd_assert(ignore) ((void) 0)\n      |                                      ^\nconnection.c:7887:13: note: in expansion of macro 'mhd_assert'\n 7887 | extern void mhd_assert(int cond);\n      |             ^~~~~~~~~~\nconnection.c: In function 'MHD_queue_response':\nconnection.c:8166:34: error: incompatible types when assigning to type 'enum MHD_resp_sender_' from type 'void (*)(void)'\n 8166 |     connection->rp.resp_sender = MHD_resp_sender_std;\n      |                                  ^~~~~~~~~~~~~~~~~~~\nconnection.c:8168:34: error: incompatible types when assigning to type 'enum MHD_resp_sender_' from type 'void (*)(void)'\n 8168 |     connection->rp.resp_sender = MHD_resp_sender_sendfile;\n      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~\nmake[3]: *** [Makefile:2098: libmicrohttpd_la-connection.lo] Error 1\nmake[2]: *** [Makefile:449: all-recursive] Error 1\nmake[1]: *** [Makefile:788: all-recursive] Error 1\nmake: *** [Makefile:693: all] Error 2"
}