{
  "result": "success",
  "message": "[add_response_entry_n] entry\n  response=0x55728a5e72a0\n  kind=1\n  header=0x55724fbcc0b9, header_len=13\n  content=0x55724fbcc0b0, content_len=8\n  header_is_null=0, content_is_null=0\n  header_bytes(hexdump up to 13 bytes): 48 65 61 64 65 72 2d 54 79 70 65 2d 41\n  content_bytes(hexdump up to 8 bytes): 76 61 6c 75 65 2d 61 31\n[add_response_entry_n] before_memchr_tab\n  response=0x55728a5e72a0\n  kind=1\n  header=0x55724fbcc0b9, header_len=13\n  content=0x55724fbcc0b0, content_len=8\n  header_is_null=0, content_is_null=0\n  header_bytes(hexdump up to 13 bytes): 48 65 61 64 65 72 2d 54 79 70 65 2d 41\n  content_bytes(hexdump up to 8 bytes): 76 61 6c 75 65 2d 61 31\n[add_response_entry_n] before_memchr_space\n  response=0x55728a5e72a0\n  kind=1\n  header=0x55724fbcc0b9, header_len=13\n  content=0x55724fbcc0b0, content_len=8\n  header_is_null=0, content_is_null=0\n  header_bytes(hexdump up to 13 bytes): 48 65 61 64 65 72 2d 54 79 70 65 2d 41\n  content_bytes(hexdump up to 8 bytes): 76 61 6c 75 65 2d 61 31\n[add_response_entry_n] before_memchr_cr\n  response=0x55728a5e72a0\n  kind=1\n  header=0x55724fbcc0b9, header_len=13\n  content=0x55724fbcc0b0, content_len=8\n  header_is_null=0, content_is_null=0\n  header_bytes(hexdump up to 13 bytes): 48 65 61 64 65 72 2d 54 79 70 65 2d 41\n  content_bytes(hexdump up to 8 bytes): 76 61 6c 75 65 2d 61 31\n[add_response_entry_n] before_memchr_lf\n  response=0x55728a5e72a0\n  kind=1\n  header=0x55724fbcc0b9, header_len=13\n  content=0x55724fbcc0b0, content_len=8\n  header_is_null=0, content_is_null=0\n  header_bytes(hexdump up to 13 bytes): 48 65 61 64 65 72 2d 54 79 70 65 2d 41\n  content_bytes(hexdump up to 8 bytes): 76 61 6c 75 65 2d 61 31\n[add_response_entry_n] before_memchr_content_cr\n  response=0x55728a5e72a0\n  kind=1\n  header=0x55724fbcc0b9, header_len=13\n  content=0x55724fbcc0b0, content_len=8\n  header_is_null=0, content_is_null=0\n  header_bytes(hexdump up to 13 bytes): 48 65 61 64 65 72 2d 54 79 70 65 2d 41\n  content_bytes(hexdump up to 8 bytes): 76 61 6c 75 65 2d 61 31\n[add_response_entry_n] before_memchr_content_lf\n  response=0x55728a5e72a0\n  kind=1\n  header=0x55724fbcc0b9, header_len=13\n  content=0x55724fbcc0b0, content_len=8\n  header_is_null=0, content_is_null=0\n  header_bytes(hexdump up to 13 bytes): 48 65 61 64 65 72 2d 54 79 70 65 2d 41\n  content_bytes(hexdump up to 8 bytes): 76 61 6c 75 65 2d 61 31\n[add_response_entry_n] calling_MHD_add_response_entry_no_check_\n  response=0x55728a5e72a0\n  kind=1\n  header=0x55724fbcc0b9, header_len=13\n  content=0x55724fbcc0b0, content_len=8\n  header_is_null=0, content_is_null=0\n  header_bytes(hexdump up to 13 bytes): 48 65 61 64 65 72 2d 54 79 70 65 2d 41\n  content_bytes(hexdump up to 8 bytes): 76 61 6c 75 65 2d 61 31\n[add_response_entry_n] entry\n  response=0x55728a5e72a0\n  kind=1\n  header=0x55724fbcc0b9, header_len=13\n  content=0x55724fbcc0de, content_len=8\n  header_is_null=0, content_is_null=0\n  header_bytes(hexdump up to 13 bytes): 48 65 61 64 65 72 2d 54 79 70 65 2d 41\n  content_bytes(hexdump up to 8 bytes): 76 61 6c 75 65 2d 61 32\n[add_response_entry_n] before_memchr_tab\n  response=0x55728a5e72a0\n  kind=1\n  header=0x55724fbcc0b9, header_len=13\n  content=0x55724fbcc0de, content_len=8\n  header_is_null=0, content_is_null=0\n  header_bytes(hexdump up to 13 bytes): 48 65 61 64 65 72 2d 54 79 70 65 2d 41\n  content_bytes(hexdump up to 8 bytes): 76 61 6c 75 65 2d 61 32\n[add_response_entry_n] before_memchr_space\n  response=0x55728a5e72a0\n  kind=1\n  header=0x55724fbcc0b9, header_len=13\n  content=0x55724fbcc0de, content_len=8\n  header_is_null=0, content_is_null=0\n  header_bytes(hexdump up to 13 bytes): 48 65 61 64 65 72 2d 54 79 70 65 2d 41\n  content_bytes(hexdump up to 8 bytes): 76 61 6c 75 65 2d 61 32\n[add_response_entry_n] before_memchr_cr\n  response=0x55728a5e72a0\n  kind=1\n  header=0x55724fbcc0b9, header_len=13\n  content=0x55724fbcc0de, content_len=8\n  header_is_null=0, content_is_null=0\n  header_bytes(hexdump up to 13 bytes): 48 65 61 64 65 72 2d 54 79 70 65 2d 41\n  content_bytes(hexdump up to 8 bytes): 76 61 6c 75 65 2d 61 32\n[add_response_entry_n] before_memchr_lf\n  response"
}