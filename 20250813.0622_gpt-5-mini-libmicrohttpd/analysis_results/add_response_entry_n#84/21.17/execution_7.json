{
  "result": "success",
  "message": "ENTER add_response_entry_n: response=0x55d5b5f002a0 kind=1 header=0x55d5995090b9 header_len=13 content=0x55d5995090b0 content_len=8\nCheck header for '\\t' (header=0x55d5995090b9, header_len=13)\nmemchr(header,'\\t',13) -> (nil)\nCheck header for ' ' (header=0x55d5995090b9, header_len=13)\nmemchr(header,' ',13) -> (nil)\nCheck header for '\\r' (header=0x55d5995090b9, header_len=13)\nmemchr(header,'\\r',13) -> (nil)\nCheck header for '\\n' (header=0x55d5995090b9, header_len=13)\nmemchr(header,'\\n',13) -> (nil)\nCheck content for '\\r' (content=0x55d5995090b0, content_len=8)\nmemchr(content,'\\r',8) -> (nil)\nCheck content for '\\n' (content=0x55d5995090b0, content_len=8)\nmemchr(content,'\\n',8) -> (nil)\nCalling MHD_add_response_entry_no_check_ (response=0x55d5b5f002a0 kind=1 header=0x55d5995090b9 header_len=13 content=0x55d5995090b0 content_len=8)\nENTER add_response_entry_n: response=0x55d5b5f002a0 kind=1 header=0x55d5995090b9 header_len=13 content=0x55d5995090de content_len=8\nCheck header for '\\t' (header=0x55d5995090b9, header_len=13)\nmemchr(header,'\\t',13) -> (nil)\nCheck header for ' ' (header=0x55d5995090b9, header_len=13)\nmemchr(header,' ',13) -> (nil)\nCheck header for '\\r' (header=0x55d5995090b9, header_len=13)\nmemchr(header,'\\r',13) -> (nil)\nCheck header for '\\n' (header=0x55d5995090b9, header_len=13)\nmemchr(header,'\\n',13) -> (nil)\nCheck content for '\\r' (content=0x55d5995090de, content_len=8)\nmemchr(content,'\\r',8) -> (nil)\nCheck content for '\\n' (content=0x55d5995090de, content_len=8)\nmemchr(content,'\\n',8) -> (nil)\nCalling MHD_add_response_entry_no_check_ (response=0x55d5b5f002a0 kind=1 header=0x55d5995090b9 header_len=13 content=0x55d5995090de content_len=8)\nENTER add_response_entry_n: response=0x55d5b5f002a0 kind=1 header=0x55d5995090b9 header_len=13 content=0x55d599509118 content_len=8\nCheck header for '\\t' (header=0x55d5995090b9, header_len=13)\nmemchr(header,'\\t',13) -> (nil)\nCheck header for ' ' (header=0x55d5995090b9, header_len=13)\nmemchr(header,' ',13) -> (nil)\nCheck header for '\\r' (header=0x55d5995090b9, header_len=13)\nmemchr(header,'\\r',13) -> (nil)\nCheck header for '\\n' (header=0x55d5995090b9, header_len=13)\nmemchr(header,'\\n',13) -> (nil)\nCheck content for '\\r' (content=0x55d599509118, content_len=8)\nmemchr(content,'\\r',8) -> (nil)\nCheck content for '\\n' (content=0x55d599509118, content_len=8)\nmemchr(content,'\\n',8) -> (nil)\nCalling MHD_add_response_entry_no_check_ (response=0x55d5b5f002a0 kind=1 header=0x55d5995090b9 header_len=13 content=0x55d599509118 content_len=8)\nENTER add_response_entry_n: response=0x55d5b5f002a0 kind=1 header=0x55d599509b9b header_len=4 content=0x55d599509b7d content_len=29\nCheck header for '\\t' (header=0x55d599509b9b, header_len=4)\nmemchr(header,'\\t',4) -> (nil)\nCheck header for ' ' (header=0x55d599509b9b, header_len=4)\nmemchr(header,' ',4) -> (nil)\nCheck header for '\\r' (header=0x55d599509b9b, header_len=4)\nmemchr(header,'\\r',4) -> (nil)\nCheck header for '\\n' (header=0x55d599509b9b, header_len=4)\nmemchr(header,'\\n',4) -> (nil)\nCheck content for '\\r' (content=0x55d599509b7d, content_len=29)\nmemchr(content,'\\r',29) -> (nil)\nCheck content for '\\n' (content=0x55d599509b7d, content_len=29)\nmemchr(content,'\\n',29) -> (nil)\nCalling MHD_add_response_entry_no_check_ (response=0x55d5b5f002a0 kind=1 header=0x55d599509b9b header_len=4 content=0x55d599509b7d content_len=29)\nENTER add_response_entry_n: response=0x55d5b5f002a0 kind=1 header=0x55d599509b9b header_len=4 content=0x55d599509be0 content_len=29\nCheck header for '\\t' (header=0x55d599509b9b, header_len=4)\nmemchr(header,'\\t',4) -> (nil)\nCheck header for ' ' (header=0x55d599509b9b, header_len=4)\nmemchr(header,' ',4) -> (nil)\nCheck header for '\\r' (header=0x55d599509b9b, header_len=4)\nmemchr(header,'\\r',4) -> (nil)\nCheck header for '\\n' (header=0x55d599509b9b, header_len=4)\nmemchr(header,'\\n',4) -> (nil)\nCheck content for '\\r' (content=0x55d599509be0, content_len=29)\nmemchr(content,'\\r',29) -> (nil)\nCheck content for '\\n' (content=0x55d599509be0, content_len=29)\nmemchr(content,'\\n',29) -> (nil)\nCalling MHD_add_response_entry_no_check_ (response=0x55d"
}