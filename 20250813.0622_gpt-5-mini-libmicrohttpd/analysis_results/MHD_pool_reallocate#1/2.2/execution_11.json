{
  "result": "success",
  "message": "ENTRY: pool=0x55922d428ae0 end=32640 pos=64 size=32768 old=(nil) old_size=0 new_size=32576\nASSERT CHECK: pool->end >= pool->pos -> 1\nASSERT CHECK: pool->size >= pool->end - pool->pos -> 1\nASSERT CHECK: old != NULL || old_size == 0 -> 1\nASSERT CHECK: pool->size >= old_size -> 1\nASSERT CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) -> 1\nALLOC PATH: computed asize=32576 for new_size=32576\nALLOC: new_blc=0x55922d428b50 old pool->pos=64 asize=32576\nALLOC: updated pool->pos=32640\nRETURN NEW: returning new_blc=0x55922d428b50\nENTRY: pool=0x55922d428ae0 end=32640 pos=64 size=32768 old=(nil) old_size=0 new_size=32576\nASSERT CHECK: pool->end >= pool->pos -> 1\nASSERT CHECK: pool->size >= pool->end - pool->pos -> 1\nASSERT CHECK: old != NULL || old_size == 0 -> 1\nASSERT CHECK: pool->size >= old_size -> 1\nASSERT CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) -> 1\nALLOC PATH: computed asize=32576 for new_size=32576\nALLOC: new_blc=0x55922d428b50 old pool->pos=64 asize=32576\nALLOC: updated pool->pos=32640\nRETURN NEW: returning new_blc=0x55922d428b50\nENTRY: pool=0x55922d428ae0 end=32640 pos=64 size=32768 old=(nil) old_size=0 new_size=32576\nASSERT CHECK: pool->end >= pool->pos -> 1\nASSERT CHECK: pool->size >= pool->end - pool->pos -> 1\nASSERT CHECK: old != NULL || old_size == 0 -> 1\nASSERT CHECK: pool->size >= old_size -> 1\nASSERT CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) -> 1\nALLOC PATH: computed asize=32576 for new_size=32576\nALLOC: new_blc=0x55922d431f70 old pool->pos=64 asize=32576\nALLOC: updated pool->pos=32640\nRETURN NEW: returning new_blc=0x55922d431f70\nENTRY: pool=0x7feaa0000de0 end=32640 pos=64 size=32768 old=(nil) old_size=0 new_size=32576\nASSERT CHECK: pool->end >= pool->pos -> 1\nASSERT CHECK: pool->size >= pool->end - pool->pos -> 1\nASSERT CHECK: old != NULL || old_size == 0 -> 1\nASSERT CHECK: pool->size >= old_size -> 1\nASSERT CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) -> 1\nALLOC PATH: computed asize=32576 for new_size=32576\nALLOC: new_blc=0x7feaa0000e50 old pool->pos=64 asize=32576\nALLOC: updated pool->pos=32640\nRETURN NEW: returning new_blc=0x7feaa0000e50\nENTRY: pool=0x7feaa0000de0 end=32640 pos=64 size=32768 old=(nil) old_size=0 new_size=32576\nASSERT CHECK: pool->end >= pool->pos -> 1\nASSERT CHECK: pool->size >= pool->end - pool->pos -> 1\nASSERT CHECK: old != NULL || old_size == 0 -> 1\nASSERT CHECK: pool->size >= old_size -> 1\nASSERT CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) -> 1\nALLOC PATH: computed asize=32576 for new_size=32576\nALLOC: new_blc=0x7feaa0000e50 old pool->pos=64 asize=32576\nALLOC: updated pool->pos=32640\nRETURN NEW: returning new_blc=0x7feaa0000e50\nENTRY: pool=0x7feaa0000de0 end=32640 pos=64 size=32768 old=(nil) old_size=0 new_size=32576\nASSERT CHECK: pool->end >= pool->pos -> 1\nASSERT CHECK: pool->size >= pool->end - pool->pos -> 1\nASSERT CHECK: old != NULL || old_size == 0 -> 1\nASSERT CHECK: pool->size >= old_size -> 1\nASSERT CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) -> 1\nALLOC PATH: computed asize=32576 for new_size=32576\nALLOC: new_blc=0x7feaa0000e50 old pool->pos=64 asize=32576\nALLOC: updated pool->pos=32640\nRETURN NEW: returning new_blc=0x7feaa0000e50\nENTRY: pool=0x7feaa0000de0 end=32640 pos=64 size=32768 old=(nil) old_size=0 new_size=32576\nASSERT CHECK: pool->end >= pool->pos -> 1\nASSERT CHECK: pool->size >= pool->end - pool->pos -> 1\nASSERT CHECK: old != NULL || old_size == 0 -> 1\nASSERT CHECK: pool->size >= old_size -> 1\nASSERT CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) -> 1\nALLOC PATH: computed asize=32576 for new_size=32576\nALLOC: new_blc=0x7feaa0000e50 old pool->pos=64 asize=32576\nALLOC: updated pool->pos=32640\nRETURN NEW: returning new_blc=0x7feaa0000e50\nENTRY: pool=0x7feaa0000de0 end=32640 pos=64 size=32768 old=(nil) old_size=0 new_size=32576\nASSERT CHECK: pool->end >= pool->pos -> 1\nASSERT CHECK: pool->size >= pool->end - pool->pos -> 1\nASSERT CHECK: old != NULL || old_size == 0 -> 1\nASSERT CHECK: pool->size >= old_size -> 1\nASSERT CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) -> 1\nALLOC PATH: computed asize=32576 for new_size=32576\nALLOC: new_blc=0x7feaa0000e50 old pool->pos=64 "
}