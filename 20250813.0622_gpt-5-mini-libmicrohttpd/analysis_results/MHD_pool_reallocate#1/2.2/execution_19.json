{
  "result": "success",
  "message": "ENTRY: pool=0x55e9b5040ae0 pos=64 end=32640 size=32768 memory=0x55e9b5040b10 old=(nil) old_size=0 new_size=32576\nASSERT_CHECK: pool->end >= pool->pos (pos=64 end=32640)\nASSERT_CHECK: pool->size >= pool->end - pool->pos (size=32768 end-pos=32576)\nASSERT_CHECK: old!=NULL || old_size==0 (old=(nil) old_size=0)\nASSERT_CHECK: pool->size >= old_size (pool->size=32768 old_size=0)\nASSERT_CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) (pos=64)\nALLOC: need new block asize=32576 new_size=32576 pool->pos=64 pool->end=32640\nACTION: allocated new block new_blc=0x55e9b5040b50 new_pos=32640\nRETURN: new block=0x55e9b5040b50\nENTRY: pool=0x55e9b5040ae0 pos=64 end=32640 size=32768 memory=0x55e9b5040b10 old=(nil) old_size=0 new_size=32576\nASSERT_CHECK: pool->end >= pool->pos (pos=64 end=32640)\nASSERT_CHECK: pool->size >= pool->end - pool->pos (size=32768 end-pos=32576)\nASSERT_CHECK: old!=NULL || old_size==0 (old=(nil) old_size=0)\nASSERT_CHECK: pool->size >= old_size (pool->size=32768 old_size=0)\nASSERT_CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) (pos=64)\nALLOC: need new block asize=32576 new_size=32576 pool->pos=64 pool->end=32640\nACTION: allocated new block new_blc=0x55e9b5040b50 new_pos=32640\nRETURN: new block=0x55e9b5040b50\nENTRY: pool=0x55e9b5040ae0 pos=64 end=32640 size=32768 memory=0x55e9b5049f30 old=(nil) old_size=0 new_size=32576\nASSERT_CHECK: pool->end >= pool->pos (pos=64 end=32640)\nASSERT_CHECK: pool->size >= pool->end - pool->pos (size=32768 end-pos=32576)\nASSERT_CHECK: old!=NULL || old_size==0 (old=(nil) old_size=0)\nASSERT_CHECK: pool->size >= old_size (pool->size=32768 old_size=0)\nASSERT_CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) (pos=64)\nALLOC: need new block asize=32576 new_size=32576 pool->pos=64 pool->end=32640\nACTION: allocated new block new_blc=0x55e9b5049f70 new_pos=32640\nRETURN: new block=0x55e9b5049f70\nENTRY: pool=0x7fcae4000de0 pos=64 end=32640 size=32768 memory=0x7fcae4000e10 old=(nil) old_size=0 new_size=32576\nASSERT_CHECK: pool->end >= pool->pos (pos=64 end=32640)\nASSERT_CHECK: pool->size >= pool->end - pool->pos (size=32768 end-pos=32576)\nASSERT_CHECK: old!=NULL || old_size==0 (old=(nil) old_size=0)\nASSERT_CHECK: pool->size >= old_size (pool->size=32768 old_size=0)\nASSERT_CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) (pos=64)\nALLOC: need new block asize=32576 new_size=32576 pool->pos=64 pool->end=32640\nACTION: allocated new block new_blc=0x7fcae4000e50 new_pos=32640\nRETURN: new block=0x7fcae4000e50\nENTRY: pool=0x7fcae4000de0 pos=64 end=32640 size=32768 memory=0x7fcae4000e10 old=(nil) old_size=0 new_size=32576\nASSERT_CHECK: pool->end >= pool->pos (pos=64 end=32640)\nASSERT_CHECK: pool->size >= pool->end - pool->pos (size=32768 end-pos=32576)\nASSERT_CHECK: old!=NULL || old_size==0 (old=(nil) old_size=0)\nASSERT_CHECK: pool->size >= old_size (pool->size=32768 old_size=0)\nASSERT_CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) (pos=64)\nALLOC: need new block asize=32576 new_size=32576 pool->pos=64 pool->end=32640\nACTION: allocated new block new_blc=0x7fcae4000e50 new_pos=32640\nRETURN: new block=0x7fcae4000e50\nENTRY: pool=0x7fcae4000de0 pos=64 end=32640 size=32768 memory=0x7fcae4000e10 old=(nil) old_size=0 new_size=32576\nASSERT_CHECK: pool->end >= pool->pos (pos=64 end=32640)\nASSERT_CHECK: pool->size >= pool->end - pool->pos (size=32768 end-pos=32576)\nASSERT_CHECK: old!=NULL || old_size==0 (old=(nil) old_size=0)\nASSERT_CHECK: pool->size >= old_size (pool->size=32768 old_size=0)\nASSERT_CHECK: pool->pos == ROUND_TO_ALIGN(pool->pos) (pos=64)\nALLOC: need new block asize=32576 new_size=32576 pool->pos=64 pool->end=32640\nACTION: allocated new block new_blc=0x7fcae4000e50 new_pos=32640\nRETURN: new block=0x7fcae4000e50\nENTRY: pool=0x7fcae4000de0 pos=64 end=32640 size=32768 memory=0x7fcae4000e10 old=(nil) old_size=0 new_size=32576\nASSERT_CHECK: pool->end >= pool->pos (pos=64 end=32640)\nASSERT_CHECK: pool->size >= pool->end - pool->pos (size=32768 end-pos=32576)\nASSERT_CHECK: old!=NULL || old_size==0 (old=(nil) old_size=0)\nASSERT_CHECK: pool->size >= old_size (pool->size=32768 old_size=0)\nASSERT_CHECK: pool->pos == ROUND_TO_ALIGN(p"
}