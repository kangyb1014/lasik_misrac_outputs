{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.1 is: A project shall not contain unreachable code.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of mhd_tool_get_sys_cpu_count_sysconf_:\n```c\nstatic int\nmhd_tool_get_sys_cpu_count_sysconf_ (void)\n{\n  int ret = -1;\n#if defined(HAVE_SYSCONF) && \\\n  (defined(HAS_DECL__SC_NPROCESSORS_ONLN) || defined(HAS_DECL__SC_NPROC_ONLN))\n  long value = -1;\n#ifdef HAS_DECL__SC_NPROCESSORS_ONLN\n  if (0 >= value)\n    value = sysconf (_SC_NPROCESSORS_ONLN);\n#endif /* HAS_DECL__SC_NPROCESSORS_ONLN */\n#ifdef HAS_DECL__SC_NPROC_ONLN\n  if (0 >= value)\n    value = sysconf (_SC_NPROC_ONLN);\n#endif /* HAS_DECL__SC_NPROC_ONLN */\n  if (0 >= value)\n    return -1;\n  ret = (int) value;\n  if ((long) ret != value)\n    return -1; /* Overflow */\n#endif /* HAVE_SYSCONF &&\n          (HAS_DECL__SC_NPROCESSORS_ONLN || HAS_DECL__SC_NPROC_ONLN) */\n  return ret;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function mhd_tool_get_sys_cpu_count_sysconf_:\n#define HAVE_SYSCONF 1\n...\n#define HAS_DECL__SC_NPROCESSORS_ONLN 1\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\n#ifdef HAS_DECL__SC_NPROC_ONLN\n  if (0 >= value)\n    value = sysconf (_SC_NPROC_ONLN);\n#endif /* HAS_DECL__SC_NPROC_ONLN */\n```\nFocus on the above code fragment and judge whether it violates the rule 2.1 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "No violation in the given configuration: HAS_DECL__SC_NPROC_ONLN is not defined, so the #ifdef block is excluded by the preprocessor and no unreachable code is produced. If both HAS_DECL__SC_NPROCESSORS_ONLN and HAS_DECL__SC_NPROC_ONLN were defined the runtime if (0 >= value) guard makes the second sysconf call reachable only when the first did not produce a positive value, so still not unreachable."
}