{
  "user_message": "<misra_rule>\nMISRA C 2023 Rule 2.1 is: A project shall not contain unreachable code.\n\n</misra_rule>\n<response format>\nProvide your answer with these fields.\n- is_rule_violated: whether the rule is violated or not (true/false),\n- scenario: a specific violation scenario.\n</response format>\n<target_code>\nHere is the code of mhd_tool_get_sys_cpu_count_sysconf_fallback_:\n```c\nstatic int\nmhd_tool_get_sys_cpu_count_sysconf_fallback_ (void)\n{\n  int ret = -1;\n#if defined(HAVE_SYSCONF) && \\\n  (defined(HAS_DECL__SC_CRAY_NCPU) || defined(HAS_DECL__SC_NPROCESSORS_CONF))\n  long value = -1;\n#ifdef HAS_DECL__SC_CRAY_NCPU\n  if (0 >= value)\n    value = sysconf (_SC_CRAY_NCPU);\n#endif /* HAS_DECL__SC_CRAY_NCPU */\n#ifdef HAS_DECL__SC_NPROCESSORS_CONF\n  if (0 >= value)\n    value = sysconf (_SC_NPROCESSORS_CONF);\n#endif /* HAS_DECL__SC_NPROCESSORS_CONF */\n  if (0 >= value)\n    return -1;\n  ret = (int) value;\n  if ((long) ret != value)\n    return -1; /* Overflow */\n#endif /* HAVE_SYSCONF &&\n          (HAS_DECL__SC_CRAY_NCPU || HAS_DECL__SC_NPROCESSORS_CONF) */\n  return ret;\n}\n```\n</target_code>\n<additional code>Here are the definitions of symbols that are close to the target function mhd_tool_get_sys_cpu_count_sysconf_fallback_:\n#define HAVE_SYSCONF 1\n...\n#define HAS_DECL__SC_NPROCESSORS_CONF 1\n</additional code>\n<target_code>\nHere is the code fragment that you need to analyze:\n```c\n#ifdef HAS_DECL__SC_CRAY_NCPU\n  if (0 >= value)\n    value = sysconf (_SC_CRAY_NCPU);\n#endif /* HAS_DECL__SC_CRAY_NCPU */\n```\nFocus on the above code fragment and judge whether it violates the rule 2.1 or not.\n</target_code>\n",
  "is_rule_violated": false,
  "scenario": "Not violated. The fragment is conditionally compiled with #ifdef HAS_DECL__SC_CRAY_NCPU; given the provided defines (HAVE_SYSCONF=1 and HAS_DECL__SC_NPROCESSORS_CONF=1, and no definition shown for HAS_DECL__SC_CRAY_NCPU), the block is omitted at preprocessing time rather than being unreachable at runtime. Even if HAS_DECL__SC_CRAY_NCPU were defined, value is initialized to -1 just before the test (if (0 >= value)) so the branch is reachable and will be taken, so there is no unreachable code in this fragment."
}