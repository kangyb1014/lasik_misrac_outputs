{
  "result": "success",
  "message": "[probe] enter lfs_file_open:\n  lfs=0x7ffd7232e968\n  mlist=(nil)\n  node (file as mlist node)=0x7ffd7232e700\n  file=0x7ffd7232e700\n  path=\"breakfast/bacon\"\n  flags=0x902\n  note: LFS_ASSERT will check: !lfs_mlist_isopen(mlist, node)\n\n[lfs_file_open] lfs_file_open_ returned: err=0, lfs=0x7ffd7232e968, file=0x7ffd7232e700, path=\"breakfast/bacon\"\n[lfs_file_open] return err=0\n\n[probe] enter lfs_file_open:\n  lfs=0x7ffd7232e968\n  mlist=0x7ffd7232e700\n  node (file as mlist node)=0x7ffd7232e768\n  file=0x7ffd7232e768\n  path=\"breakfast/eggs\"\n  flags=0x902\n  note: LFS_ASSERT will check: !lfs_mlist_isopen(mlist, node)\n\n[lfs_file_open] lfs_file_open_ returned: err=0, lfs=0x7ffd7232e968, file=0x7ffd7232e768, path=\"breakfast/eggs\"\n[lfs_file_open] return err=0\n\n[probe] enter lfs_file_open:\n  lfs=0x7ffd7232e968\n  mlist=0x7ffd7232e768\n  node (file as mlist node)=0x7ffd7232e7d0\n  file=0x7ffd7232e7d0\n  path=\"breakfast/pancakes\"\n  flags=0x902\n  note: LFS_ASSERT will check: !lfs_mlist_isopen(mlist, node)\n\n[lfs_file_open] lfs_file_open_ returned: err=0, lfs=0x7ffd7232e968, file=0x7ffd7232e7d0, path=\"breakfast/pancakes\"\n[lfs_file_open] return err=0\n\n[probe] enter lfs_file_open:\n  lfs=0x7ffd7232e968\n  mlist=(nil)\n  node (file as mlist node)=0x7ffd7232e900\n  file=0x7ffd7232e900\n  path=\"breakfast/bacon\"\n  flags=0x1\n  note: LFS_ASSERT will check: !lfs_mlist_isopen(mlist, node)\n\n[lfs_file_open] lfs_file_open_ returned: err=0, lfs=0x7ffd7232e968, file=0x7ffd7232e900, path=\"breakfast/bacon\"\n[lfs_file_open] return err=0\n\n[probe] enter lfs_file_open:\n  lfs=0x7ffd7232e968\n  mlist=(nil)\n  node (file as mlist node)=0x7ffd7232e900\n  file=0x7ffd7232e900\n  path=\"breakfast/eggs\"\n  flags=0x1\n  note: LFS_ASSERT will check: !lfs_mlist_isopen(mlist, node)\n\n[lfs_file_open] lfs_file_open_ returned: err=0, lfs=0x7ffd7232e968, file=0x7ffd7232e900, path=\"breakfast/eggs\"\n[lfs_file_open] return err=0\n\n[probe] enter lfs_file_open:\n  lfs=0x7ffd7232e968\n  mlist=(nil)\n  node (file as mlist node)=0x7ffd7232e900\n  file=0x7ffd7232e900\n  path=\"breakfast/pancakes\"\n  flags=0x1\n  note: LFS_ASSERT will check: !lfs_mlist_isopen(mlist, node)\n\n[lfs_file_open] lfs_file_open_ returned: err=0, lfs=0x7ffd7232e968, file=0x7ffd7232e900, path=\"breakfast/pancakes\"\n[lfs_file_open] return err=0\n\n[probe] enter lfs_file_open:\n  lfs=0x7ffd7232e968\n  mlist=(nil)\n  node (file as mlist node)=0x7ffd7232e700\n  file=0x7ffd7232e700\n  path=\"breakfast/bacon\"\n  flags=0x902\n  note: LFS_ASSERT will check: !lfs_mlist_isopen(mlist, node)\n\n[lfs_file_open] lfs_file_open_ returned: err=0, lfs=0x7ffd7232e968, file=0x7ffd7232e700, path=\"breakfast/bacon\"\n[lfs_file_open] return err=0\n\n[probe] enter lfs_file_open:\n  lfs=0x7ffd7232e968\n  mlist=0x7ffd7232e700\n  node (file as mlist node)=0x7ffd7232e768\n  file=0x7ffd7232e768\n  path=\"breakfast/eggs\"\n  flags=0x902\n  note: LFS_ASSERT will check: !lfs_mlist_isopen(mlist, node)\n\n[lfs_file_open] lfs_file_open_ returned: err=0, lfs=0x7ffd7232e968, file=0x7ffd7232e768, path=\"breakfast/eggs\"\n[lfs_file_open] return err=0\n\n[probe] enter lfs_file_open:\n  lfs=0x7ffd7232e968\n  mlist=0x7ffd7232e768\n  node (file as mlist node)=0x7ffd7232e7d0\n  file=0x7ffd7232e7d0\n  path=\"breakfast/pancakes\"\n  flags=0x902\n  note: LFS_ASSERT will check: !lfs_mlist_isopen(mlist, node)\n\n[lfs_file_open] lfs_file_open_ returned: err=0, lfs=0x7ffd7232e968, file=0x7ffd7232e7d0, path=\"breakfast/pancakes\"\n[lfs_file_open] return err=0\n\n[probe] enter lfs_file_open:\n  lfs=0x7ffd7232e968\n  mlist=(nil)\n  node (file as mlist node)=0x7ffd7232e900\n  file=0x7ffd7232e900\n  path=\"breakfast/bacon\"\n  flags=0x1\n  note: LFS_ASSERT will check: !lfs_mlist_isopen(mlist, node)\n\n[lfs_file_open] lfs_file_open_ returned: err=0, lfs=0x7ffd7232e968, file=0x7ffd7232e900, path=\"breakfast/bacon\"\n[lfs_file_open] return err=0\n\n[probe] enter lfs_file_open:\n  lfs=0x7ffd7232e968\n  mlist=(nil)\n  node (file as mlist node)=0x7ffd7232e900\n  file=0x7ffd7232e900\n  path=\"breakfast/eggs\"\n  flags=0x1\n  note: LFS_ASSERT will check: !lfs_mlist_isopen(mlist, node)\n\n[lfs_file_open] lfs_file_open_ returned: err=0, lfs=0x7ffd7232e968, file=0x7ffd7232e900, path=\"bre"
}