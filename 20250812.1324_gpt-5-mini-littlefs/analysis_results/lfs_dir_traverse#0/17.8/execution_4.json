{
  "result": "success",
  "message": "ENTRY: sp=0, param_diff=0, stack_diff=0\nPUSH: sp=0, param_diff=0, stack_diff=0\nPUSH_CLEAR_BEFORE: sp=1, param_diff=0, stack_diff=0\nPUSH_CLEAR_AFTER: sp=1, param_diff=0, stack_diff=0\nPOP_BEFORE_RESTORE: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_BEFORE_ASSIGN: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_AFTER_ASSIGN: sp=0, param_diff=0, stack_diff=0\nPUSH: sp=0, param_diff=0, stack_diff=0\nPUSH_CLEAR_BEFORE: sp=1, param_diff=0, stack_diff=0\nPUSH_CLEAR_AFTER: sp=1, param_diff=0, stack_diff=0\nPOP_BEFORE_RESTORE: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_BEFORE_ASSIGN: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_AFTER_ASSIGN: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nPUSH: sp=0, param_diff=0, stack_diff=0\nPUSH_CLEAR_BEFORE: sp=1, param_diff=0, stack_diff=0\nPUSH_CLEAR_AFTER: sp=1, param_diff=0, stack_diff=0\nPOP_BEFORE_RESTORE: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_BEFORE_ASSIGN: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_AFTER_ASSIGN: sp=0, param_diff=0, stack_diff=0\nPUSH: sp=0, param_diff=0, stack_diff=0\nPUSH_CLEAR_BEFORE: sp=1, param_diff=0, stack_diff=0\nPUSH_CLEAR_AFTER: sp=1, param_diff=0, stack_diff=0\nPOP_BEFORE_RESTORE: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_BEFORE_ASSIGN: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_AFTER_ASSIGN: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nPUSH: sp=0, param_diff=0, stack_diff=0\nPUSH_CLEAR_BEFORE: sp=1, param_diff=0, stack_diff=0\nPUSH_CLEAR_AFTER: sp=1, param_diff=0, stack_diff=0\nPOP_BEFORE_RESTORE: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_BEFORE_ASSIGN: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_AFTER_ASSIGN: sp=0, param_diff=0, stack_diff=0\nPUSH: sp=0, param_diff=0, stack_diff=0\nPUSH_CLEAR_BEFORE: sp=1, param_diff=0, stack_diff=0\nPUSH_CLEAR_AFTER: sp=1, param_diff=0, stack_diff=0\nPOP_BEFORE_RESTORE: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_BEFORE_ASSIGN: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_AFTER_ASSIGN: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nPUSH: sp=0, param_diff=0, stack_diff=0\nPUSH_CLEAR_BEFORE: sp=1, param_diff=0, stack_diff=0\nPUSH_CLEAR_AFTER: sp=1, param_diff=0, stack_diff=0\nPOP_BEFORE_RESTORE: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_BEFORE_ASSIGN: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_AFTER_ASSIGN: sp=0, param_diff=0, stack_diff=0\nPUSH: sp=0, param_diff=0, stack_diff=0\nPUSH_CLEAR_BEFORE: sp=1, param_diff=0, stack_diff=0\nPUSH_CLEAR_AFTER: sp=1, param_diff=0, stack_diff=0\nPOP_BEFORE_RESTORE: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_BEFORE_ASSIGN: sp=1, param_diff=0, stack_diff=0\nPOP_RESTORE_DIFF_AFTER_ASSIGN: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENTRY: sp=0, param_diff=0, stack_diff=0\nEXIT: sp=0, param_diff=0, stack_diff=0\nENT"
}